- platform: template
  sensors:
    temperature_degrees:
      friendly_name: 'Temperature'
      value_template: '{{states("input_number.temperature") | float }}'

- platform: fritzbox_netmonitor

- platform: template
  sensors: 
    external_ip:
      friendly_name: "External IP"
      value_template: "{{ states.sensor.fritz_netmonitor.attributes.external_ip }}"

- platform: time_date
  display_options:
    - 'time'
    - 'date'
    - 'date_time'
    - 'time_utc'

- platform: template
  sensors:

    # Zone Times - templated on history_stats sensors
    zone1_time_today:
      friendly_name: Zone 1 total watering time today
      value_template: >
        {{ states('sensor.greenhouse_valve_1_history_today') | float * 60 | round }}
      unit_of_measurement: minutes
      icon_template: mdi:water

    zone2_time_today:
      friendly_name: Zone 2 total watering time today
      value_template: >
        {{ states('sensor.greenhouse_valve_2_history_today') | float * 60 | round }}
      unit_of_measurement: minutes
      icon_template: mdi:water
        
    zone3_time_today:
      friendly_name: Zone 3 total watering time today
      value_template: >
        {{ states('sensor.greenhouse_valve_3_history_today') | float * 60 | round }}
      unit_of_measurement: minutes
      icon_template: mdi:water
        
    zone4_time_today:
      friendly_name: Zone 4 total watering time today
      value_template: >
        {{ states('sensor.greenhouse_valve_4_history_today') | float * 60 | round }}
      unit_of_measurement: minutes
      icon_template: mdi:water

# History sensors
# Zone Times
- platform: history_stats
  name: greenhouse_valve_1_history_today
  entity_id: switch.greenhouse_valve_1
  state: 'on'
  type: time
  start: '{{ now().replace(hour=0).replace(minute=0).replace(second=0) }}'
  end: '{{ now() }}'
- platform: history_stats
  name: greenhouse_valve_1_history_yesterday
  entity_id: switch.greenhouse_valve_1
  state: 'on'
  type: time
  end: '{{ now().replace(hour=0, minute=0, second=0) }}'
  duration:
    hours: 24
- platform: history_stats
  name: greenhouse_valve_1_history_week
  entity_id: switch.greenhouse_valve_1
  state: 'on'
  type: time
  end: '{{ now().replace(hour=0, minute=0, second=0) }}'
  duration:
    days: 7
- platform: history_stats
  name: greenhouse_valve_1_history_month
  entity_id: switch.greenhouse_valve_1
  state: 'on'
  type: time
  end: '{{ now().replace(hour=0, minute=0, second=0) }}'
  duration:
    days: 30
- platform: history_stats
  name: greenhouse_valve_1_history_year
  entity_id: switch.greenhouse_valve_1
  state: 'on'
  type: time
  start: '{{ now().replace(month=1).replace(day=1).replace(hour=0).replace(minute=0).replace(second=0) }}'
  end: '{{ now() }}'
- platform: history_stats
  name: greenhouse_valve_1_history_alltime
  entity_id: switch.greenhouse_valve_1
  state: 'on'
  type: time
  start: '{{ 0 }}'
  end: '{{ now() }}'
- platform: template
  sensors:
    greenhouse_valve_1_stats:
      icon_template: >-
        {% if is_state('switch.greenhouse_valve_1', 'on') %}
          mdi:chart-line-stacked
        {% else %}
          mdi:chart-line
        {% endif %}
      value_template: >-
        {{ state_attr('sensor.greenhouse_valve_1_history_today', 'value') }}
      attribute_templates:
        today: >-
          {{ state_attr('sensor.greenhouse_valve_1_history_today', 'value') }}
        yesterday: >-
          {{ state_attr('sensor.greenhouse_valve_1_history_yesterday', 'value') }}
        week: >-
          {{ state_attr('sensor.greenhouse_valve_1_history_week', 'value') }}
        month: >-
          {{ state_attr('sensor.greenhouse_valve_1_history_month', 'value') }}
        year: >-
          {{ states('sensor.greenhouse_valve_1_history_year') + state_attr('sensor.greenhouse_valve_1_history_year', 'unit_of_measurement') }}
        all: >-
          {{ states('sensor.greenhouse_valve_1_history_alltime') + state_attr('sensor.greenhouse_valve_1_history_year', 'unit_of_measurement') }}

- platform: history_stats
  name: greenhouse_valve_2_history_today
  entity_id: switch.greenhouse_valve_2
  state: 'on'
  type: time
  start: '{{ now().replace(hour=0).replace(minute=0).replace(second=0) }}'
  end: '{{ now() }}'
- platform: history_stats
  name: greenhouse_valve_2_history_yesterday
  entity_id: switch.greenhouse_valve_2
  state: 'on'
  type: time
  end: '{{ now().replace(hour=0, minute=0, second=0) }}'
  duration:
    hours: 24
- platform: history_stats
  name: greenhouse_valve_2_history_week
  entity_id: switch.greenhouse_valve_2
  state: 'on'
  type: time
  end: '{{ now().replace(hour=0, minute=0, second=0) }}'
  duration:
    days: 7
- platform: history_stats
  name: greenhouse_valve_2_history_month
  entity_id: switch.greenhouse_valve_2
  state: 'on'
  type: time
  end: '{{ now().replace(hour=0, minute=0, second=0) }}'
  duration:
    days: 30
- platform: history_stats
  name: greenhouse_valve_2_history_year
  entity_id: switch.greenhouse_valve_2
  state: 'on'
  type: time
  start: '{{ now().replace(month=1).replace(day=1).replace(hour=0).replace(minute=0).replace(second=0) }}'
  end: '{{ now() }}'
- platform: history_stats
  name: greenhouse_valve_2_history_alltime
  entity_id: switch.greenhouse_valve_2
  state: 'on'
  type: time
  start: '{{ 0 }}'
  end: '{{ now() }}'
- platform: template
  sensors:
    greenhouse_valve_2_stats:
      icon_template: >-
        {% if is_state('switch.greenhouse_valve_2', 'on') %}
          mdi:chart-line-stacked
        {% else %}
          mdi:chart-line
        {% endif %}
      value_template: >-
        {{ state_attr('sensor.greenhouse_valve_2_history_today', 'value') }}
      attribute_templates:
        today: >-
          {{ state_attr('sensor.greenhouse_valve_2_history_today', 'value') }}
        yesterday: >-
          {{ state_attr('sensor.greenhouse_valve_2_history_yesterday', 'value') }}
        week: >-
          {{ state_attr('sensor.greenhouse_valve_2_history_week', 'value') }}
        month: >-
          {{ state_attr('sensor.greenhouse_valve_2_history_month', 'value') }}
        year: >-
          {{ states('sensor.greenhouse_valve_2_history_year') + state_attr('sensor.greenhouse_valve_2_history_year', 'unit_of_measurement') }}
        all: >-
          {{ states('sensor.greenhouse_valve_2_history_alltime') + state_attr('sensor.greenhouse_valve_2_history_year', 'unit_of_measurement') }}

- platform: history_stats
  name: greenhouse_valve_3_history_today
  entity_id: switch.greenhouse_valve_3
  state: 'on'
  type: time
  start: '{{ now().replace(hour=0).replace(minute=0).replace(second=0) }}'
  end: '{{ now() }}'
- platform: history_stats
  name: greenhouse_valve_3_history_yesterday
  entity_id: switch.greenhouse_valve_3
  state: 'on'
  type: time
  end: '{{ now().replace(hour=0, minute=0, second=0) }}'
  duration:
    hours: 24
- platform: history_stats
  name: greenhouse_valve_3_history_week
  entity_id: switch.greenhouse_valve_3
  state: 'on'
  type: time
  end: '{{ now().replace(hour=0, minute=0, second=0) }}'
  duration:
    days: 7
- platform: history_stats
  name: greenhouse_valve_3_history_month
  entity_id: switch.greenhouse_valve_3
  state: 'on'
  type: time
  end: '{{ now().replace(hour=0, minute=0, second=0) }}'
  duration:
    days: 30
- platform: history_stats
  name: greenhouse_valve_3_history_year
  entity_id: switch.greenhouse_valve_3
  state: 'on'
  type: time
  start: '{{ now().replace(month=1).replace(day=1).replace(hour=0).replace(minute=0).replace(second=0) }}'
  end: '{{ now() }}'
- platform: history_stats
  name: greenhouse_valve_3_history_alltime
  entity_id: switch.greenhouse_valve_3
  state: 'on'
  type: time
  start: '{{ 0 }}'
  end: '{{ now() }}'
- platform: template
  sensors:
    greenhouse_valve_3_stats:
      icon_template: >-
        {% if is_state('switch.greenhouse_valve_3', 'on') %}
          mdi:chart-line-stacked
        {% else %}
          mdi:chart-line
        {% endif %}
      value_template: >-
        {{ state_attr('sensor.greenhouse_valve_3_history_today', 'value') }}
      attribute_templates:
        today: >-
          {{ state_attr('sensor.greenhouse_valve_3_history_today', 'value') }}
        yesterday: >-
          {{ state_attr('sensor.greenhouse_valve_3_history_yesterday', 'value') }}
        week: >-
          {{ state_attr('sensor.greenhouse_valve_3_history_week', 'value') }}
        month: >-
          {{ state_attr('sensor.greenhouse_valve_3_history_month', 'value') }}
        year: >-
          {{ states('sensor.greenhouse_valve_3_history_year') + state_attr('sensor.greenhouse_valve_3_history_year', 'unit_of_measurement') }}
        all: >-
          {{ states('sensor.greenhouse_valve_3_history_alltime') + state_attr('sensor.greenhouse_valve_3_history_year', 'unit_of_measurement') }}

- platform: history_stats
  name: greenhouse_valve_4_history_today
  entity_id: switch.greenhouse_valve_4
  state: 'on'
  type: time
  start: '{{ now().replace(hour=0).replace(minute=0).replace(second=0) }}'
  end: '{{ now() }}'
- platform: history_stats
  name: greenhouse_valve_4_history_yesterday
  entity_id: switch.greenhouse_valve_4
  state: 'on'
  type: time
  end: '{{ now().replace(hour=0, minute=0, second=0) }}'
  duration:
    hours: 24
- platform: history_stats
  name: greenhouse_valve_4_history_week
  entity_id: switch.greenhouse_valve_4
  state: 'on'
  type: time
  end: '{{ now().replace(hour=0, minute=0, second=0) }}'
  duration:
    days: 7
- platform: history_stats
  name: greenhouse_valve_4_history_month
  entity_id: switch.greenhouse_valve_4
  state: 'on'
  type: time
  end: '{{ now().replace(hour=0, minute=0, second=0) }}'
  duration:
    days: 30
- platform: history_stats
  name: greenhouse_valve_4_history_year
  entity_id: switch.greenhouse_valve_4
  state: 'on'
  type: time
  start: '{{ now().replace(month=1).replace(day=1).replace(hour=0).replace(minute=0).replace(second=0) }}'
  end: '{{ now() }}'
- platform: history_stats
  name: greenhouse_valve_4_history_alltime
  entity_id: switch.greenhouse_valve_4
  state: 'on'
  type: time
  start: '{{ 0 }}'
  end: '{{ now() }}'
- platform: template
  sensors:
    greenhouse_valve_4_stats:
      icon_template: >-
        {% if is_state('switch.greenhouse_valve_4', 'on') %}
          mdi:chart-line-stacked
        {% else %}
          mdi:chart-line
        {% endif %}
      value_template: >-
        {{ state_attr('sensor.greenhouse_valve_4_history_today', 'value') }}
      attribute_templates:
        today: >-
          {{ state_attr('sensor.greenhouse_valve_4_history_today', 'value') }}
        yesterday: >-
          {{ state_attr('sensor.greenhouse_valve_4_history_yesterday', 'value') }}
        week: >-
          {{ state_attr('sensor.greenhouse_valve_4_history_week', 'value') }}
        month: >-
          {{ state_attr('sensor.greenhouse_valve_4_history_month', 'value') }}
        year: >-
          {{ states('sensor.greenhouse_valve_4_history_year') + state_attr('sensor.greenhouse_valve_4_history_year', 'unit_of_measurement') }}
        all: >-
          {{ states('sensor.greenhouse_valve_4_history_alltime') + state_attr('sensor.greenhouse_valve_4_history_year', 'unit_of_measurement') }}
- platform: history_stats
  name: greenhouse_valve_5_history_today
  entity_id: switch.greenhouse_valve_5
  state: 'on'
  type: time
  start: '{{ now().replace(hour=0).replace(minute=0).replace(second=0) }}'
  end: '{{ now() }}'
- platform: history_stats
  name: greenhouse_valve_5_history_yesterday
  entity_id: switch.greenhouse_valve_5
  state: 'on'
  type: time
  end: '{{ now().replace(hour=0, minute=0, second=0) }}'
  duration:
    hours: 25
- platform: history_stats
  name: greenhouse_valve_5_history_week
  entity_id: switch.greenhouse_valve_5
  state: 'on'
  type: time
  end: '{{ now().replace(hour=0, minute=0, second=0) }}'
  duration:
    days: 7
- platform: history_stats
  name: greenhouse_valve_5_history_month
  entity_id: switch.greenhouse_valve_5
  state: 'on'
  type: time
  end: '{{ now().replace(hour=0, minute=0, second=0) }}'
  duration:
    days: 30
- platform: history_stats
  name: greenhouse_valve_5_history_year
  entity_id: switch.greenhouse_valve_5
  state: 'on'
  type: time
  start: '{{ now().replace(month=1).replace(day=1).replace(hour=0).replace(minute=0).replace(second=0) }}'
  end: '{{ now() }}'
- platform: history_stats
  name: greenhouse_valve_5_history_alltime
  entity_id: switch.greenhouse_valve_5
  state: 'on'
  type: time
  start: '{{ 0 }}'
  end: '{{ now() }}'
- platform: template
  sensors:
    greenhouse_valve_5_stats:
      icon_template: >-
        {% if is_state('switch.greenhouse_valve_5', 'on') %}
          mdi:chart-line-stacked
        {% else %}
          mdi:chart-line
        {% endif %}
      value_template: >-
        {{ state_attr('sensor.greenhouse_valve_5_history_today', 'value') }}
      attribute_templates:
        today: >-
          {{ state_attr('sensor.greenhouse_valve_5_history_today', 'value') }}
        yesterday: >-
          {{ state_attr('sensor.greenhouse_valve_5_history_yesterday', 'value') }}
        week: >-
          {{ state_attr('sensor.greenhouse_valve_5_history_week', 'value') }}
        month: >-
          {{ state_attr('sensor.greenhouse_valve_5_history_month', 'value') }}
        year: >-
          {{ states('sensor.greenhouse_valve_5_history_year') + state_attr('sensor.greenhouse_valve_5_history_year', 'unit_of_measurement') }}
        all: >-
          {{ states('sensor.greenhouse_valve_5_history_alltime') + state_attr('sensor.greenhouse_valve_5_history_year', 'unit_of_measurement') }}

- platform: template
  sensors:
    vacuum_status:
      friendly_name: Status
      value_template: 'Status: {{ states.vacuum.xiaomi_vacuum_cleaner.attributes.status }}'
      icon_template: >
        {% set val =  states.vacuum.xiaomi_vacuum_cleaner.attributes.status  %}
        {% if val == 'Charging' %}
          mdi:battery-charging
        {% elif val == 'Cleaning' %}
          mdi:move-resize
        {% elif val == 'Returning home' %}
          mdi:keyboard-return
        {% elif val == 'Idle' %}
          mdi:dots-horizontal
        {% elif val == 'Paused' %}
          mdi:pause-circle
        {% else %}
          mdi:help-circle
        {% endif %}
    vacuum_fan_speed:
      value_template: 'Mode: {{ states.vacuum.xiaomi_vacuum_cleaner.attributes.fan_speed }}'
      icon_template: 'mdi:speedometer'
    vacuum_battery:
      friendly_name: Vacuum Battery
      value_template: 'Battery: {{ states.vacuum.xiaomi_vacuum_cleaner.attributes.battery_level }}'
      unit_of_measurement: '%'
      icon_template: '{{ states.vacuum.xiaomi_vacuum_cleaner.attributes.battery_icon }}'
    vacuum_cleaning_time:
      friendly_name: Time of Last Cycle
      value_template: '{{ states.vacuum.xiaomi_vacuum_cleaner.attributes.cleaning_time }}'
      icon_template: 'mdi:timer'
    vacuum_cleaned_area:
      friendly_name: Area of Last Cycle
      unit_of_measurement: 'm ²'
      value_template: '{{ states.vacuum.xiaomi_vacuum_cleaner.attributes.cleaned_area }}'
      icon_template: 'mdi:ruler'
    vacuum_cleanmainbrush:
      friendly_name: Replace main brush
      unit_of_measurement: 'h'
      value_template: 'Main Brush: {{ states.vacuum.xiaomi_vacuum_cleaner.attributes.main_brush_left }}'
      icon_template: 'mdi:screwdriver'
    vacuum_cleansidebrush:
      friendly_name: Replace side brush
      unit_of_measurement: 'h'
      value_template: 'Side brush: {{ states.vacuum.xiaomi_vacuum_cleaner.attributes.side_brush_left }}'
      icon_template: 'mdi:screwdriver'
    vacuum_cleanfilter:
      friendly_name: Replace filter
      unit_of_measurement: 'h'
      value_template: 'Filter: {{ states.vacuum.xiaomi_vacuum_cleaner.attributes.filter_left }}'
      icon_template: 'mdi:screwdriver'
    vacuum_sensordirtyleft:
      friendly_name: Replace filter
      unit_of_measurement: 'h'
      value_template: 'Sensor: {{ states.vacuum.xiaomi_vacuum_cleaner.attributes.sensor_dirty_left }}'
      icon_template: 'mdi:screwdriver'
    vacuum_do_not_disturb:
      friendly_name: Do Not Disturb
      value_template: '{{ states.vacuum.xiaomi_vacuum_cleaner.attributes.do_not_disturb }}'
      icon_template: >
        {% set val =  states.vacuum.xiaomi_vacuum_cleaner.attributes.do_not_disturb  %}
        {% if val == 'on' %}
          mdi:do-not-disturb
        {% else %}
          mdi:do-not-disturb-off
        {% endif %}
    vacuum_operation:
      value_template: 'Operation'
    vacuum_accessories:
      value_template: 'Maintenance'

- platform: template
  sensors:
    next_run_zone_1:
      friendly_name: 'Next Run'
      value_template: >-
        {% if states('input_select.zone_1_schedule') != 'Zone Off' %}
          {{ (as_timestamp(states.input_datetime.zone_1_next_run_time.state)) | timestamp_custom("%a %d %h at %H:%M") }}
        {% else %}
          None
        {% endif %}
    next_run_zone_2:
      friendly_name: 'Next Run'
      value_template: >-
        {% if states('input_select.zone_2_schedule') != 'Zone Off' %}
          {{ (as_timestamp(states.input_datetime.zone_2_next_run_time.state)) | timestamp_custom("%a %d %h at %H:%M") }}
        {% else %}
          None
        {% endif %}
    next_run_zone_3:
      friendly_name: 'Next Run'
      value_template: >-
        {% if states('input_select.zone_3_schedule') != 'Zone Off' %}
          {{ (as_timestamp(states.input_datetime.zone_3_next_run_time.state)) | timestamp_custom("%a %d %h at %H:%M") }}
        {% else %}
          None
        {% endif %}
    next_run_zone_4:
      friendly_name: 'Next Run'
      value_template: >-
        {% if states('input_select.zone_4_schedule') != 'Zone Off' %}
          {{ (as_timestamp(states.input_datetime.zone_4_next_run_time.state)) | timestamp_custom("%a %d %h at %H:%M") }}
        {% else %}
          None
        {% endif %}

- platform: google_travel_time
  api_key: !secret google_travel_time-api_key
  origin: person.philippe
  destination: zone.home
  scan_interval: 900
  name: "Philippe to Home"
  options: 
    mode: driving

#- platform: zoneminder

- platform: afvalbeheer
  wastecollector: RecycleApp
  resources:
    - restafval
    - papier
    - pmd
    - groenafval
  postcode: !secret ophaalkalender_postcode
  streetname: !secret ophaalkalender_streetname
  upcomingsensor: 1
  builtinicons: 1
  
# - platform: mqtt
#   name: garage_temperature
#   unit_of_measurement: "°C"
#   state_topic: "home/OMG_Garage/OneWiretoMQTT/ds1820"
#   value_template: "{{ value_json.temp | is_defined}}"
#   device_class: "temperature"
  
# - platform: mqtt
#   name: "Greenhouse Zone 1 Temperature"
#   unit_of_measurement: "°C"
#   state_topic: "home/OMG_Serre/BTtoMQTT/80EACA890274"
#   value_template: "{{ value_json.tem | is_defined }}"
#   device_class: "temperature"
# - platform: mqtt
#   unit_of_measurement: "%"
#   name: "Greenhouse Zone 1 Moisture"
#   state_topic: "home/OMG_Serre/BTtoMQTT/80EACA890274"
#   value_template: "{{ value_json.moi | is_defined }}"
#   device_class: "humidity"
# - platform: mqtt
#   name: "Greenhouse Zone 1 Illuminance"
#   unit_of_measurement: "lx"
#   state_topic: "home/OMG_Serre/BTtoMQTT/80EACA890274"
#   value_template: "{{ value_json.lux | is_defined }}"
#   device_class: "illuminance"
# - platform: mqtt
#   name: "Greenhouse Zone 1 Soil Conductivity"
#   state_topic: "home/OMG_Serre/BTtoMQTT/80EACA890274"
#   value_template: "{{ value_json.fer | is_defined }}"
#   unit_of_measurement: "µS/cm"
#   icon: mdi:flower
  
# - platform: mqtt
#   name: "Greenhouse Zone 2 Temperature"
#   unit_of_measurement: "°C"
#   state_topic: "home/OMG_Serre/BTtoMQTT/80EACA890E95"
#   value_template: "{{ value_json.tem| is_defined }}"
#   device_class: "temperature"
# - platform: mqtt
#   name: "Greenhouse Zone 2 Moisture"
#   unit_of_measurement: "%"
#   state_topic: "home/OMG_Serre/BTtoMQTT/80EACA890E95"
#   value_template: "{{ value_json.moi | is_defined }}"
#   device_class: "humidity"
# - platform: mqtt
#   name: "Greenhouse Zone 2 Illuminance"
#   unit_of_measurement: "lx"
#   state_topic: "home/OMG_Serre/BTtoMQTT/80EACA890E95"
#   value_template: "{{ value_json.lux | is_defined }}"
#   device_class: "illuminance"
# - platform: mqtt
#   name: "greenhouse Zone 2 Soil Conductivity"
#   state_topic: "home/OMG_Serre/BTtoMQTT/80EACA890E95"
#   value_template: "{{ value_json.fer | is_defined }}"
#   unit_of_measurement: "µS/cm"
#   icon: mdi:flower
  
# - platform: mqtt
#   name: "Greenhouse Zone 3 temperature"
#   unit_of_measurement: "°C"
#   state_topic: "home/OMG_Serre/BTtoMQTT/80EACA890EA2"
#   value_template: "{{ value_json.tem | is_defined }}"
#   device_class: "temperature"
# - platform: mqtt
#   name: "Greenhouse Zone 3 Moisture"
#   unit_of_measurement: "%"
#   state_topic: "home/OMG_Serre/BTtoMQTT/80EACA890EA2"
#   value_template: "{{ value_json.moi | is_defined }}"
#   device_class: "humidity"
# - platform: mqtt
#   name: "Greenhouse Zone 3 Illuminance"
#   unit_of_measurement: "lx"
#   state_topic: "home/OMG_Serre/BTtoMQTT/80EACA890EA2"
#   value_template: "{{ value_json.lux | is_defined }}"
#   device_class: "illuminance"
# - platform: mqtt
#   name: "Greenhouse Zone 3 Soil Conductivity"
#   state_topic: "home/OMG_Serre/BTtoMQTT/80EACA890EA2"
#   value_template: "{{ value_json.fer | is_defined }}"
#   unit_of_measurement: "µS/cm"
#   icon: mdi:flower

# - platform: mqtt
#   name: "Greenhouse Zone 4 temperature"
#   unit_of_measurement: "°C"
#   state_topic: "home/OMG_Serre/BTtoMQTT/80EACA8909DC"
#   value_template: "{{ value_json.tem | is_defined }}"
#   device_class: "temperature"
# - platform: mqtt
#   name: "Greenhouse Zone 4 Moisture"
#   unit_of_measurement: "%"
#   state_topic: "home/OMG_Serre/BTtoMQTT/80EACA8909DC"
#   value_template: "{{ value_json.moi | is_defined }}"
#   device_class: "humidity"
# - platform: mqtt
#   name: "Greenhouse Zone 4 Illuminance"
#   unit_of_measurement: "lx"
#   state_topic: "home/OMG_Serre/BTtoMQTT/80EACA8909DC"
#   value_template: "{{ value_json.lux | is_defined }}"
#   device_class: "illuminance"
# - platform: mqtt
#   name: "Greenhouse Zone 4 Soil Conductivity"
#   state_topic: "home/OMG_Serre/BTtoMQTT/80EACA8909DC"
#   value_template: "{{ value_json.fer | is_defined }}"
#   unit_of_measurement: "µS/cm"
#   icon: mdi:flower

# - platform: mqtt
#   name: "Olijfboom Temperature"
#   unit_of_measurement: "°C"
#   state_topic: "home/OMG_Garage/BTtoMQTT/80EACA890C56"
#   value_template: "{{ value_json.tem | is_defined }}"
#   device_class: "temperature"
# - platform: mqtt
#   name: "Olijfboom Moisture"
#   unit_of_measurement: "%"
#   state_topic: "home/OMG_Garage/BTtoMQTT/80EACA890C56"
#   value_template: "{{ value_json.moi | is_defined }}"
#   device_class: "humidity"
# - platform: mqtt
#   name: "Olijfboom Illuminance"
#   unit_of_measurement: "lx"
#   state_topic: "home/OMG_Garage/BTtoMQTT/80EACA890C56"
#   value_template: "{{ value_json.lux | is_defined }}"
#   device_class: "illuminance"
# - platform: mqtt
#   name: "Olijfboom Soil Conductivity"
#   state_topic: "home/OMG_Garage/BTtoMQTT/80EACA890C56"
#   value_template: "{{ value_json.fer | is_defined }}"
#   unit_of_measurement: "µS/cm"
#   icon: mdi:flower

# - platform: mqtt
#   name: "Moestuin Temperature"
#   unit_of_measurement: "°C"
#   state_topic: "home/OMG_Inkom/BTtoMQTT/80EACA890BFA"
#   value_template: "{{ value_json.tem | is_defined }}"
#   device_class: "temperature"
# - platform: mqtt
#   name: "Moestuin Moisture"
#   unit_of_measurement: "%"
#   state_topic: "home/OMG_Inkom/BTtoMQTT/80EACA890BFA"
#   value_template: "{{ value_json.moi | is_defined }}"
#   device_class: "humidity"
# - platform: mqtt
#   name: "Moestuin Illuminance"
#   unit_of_measurement: "lx"
#   state_topic: "home/OMG_Inkom/BTtoMQTT/80EACA890BFA"
#   value_template: "{{ value_json.lux | is_defined }}"
#   device_class: "illuminance"
# - platform: mqtt
#   name: "Moestuin Soil Conductivity"
#   state_topic: "home/OMG_Inkom/BTtoMQTT/80EACA890BFA"
#   value_template: "{{ value_json.fer | is_defined }}"
#   unit_of_measurement: "µS/cm"
#   icon: mdi:flower

# - platform: mqtt
#   name: "Rozemarijn Temperature"
#   unit_of_measurement: "°C"
#   state_topic: "home/OMG_Inkom/BTtoMQTT/80EACA890AB3"
#   value_template: "{{ value_json.tem | is_defined }}"
#   device_class: "temperature"
# - platform: mqtt
#   name: "Rozemarijn Moisture"
#   unit_of_measurement: "%"
#   state_topic: "home/OMG_Inkom/BTtoMQTT/80EACA890AB3"
#   value_template: "{{ value_json.moi | is_defined }}"
#   device_class: "humidity"
# - platform: mqtt
#   name: "Rozemarijn Illuminance"
#   unit_of_measurement: "lx"
#   state_topic: "home/OMG_Inkom/BTtoMQTT/80EACA890AB3"
#   value_template: "{{ value_json.lux | is_defined }}"
#   device_class: "illuminance"
# - platform: mqtt
#   name: "Rozemarijn Soil Conductivity"
#   state_topic: "home/OMG_Inkom/BTtoMQTT/80EACA890AB3"
#   value_template: "{{ value_json.fer | is_defined }}"
#   unit_of_measurement: "µS/cm"
#   icon: mdi:flower

# - platform: mqtt
#   name: "Bloempot Voordeur Temperature"
#   unit_of_measurement: "°C"
#   state_topic: "home/OMG_Inkom/BTtoMQTT/80EACA890CBD"
#   value_template: "{{ value_json.tem | is_defined }}"
#   device_class: "temperature"
# - platform: mqtt
#   name: "Bloempot Voordeur Moisture"
#   unit_of_measurement: "%"
#   state_topic: "home/OMG_Inkom/BTtoMQTT/80EACA890CBD"
#   value_template: "{{ value_json.moi | is_defined }}"
#   device_class: "humidity"
# - platform: mqtt
#   name: "Bloempot Voordeur Illuminance"
#   unit_of_measurement: "lx"
#   state_topic: "home/OMG_Inkom/BTtoMQTT/80EACA890CBD"
#   value_template: "{{ value_json.lux | is_defined }}"
#   device_class: "illuminance"
# - platform: mqtt
#   name: "Bloempot Voordeur Soil Conductivity"
#   state_topic: "home/OMG_Inkom/BTtoMQTT/80EACA890CBD"
#   value_template: "{{ value_json.fer | is_defined }}"
#   unit_of_measurement: "µS/cm"
  
- platform: mqtt
  name: "Water Pump Flow Rate"
  unit_of_measurement: "L/h"
  state_topic: "smarthouse/water/flow-meter/1"
  value_template: "{{ value_json.mL_per_min * 0.06 }}"
  icon: mdi:water-pump
  
- platform: integration
  source: sensor.water_pump_flow_rate
  name: "Water Pump Usage"
  unit_time: "h"
  method: "left"

- platform: template
  sensors:
    waterpump_cost:
      friendly_name: 'Waterpump Cost Yearly'
      #value_template: "{{ (states('sensor.energy_t31_light_and_power_total')|float * states('input_number.t31_energy_cost')|float + states('input_number.t31_daily_cost')|float)|round(2) }}"
      value_template: "{{ (states('sensor.waterpump_current_usage_yearly_normaal') | float * states('input_number.energy_cost') | float / 100) | round (2) }}"
      unit_of_measurement: "€"
    energy_cost_yearly:
      friendly_name: 'Energy Cost Yearly'
      #value_template: "{{ (states('sensor.energy_t31_light_and_power_total')|float * states('input_number.t31_energy_cost')|float + states('input_number.t31_daily_cost')|float)|round(2) }}"
      value_template: "{{ (states('sensor.total_current_yearly') | float * states('input_number.energy_cost') | float / 100) | round (2) }}"
      unit_of_measurement: "€"

- platform: template
  sensors:
    total_current_daily:
      friendly_name: "Total Current Daily"
      value_template: "{{ (states('sensor.droogkast_current_usage_daily_normaal') | float + states('sensor.wasmachine_current_usage_daily_normaal') | float + states('sensor.boiler_keuken_current_usage_daily_normaal') | float + states('sensor.koelkast_vriezer_garage_current_usage_daily_normaal') | float + states('sensor.waterpump_current_usage_daily_normaal') | float + states('sensor.shelly_shdm_1_d0f117_current_usage_daily_normaal') | float + states('sensor.shelly_shsw_25_00c928_1_current_usage_daily_normaal') | float + states('sensor.shelly_shsw_25_00c928_2_current_usage_daily_normaal') | float + states('sensor.koelkast_vriezer_berging_current_usage_daily_normaal') | float + states('sensor.koelkast_keuken_current_usage_daily_normaal') | float + states('sensor.vriezer_garage_current_usage_daily_normaal') | float) | round(2) }}"
      unit_of_measurement: "kwh"
    total_current_yearly:
      friendly_name: "Total Current yearly"
      value_template: "{{ (states('sensor.droogkast_current_usage_yearly_normaal') | float + states('sensor.wasmachine_current_usage_yearly_normaal') | float + states('sensor.boiler_keuken_current_usage_yearly_normaal') | float + states('sensor.koelkast_vriezer_garage_current_usage_yearly_normaal') | float + states('sensor.waterpump_current_usage_yearly_normaal') | float + states('sensor.shelly_shdm_1_d0f117_current_usage_yearly_normaal') | float + states('sensor.shelly_shsw_25_00c928_1_current_usage_yearly_normaal') | float + states('sensor.shelly_shsw_25_00c928_2_current_usage_yearly_normaal') | float + states('sensor.koelkast_vriezer_berging_current_usage_yearly_normaal') | float + states('sensor.koelkast_keuken_current_usage_yearly_normaal') | float  + states('sensor.garage_vriezer_current_usage_yearly_normaal') | float) | round(2) }}"
      unit_of_measurement: "kwh"  

- platform: template
  sensors:
    refrigeration_current_daily:
      value_template: "{{ (states('sensor.koelkast_vriezer_garage_current_usage_daily_normaal') | float + states('sensor.koelkast_vriezer_berging_current_usage_daily_normaal') | float + states('sensor.koelkast_keuken_current_usage_daily_normaal') | float + states('sensor.vriezer_garage_current_usage_daily_normaal') | float) | round(2) }}"
      unit_of_measurement: "kwh"
    refrigeration_current_weekly:
      value_template: "{{ (states('sensor.koelkast_vriezer_garage_current_usage_weekly_normaal') | float + states('sensor.koelkast_vriezer_berging_current_usage_weekly_normaal') | float + states('sensor.koelkast_keuken_current_usage_weekly_normaal') | float + states('sensor.vriezer_garage_current_usage_weekly_normaal') | float) | round(2) }}"
      unit_of_measurement: "kwh"
    refrigeration_current_monthly:
      value_template: "{{ (states('sensor.koelkast_vriezer_garage_current_usage_monthly_normaal') | float + states('sensor.koelkast_vriezer_berging_current_usage_monthly_normaal') | float + states('sensor.koelkast_keuken_current_usage_monthly_normaal') | float + states('sensor.vriezer_garage_current_usage_monthly_normaal') | float) | round(2) }}"
      unit_of_measurement: "kwh"
    refrigeration_current_yearly:
      value_template: "{{ (states('sensor.koelkast_vriezer_garage_current_usage_yearly_normaal') | float + states('sensor.koelkast_vriezer_berging_current_usage_yearly_normaal') | float + states('sensor.koelkast_keuken_current_usage_yearly_normaal') | float + states('sensor.vriezer_garage_current_usage_yearly_normaal') | float) | round(2) }}"
      unit_of_measurement: "kwh"

- platform: template
  sensors:
    wash_dry_current_daily:
      value_template: "{{ (states('sensor.wasmachine_current_usage_daily_normaal') | float + states('sensor.droogkast_current_usage_daily_normaal') | float) | round(2) }}"
      unit_of_measurement: "kwh"
    wash_dry_current_weekly:
      value_template: "{{ (states('sensor.wasmachine_current_usage_weekly_normaal') | float + states('sensor.droogkast_current_usage_weekly_normaal') | float) | round(2) }}"
      unit_of_measurement: "kwh"
    wash_dry_current_monthly:
      value_template: "{{ (states('sensor.wasmachine_current_usage_monthly_normaal') | float + states('sensor.droogkast_current_usage_monthly_normaal') | float) | round(2) }}"
      unit_of_measurement: "kwh"
    wash_dry_current_yearly:
      value_template: "{{ (states('sensor.wasmachine_current_usage_yearly_normaal') | float + states('sensor.droogkast_current_usage_yearly_normaal') | float) | round(2) }}"
      unit_of_measurement: "kwh"

- platform: template
  sensors:
    lights_current_daily:
      value_template: "{{ (states('sensor.shelly_shdm_1_d0f117_current_usage_daily_normaal') | float + states('sensor.shelly_shsw_25_00c928_1_current_usage_daily_normaal') | float + states('sensor.shelly_shsw_25_00c928_2_current_usage_daily_normaal') | float) | round(2) }}"
      unit_of_measurement: "kwh"
    lights_current_weekly:
      value_template: "{{ (states('sensor.shelly_shdm_1_d0f117_current_usage_weekly_normaal') | float + states('sensor.shelly_shsw_25_00c928_1_current_usage_weekly_normaal') | float + states('sensor.shelly_shsw_25_00c928_2_current_usage_weekly_normaal') | float) | round(2) }}"
      unit_of_measurement: "kwh"
    lights_current_monthly:
      value_template: "{{ (states('sensor.shelly_shdm_1_d0f117_current_usage_monthly_normaal') | float + states('sensor.shelly_shsw_25_00c928_1_current_usage_monthly_normaal') | float + states('sensor.shelly_shsw_25_00c928_2_current_usage_monthly_normaal') | float) | round(2) }}"
      unit_of_measurement: "kwh"
    lights_current_yearly:
      value_template: "{{ (states('sensor.shelly_shdm_1_d0f117_current_usage_yearly_normaal') | float + states('sensor.shelly_shsw_25_00c928_1_current_usage_yearly_normaal') | float + states('sensor.shelly_shsw_25_00c928_2_current_usage_yearly_normaal') | float) | round(2) }}"
      unit_of_measurement: "kwh"

- platform: template
  sensors:
    current_consumption:
      value_template: >
        {{
          (states('sensor.waterpomp') | float +
          states('sensor.shelly_shdm_1_d0f117_current_consumption') | float +
          states('sensor.shelly_shsw_25_00c928_1_current_consumption') | float +
          states('sensor.shelly_shsw_25_00c928_2_current_consumption') | float +
          states('sensor.koelkast_vriezer_berging') | float +
          states('sensor.koelkast_vriezer_garage') | float +
          states('sensor.koelkast_keuken') | float +
          states('sensor.vriezer_garage') | float +
          states('sensor.boiler_keuken') | float +
          states('sensor.wasmachine') | float +
          states('sensor.droogkast') | float)
        }}
      unit_of_measurement: "w"

- platform: mqtt
  name: PVE CPU Usage
  state_topic: "pve/cpu_usage"
  unit_of_measurement: "%"
  icon: mdi:memory
- platform: mqtt
  name: PVE RAM Usage
  state_topic: "pve/ram_usage"
  unit_of_measurement: "%"
  icon: mdi:memory
- platform: mqtt
  name: PVE SWAP Usage
  state_topic: "pve/swap_usage"
  unit_of_measurement: "%"
  icon: mdi:memory
- platform: mqtt
  name: PVE CPU Temperature
  state_topic: "pve/cpu_temp"
  unit_of_measurement: "°C"
  device_class: "temperature"
  icon: mdi:thermometer
- platform: mqtt
  name: PVE SYS Temperature
  state_topic: "pve/sys_temp"
  unit_of_measurement: "°C"
  device_class: "temperature"
  icon: mdi:thermometer
- platform: mqtt
  name: PVE Disk NVME0 Temperature
  state_topic: "pve/disk/nvme0_temp"
  unit_of_measurement: "°C"
  device_class: "temperature"
  icon: mdi:thermometer
- platform: mqtt
  name: PVE Disk SDA Temperature
  state_topic: "pve/disk/sda_temp"
  unit_of_measurement: "°C"
  device_class: "temperature"
  icon: mdi:thermometer
- platform: mqtt
  name: PVE Disk SDB Temperature
  state_topic: "pve/disk/sdb_temp"
  unit_of_measurement: "°C"
  device_class: "temperature"
  icon: mdi:thermometer
- platform: mqtt
  name: PVE Disk SDC Temperature
  state_topic: "pve/disk/sdc_temp"
  unit_of_measurement: "°C"
  device_class: "temperature"
  icon: mdi:thermometer
- platform: mqtt
  name: PVE Disk SDD Temperature
  state_topic: "pve/disk/sdd_temp"
  unit_of_measurement: "°C"
  device_class: "temperature"
  icon: mdi:thermometer

- platform: snmp
  host: 192.168.0.10
  community: public
  name: Synology Temperature
  baseoid: 1.3.6.1.4.1.6574.1.2.0
  unit_of_measurement: °C

- platform: template
  sensors:
    house_mode:
      friendly_name: House Mode
      value_template: >-
        {% if is_state('binary_sensor.guest_mode', 'on') %}
          guest
        {% elif is_state('binary_sensor.no_one_home', 'off') %}
          home
        {% elif is_state('input_boolean.vacation_mode', 'on') %}
          vacation
        {% else %}
          away
        {% endif %}
      icon_template: >-
        {% if is_state('binary_sensor.guest_mode', 'on') %}
          mdi:account
        {% elif is_state('binary_sensor.no_one_home', 'off') %}
          mdi:home
        {% elif is_state('input_boolean.vacation_mode', 'on') %}
          mdi:beach
        {% else %}
          mdi:home-outline
        {% endif %}
    oprit_last_motion:
      friendly_name: Oprit Last Motion
      value_template: >-
        {{ (as_timestamp(states.input_datetime.oprit_last_motion.state)) | timestamp_custom('%a %d %h at %H:%M') }}
    oprit_last_motion_event:
      friendly_name: Oprit Last Motion Event
      value_template: >-
        {{ "%02d" % (states('input_number.oprit_last_motion_event') | int) }}
    oprit_last_cctv_motion:
      friendly_name: Oprit Last CCTV Motion
      value_template: >-
        {{ (as_timestamp(states.input_datetime.oprit_last_cctv_motion.state)) | timestamp_custom('%a %d %h at %H:%M') }}
    oprit_last_cctv_motion_event:
      friendly_name: Oprit Last CCTV Motion Event
      value_template: >-
        {{ "%02d" % (states('input_number.oprit_last_cctv_motion_event') | int) }}

- platform: template
  sensors:
    operatingstate:
      value_template: "{{ state_attr('climate.huis', 'hvac_action') }}"
    
    fc_heat_demand:
      friendly_name: "Boiler Demand"
      unit_of_measurement: "%"
      value_template: "{{ state_attr('climate.huis', 'heat_demands').FC }}"

    fc_relay_demand:
      friendly_name: "Boiler Relay"
      unit_of_measurement: "%"
      value_template: "{{ state_attr('climate.huis', 'relay_demands').FC }}"

- platform: history_stats
  name: Verwarmen Vandaag
  entity_id: sensor.operatingstate
  state: 'heating'
  type: time
  start: '{{ now().replace(hour=0).replace(minute=0).replace(second=0) }}'
  end: '{{ now() }}'

- platform: history_stats
  name: Verwarmen Gisteren
  entity_id: sensor.operatingstate
  state: 'heating'
  type: time
  end: '{{ now().replace(hour=0).replace(minute=0).replace(second=0) }}'
  duration:
    hours: 24

- platform: history_stats
  name: Verwarmen 2 Dagen Geleden
  entity_id: sensor.operatingstate
  state: 'heating'
  type: time
  end: '{{ as_timestamp( now().replace(hour=0).replace(minute=0).replace(second=0) ) - 86400 }}'
  duration:
    hours: 24

- platform: history_stats
  name: Verwarmen Voorbij Week
  entity_id: sensor.operatingstate
  state: 'heating'
  type: time
  end: '{{ now().replace(hour=0, minute=0, second=0) }}'
  duration:
    days: 7