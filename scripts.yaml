leaving:
  alias: Leaving the house
  sequence:
  - service: script.turn_off_indoor_lights
  - service: script.turn_off_switches_and_store_states
  - service: script.turn_on_motion_detection_camera
  mode: single
  icon: mdi:home-export-outline
turn_on_motion_detection_camera:
  alias: Turn On Motion Detection Camera
  sequence:
  - service: switch.turn_on
    entity_id: switch.oprit_motion_detection
  mode: single
  icon: mdi:camera-switch
turn_off_indoor_lights:
  alias: Turn Off Indoor Lights
  sequence:
  - service: light.turn_off
    data: {}
    entity_id:
    - light.zolder
    - light.gelijkvloers
    - light.eerste_verdiep
  icon: mdi:lightbulb
  mode: single
turn_off_switches_and_store_states:
  alias: Turn off switches and store devices state
  sequence:
  - service: scene.create
    data:
      scene_id: stored_states
      snapshot_entities:
      - switch.boiler_keuken
      - media_player.keuken
      - media_player.woonkamer
      - media_player.bureau
  - service: switch.turn_off
    data: {}
    entity_id:
    - switch.boiler_keuken
  - service: media_player.turn_off
    entity_id:
    - media_player.samsung_samsung_dtv_rcr
    - media_player.keuken
    - media_player.woonkamer
    - media_player.bureau
  icon: mdi:light-switch
arriving:
  alias: Arriving at our house
  sequence:
  - service: script.turn_on_switches_and_stored_states
  - service: script.deactivate_kids_home_alone
  - service: script.deactivate_guest_mode
  - service: script.deactivate_vacation_mode
  - service: script.set_thermostat_home
  - service: script.turn_off_motion_detection_camera
  mode: single
  icon: mdi:home-import-outline
turn_off_motion_detection_camera:
  alias: Turn Off Motion Detection Camera
  sequence:
  - delay: 00:01:00
  - condition: sun
    after: sunrise
  - condition: state
    entity_id: binary_sensor.night_mode
    for:
      minutes: 1
    state: 'off'
  - condition: state
    entity_id: binary_sensor.no_one_home
    for:
      minutes: 1
    state: 'off'
  - choose:
    - conditions:
      - condition: state
        entity_id: binary_sensor.night_mode
        state: 'on'
      sequence:
      - wait_for_trigger:
          platform: state
          entity_id: binary_sensor.oprit_camera
          for:
            minutes: 5
          to: 'off'
        timeout: 01:00:00
  - service: switch.turn_off
    entity_id: switch.oprit_motion_detection
  mode: single
  icon: mdi:camera-switch
turn_on_switches_and_stored_states:
  alias: Turn On Switches and Restore Devices State
  sequence:
  - scene: scene.stored_states
  - service: switch.turn_on
    data: {}
    entity_id: switch.boiler_keuken
  icon: mdi:light-switch
set_thermostat_away:
  alias: Set Thermostat to Away
  sequence:
  - data:
      preset_mode: away
      entity_id: climate.huis
    service: climate.set_preset_mode
  - wait_template: '{{ is_state_attr(''climate.huis'', ''preset_mode'', ''away'')
      }}'
  - service: climate.set_temperature
    data:
      entity_id:
      - climate.margot
      - climate.slaapkamer
      - climate.febe
      - climate.dressing
      - climate.badkamer
      - climate.bureau
      - climate.speelkamer
      - climate.inkom
      temperature: 10
  mode: single
  icon: mdi:thermostat
set_thermostat_home:
  alias: Set Thermostat to home
  sequence:
  - data:
      preset_mode: Auto
    service: climate.set_preset_mode
    entity_id: climate.huis
  - wait_template: '{{ is_state(''climate.huis'', ''heat'') }}'
  - data:
      entity_id:
      - climate.bureau
      - climate.speelkamer
      - climate.badkamer
      - climate.dressing
      - climate.slaapkamer
      - climate.febe
      - climate.margot
      - climate.inkom
      - climate.keuken
      - climate.woonkamer
      preset_mode: none
    service: climate.set_preset_mode
  mode: single
  icon: mdi:thermostat
start_up_home_assistant:
  alias: Start Up Home Assistant
  sequence: []
ask_to_active_guest_mode:
  alias: Ask to active guest mode
  sequence:
  - service: telegram_bot.send_message
    data_template:
      target:
      - 689595780
      - 696299625
      title: Guest Mode Activation
      message: Wil je Guest Mode activeren?
      inline_keyboard:
      - Ja graag.:/yesguest
      - Nee dank u.:/noguest
activate_guest_mode:
  alias: Active Guest Mode
  sequence:
  - service: input_boolean.turn_on
    data:
      entity_id: input_boolean.guest_mode
  - service: script.set_thermostat_home
  - service: notify.hazilverberkenstraatbot
    data_template:
      message: Guest mode activated
deactivate_guest_mode:
  alias: Deactivate Guest Mode
  sequence:
  - condition: state
    entity_id:
    - binary_sensor.guest_mode
    state: 'on'
  - service: input_boolean.turn_off
    data:
      entity_id: input_boolean.guest_mode
  - service: notify.hazilverberkenstraatbot
    data_template:
      message: Guest mode deactivated
deactivate_kids_home_alone:
  alias: Deactivate Kids Home Alone
  sequence:
  - condition: state
    entity_id:
    - binary_sensor.kids_home_alone
    state: 'on'
  - service: input_boolean.turn_off
    data:
      entity_id: input_boolean.kids_home_alone
  - service: notify.hazilverberkenstraatbot
    data_template:
      message: Kids Home Alone deactivated
activate_vacation_mode:
  alias: Active Vacation Mode
  sequence:
  - service: input_boolean.turn_on
    data:
      entity_id: input_boolean.vacation_mode
  - service: notify.hazilverberkenstraatbot
    data_template:
      message: Vacation mode activated
deactivate_vacation_mode:
  alias: Deactivate Vacation Mode
  sequence:
  - condition: state
    entity_id:
    - binary_sensor.vacation_mode
    state: 'on'
  - service: input_boolean.turn_off
    data:
      entity_id: input_boolean.vacation_mode
  - service: notify.hazilverberkenstraatbot
    data_template:
      message: Vacation mode deactivated
notify_afval:
  alias: Notify Afval
  sequence:
  - service: notify.hazilverberkenstraatbot
    data_template:
      message: '{{ states(''sensor.recycleapp_morgen'') }} morgen buiten zetten!'
motion_detected:
  alias: Motion Detected
  mode: parallel
  fields:
    sensor:
      description: How detected the motion
      example: camera garage
  sequence:
  - service: camera.snapshot
    data_template:
      entity_id: camera.oprit
      filename: /config/www/snapshots/camera.oprit.jpg
  - variables:
      friendly_name: '{{ state_attr(sensor, ''friendly_name'') }}'
  - service: notify.hazilverberkenstraatbot
    data_template:
      message: Buiten beweging gedetecteerd, {{ friendly_name }}
      data:
        photo:
        - file: /config/www/snapshots/camera.oprit.jpg
          caption: Beweging gedecteerd door {{ friendly_name }}
  - service: script.ask_to_active_guest_mode
vacuum_notify:
  alias: Vacuum Notify
  mode: single
  fields:
    zone:
      description: zone
      example: keuken
  sequence:
  - condition: state
    entity_id:
    - input_boolean.disable_dustbin_notification
    state: 'off'
  - variables:
      start_time: '{{ as_timestamp(now()) }}'
  - wait_for_trigger:
      platform: template
      value_template: '{{ is_state(''vacuum.dalek'', ''docked'') }}'
    timeout: 02:00:00
    continue_on_timeout: false
  - variables:
      end_time: '{{ as_timestamp(now()) }}'
  - variables:
      total_time: '{{ (end_time|float(0)- start_time|float) }}'
  - choose:
    - conditions:
      - condition: not
        conditions:
        - condition: state
          entity_id:
          - input_select.vacuum_room
          state: Selecteer Kamer
      sequence:
      - service: input_select.select_option
        entity_id: input_select.vacuum_room
        data:
          option: Selecteer Kamer
  - variables:
      minutes: '{{ (total_time|float(0)/ 60) | round(0) }}'
  - choose:
    - conditions:
      - condition: template
        value_template: '{{ states(''input_number.vacuum_number_of_runs'') |int (0)
          >= states(''input_number.vacuum_empty_bin_after_days'') |int (0) }}'
      sequence:
      - service: telegram_bot.send_message
        data_template:
          target:
          - 689595780
          - 696299625
          title: Stofzuiger
          message: Stofzuiger is klaar na {{ minutes }} minuten. Het is tijd dat de
            vuilbak van stofzuiger wordt geleegd!
          inline_keyboard:
          - Gedaan.:/vacuumemptybindone
          - Uitstel.:/vacuumemptybinextend
    default:
    - service: notify.hazilverberkenstraatbot
      data_template:
        message: '{% if zone == '''' %} Stofzuiger is klaar na {{ minutes }} minuten
          {% else %} Stofzuiger is klaar {{zone}} in {{ minutes }} minuten. {% endif
          %}

          '
  icon: mdi:robot-vacuum
vacuum_record_run:
  alias: Vacuum Record Run
  mode: single
  sequence:
  - service: input_number.increment
    entity_id: input_number.vacuum_number_of_runs
  - service: input_boolean.turn_on
    entity_id: input_boolean.daily_vacuum_first_run
  icon: mdi:robot-vacuum
vacuum_automated:
  alias: Vacuum Automated
  mode: single
  sequence:
  - condition: and
    conditions:
    - condition: state
      entity_id:
      - input_boolean.daily_vacuum_first_run
      - input_boolean.disable_daily_vacuum
      state: 'off'
    - condition: time
      after: 07:00:00
      before: '19:00:00'
  - service: vacuum.start
    data:
      entity_id: vacuum.dalek
  icon: mdi:robot-vacuum
vacuum_zone:
  alias: Vacuum a Specific Zone
  mode: single
  fields:
    zone:
      description: zone
      example: keuken
  sequence:
  - choose:
    - conditions:
      - condition: template
        value_template: '{{ zone == ''Keuken'' }}'
      sequence:
      - service: vacuum.send_command
        data:
          entity_id: vacuum.dalek
          command: app_zoned_clean
          params:
          - - 23386
            - 23366
            - 25286
            - 28216
            - 1
    - conditions:
      - condition: template
        value_template: '{{ zone == ''Eet Kamer'' }}'
      sequence:
      - service: vacuum.send_command
        data:
          entity_id: vacuum.dalek
          command: app_zoned_clean
          params:
          - - 25244
            - 21493
            - 30594
            - 26593
            - 1
    - conditions:
      - condition: template
        value_template: '{{ zone == ''Livng'' }}'
      sequence:
      - service: vacuum.send_command
        data:
          entity_id: vacuum.dalek
          command: app_zoned_clean
          params:
          - - 24260
            - 16982
            - 30710
            - 21882
            - 1
    - conditions:
      - condition: template
        value_template: '{{ zone == ''Inkom'' }}'
      sequence:
      - service: vacuum.send_command
        data:
          entity_id: vacuum.dalek
          command: app_zoned_clean
          params:
          - - 23110
            - 14614
            - 25410
            - 18664
            - 1
    - conditions:
      - condition: template
        value_template: '{{ zone == ''Berging'' }}'
      sequence:
      - service: vacuum.send_command
        data:
          entity_id: vacuum.dalek
          command: app_zoned_clean
          params:
          - - 23508
            - 21814
            - 25408
            - 23314
            - 1
  - service: script.vacuum_notify
    data_template:
      zone: '{{ zone }}'
  icon: mdi:robot-vacuum
vacuum_bin_feedback:
  icon: mdi:robot-vacuum
  alias: Vacuum bin feedback
  fields:
    command:
      description: the response command from telegram
      example: vacuumemptybindone
    callback_id:
      description: the callback_id to give a reponse
      example: ''
  sequence:
  - choose:
    - conditions:
      - condition: template
        value_template: '{{ command == ''vacuumemptybindone'' }}'
      sequence:
      - service: input_number.set_value
        data:
          entity_id: input_number.vacuum_number_of_runs
          value: 0
  - service: telegram_bot.answer_callback_query
    data_template:
      callback_query_id: '{{ callback_id }}'
      message: '{% if (command == ''vacuumemptybindone'') %} Genoteerd dat de vuilbak
        is geleegd! {% elif (command == ''vacuumemptybinextend'') %} Uitgesteld tot
        de volgende run! {% endif %}

        '
      show_alert: true
  mode: single
guest_mode_feedback:
  alias: Guest Mode feedback
  fields:
    command:
      description: the response command from telegram
      example: yesguest
    callback_id:
      description: the callback_id to give a reponse
      example: ''
  sequence:
  - choose:
    - conditions:
      - condition: template
        value_template: '{{ command == ''yesguest'' }}'
      sequence:
      - service: script.activate_guest_mode
    - conditions:
      - condition: template
        value_template: '{{ command == ''noguest'' }}'
      sequence:
      - service: script.set_thermostat_away
  - service: telegram_bot.answer_callback_query
    data_template:
      callback_query_id: '{{ callback_id }}'
      message: '{% if (command == ''yesguest'') %} Guest Mode is active {% elif (command
        == ''noguest'') %} Guest Mode is not active {% endif %}'
      show_alert: true
  - service: telegram_bot.send_message
    data_template:
      target:
      - 689595780
      - 696299625
      message: '{% if (command == ''yesguest'') %} Guest Mode is active {% elif (command
        == ''noguest'') %} Guest Mode is not active {% endif %}'
  mode: single
low_battery_notification:
  sequence:
  - service: persistent_notification.create
    data_template:
      title: Low Battery Device
      message: '{{name}} has only {{battery}}% left!'
      notification_id: lowbatterydevice{{entity_id}}
dismiss_low_battery_notification:
  sequence:
  - service: persistent_notification.dismiss
    data_template:
      notification_id: lowbatterydevice{{entity_id}}
wakeup_light_sunrise:
  alias: Wakeup Light Sunrise
  sequence:
  - data_template:
      brightness: 1
      white_value: 0
      entity_id: '{{entity_id}}'
      xy_color:
      - 0.67
      - 0.39
    service: light.turn_on
  - delay:
      seconds: 1
  - data_template:
      brightness: 85
      transition: 12
      white_value: 0
      entity_id: '{{entity_id}}'
      xy_color:
      - 0.65
      - 0.41
    service: light.turn_on
  - delay:
      seconds: 15
  - data_template:
      brightness: 170
      transition: 12
      white_value: 0
      entity_id: '{{entity_id}}'
      xy_color:
      - 0.6
      - 0.4
    service: light.turn_on
  - delay:
      seconds: 15
  - data_template:
      brightness: 255
      transition: 12
      white_value: 0
      entity_id: '{{entity_id}}'
      xy_color:
      - 0.48
      - 0.4
    service: light.turn_on
  - delay:
      seconds: 15
  - data_template:
      brightness: 255
      color_name: white
      transition: 12
      white_value: 255
      entity_id: '{{entity_id}}'
    service: light.turn_on
  - delay:
      seconds: 15
sunrise_wled:
  alias: Sunrise wled
  sequence:
  - service: number.set_value
    target:
      entity_id: number.{{ wled_id }}_intensity
    data:
      value: '120'
  - service: number.set_value
    data:
      value: '{{ time |int (0) }}'
    target:
      entity_id: number.{{ wled_id }}_speed
  - service: light.turn_on
    data:
      effect: sunrise
      brightness_pct: 75
      entity_id: light.{{ wled_id }}
  - delay: '{{ time | multiply(60) |int (0) }}'
  mode: parallel
  icon: mdi:weather-sunset-up
  max: 20
activate_night_mode:
  alias: Active Night Mode
  sequence:
  - service: input_boolean.turn_on
    data:
      entity_id: input_boolean.night_mode
deactivate_night_mode:
  alias: Deactivate Night Mode
  sequence:
  - service: input_boolean.turn_off
    data:
      entity_id: input_boolean.night_mode
night_mode_turn_on:
  alias: Night Mode Turn On
  sequence:
  - service: script.turn_on_motion_detection_camera
night_mode_turn_off:
  alias: Night Mode Turn Off
  sequence:
  - service: script.turn_off_motion_detection_camera
play_chromecast_radio:
  alias: Cast Selected Radio on Chromecast Speakers
  icon: mdi:cast
  sequence:
  - service: media_player.play_media
    data_template:
      entity_id: '{% if is_state("input_select.cast_radio", "Woonkamer") %} media_player.woonkamer
        {% elif is_state("input_select.cast_radio", "Keuken") %} media_player.keuken
        {% elif is_state("input_select.cast_radio", "Beneden") %} media_player.beneden
        {% endif %}'
      media_content_id: '{% if states(''input_select.stu_bru_streams'') == ''Bruut''
        %} http://icecast.vrtcdn.be/stubru_bruut.aac {% elif states(''input_select.stu_bru_streams'')
        == ''Hooray'' %} http://icecast.vrtcdn.be/stubru_hiphophooray.aac {% elif
        states(''input_select.stu_bru_streams'') == ''De Tijdloze'' %} http://icecast.vrtcdn.be/stubru_tijdloze.aac
        {% elif states(''input_select.stu_bru_streams'') == ''#ikluisterbelgisch''
        %} http://icecast.vrtcdn.be/stubru_tgs.aac {% elif states(''input_select.stu_bru_streams'')
        == ''Live Radio'' %} http://icecast.vrtcdn.be/stubru.aac {% endif %}'
      media_content_type: music
  mode: single
radio_beneden:
  alias: Speel Radio Beneden
  sequence:
  - service: input_select.select_option
    data:
      option: Live Radio
    entity_id: input_select.stu_bru_streams
  - service: input_select.select_option
    data:
      option: Beneden
    entity_id: input_select.cast_radio
  - service: script.play_chromecast_radio
  mode: single
motioneye_object_detected:
  alias: MotionEye Object Detected
  sequence:
  - service: input_number.set_value
    entity_id: input_number.oprit_last_motion_event
    data_template:
      value: '{{ states.input_number.oprit_last_cctv_motion_event.state }}'
  - service: input_datetime.set_datetime
    entity_id: input_datetime.oprit_last_motion
    data_template:
      datetime: '{{ states.input_datetime.oprit_last_cctv_motion.state }}'
  - service: input_boolean.turn_on
    data: {}
    entity_id: input_boolean.oprit_motion
motioneye_test_person_object:
  alias: MotionEye Test Person Object
  sequence:
  - condition: template
    value_template: '{{ ''person'' in state_attr(''image_processing.doods_oprit'',
      ''summary'') }}'
  - service: script.motioneye_object_detected
motioneye_test_car_object:
  alias: MotionEye Test Car Object
  sequence:
  - condition: template
    value_template: '{{ ''car'' in state_attr(''image_processing.doods_oprit'', ''summary'')
      }}'
  - service: image_processing.scan
    target:
      entity_id: image_processing.platerecognizer_doods_oprit
  - wait_for_trigger:
    - platform: state
      entity_id: image_processing.platerecognizer_doods_oprit
      attribute: timestamp
    timeout: 00:00:05
  - condition: template
    value_template: '{{ is_state(''binary_sensor.oprit_known_plate'',''off'') }}'
  - service: script.motioneye_object_detected
set_temperature_zone:
  alias: Set Temperature Zone
  sequence:
  - service: evohome_cc.set_zone_mode
    data:
      entity_id: climate.{{ states('input_select.verwarmingszone') }}
      setpoint: '{{ states(''input_number.verwarmingszone_temperature'') | float (0)
        }}'
      duration:
        minutes: '{{ states(''input_number.verwarmingszone_looptijd'') | int (0) }}'
  mode: single
