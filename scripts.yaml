set_temperature:
  alias: Set Temperature
  sequence:
  - service: climate.set_operation_mode
    data:
      entity_id: climate.downstairs
      operation_mode: heat
  - service: climate.set_temperature
    data_template:
      temperature: '{{ states.sensor.temperature_degrees.state | float }}'
  - service: notify.hazilverberkenstraatbot
    data_template:
      message: Temperature set to {{ states.sensor.temperature_degrees.state}}
  - service: input_boolean.turn_off
    data:
      entity_id: input_boolean.tempsetactive
set_nest_away:
  sequence:
  - data:
      preset_mode: away
      entity_id: climate.downstairs
    service: climate.set_preset_mode
  - data_template:
      message: Nest has been set to away
    service: notify.hazilverberkenstraatbot
set_nest_home:
  sequence:
  - data:
      present_mode: none
      entity_id: climate.downstairs
    service: climate.set_present_mode
  - data_template:
      message: Nest has been set to home
    service: notify.hazilverberkenstraatbot
nest_motion_detection:
  sequence:
  - service: camera.snapshot
    data_template:
      entity_id: camera.oprit
      filename: /config/www/snapshots/camera.oprit.jpg
  - service: notify.hazilverberkenstraatbot
    data_template:
      message: Nest has detected motion
      data:
        photo:
        - file: /config/www/snapshots/camera.oprit.jpg
          caption: Nest has detected motion
start_up_home_assistant:
  alias: Start Up Home Assistant
  sequence: []
activate_guest_mode:
  sequence:
  - service: input_boolean.turn_on
    data:
      entity_id: input_boolean.house_guests
  - service: notify.hazilverberkenstraatbot
    data_template:
      message: 'Guest mode activated

        '
deactivate_guest_mode:
  sequence:
  - service: input_boolean.turn_off
    data:
      entity_id: input_boolean.house_guests
  - service: notify.hazilverberkenstraatbot
    data_template:
      message: 'Guest mode deactivated

        '
notify_afval:
  alias: Notify Afval
  sequence:
  - service: notify.hazilverberkenstraatbot
    data_template:
      message: '{{ states(''sensor.recycleapp_morgen'') }} morgen buiten zetten!

        '
outside_motion_detection:
  sequence:
  - service: camera.snapshot
    data_template:
      entity_id: camera.oprit
      filename: /config/www/snapshots/camera.oprit.jpg
  - service: notify.hazilverberkenstraatbot
    data_template:
      message: Buiten beweging gedetecteerd, {{ sensor }}
      data:
        photo:
        - file: /config/www/snapshots/camera.oprit.jpg
          caption: Buiten beweging gedetecteerd, {{ sensor }}
vacuum_keuken:
  alias: Vacuum Keuken
  sequence:
  - service: vacuum.send_command
    data:
      entity_id: vacuum.xiaomi_vacuum_cleaner
      command: app_zoned_clean
      params:
      - - 23386
        - 23366
        - 25286
        - 28216
        - 1
vacuum_eet_kamer:
  alias: Vacuum Eet Kamer
  sequence:
  - service: vacuum.send_command
    data:
      entity_id: vacuum.xiaomi_vacuum_cleaner
      command: app_zoned_clean
      params:
      - - 25244
        - 21493
        - 30594
        - 26593
        - 1
vacuum_living:
  alias: Vacuum Living
  sequence:
  - service: vacuum.send_command
    data:
      entity_id: vacuum.xiaomi_vacuum_cleaner
      command: app_zoned_clean
      params:
      - - 24260
        - 16982
        - 30710
        - 21882
        - 1
vacuum_inkom:
  alias: Vacuum Inkom
  sequence:
  - service: vacuum.send_command
    data:
      entity_id: vacuum.xiaomi_vacuum_cleaner
      command: app_zoned_clean
      params:
      - - 23110
        - 14614
        - 25410
        - 18664
        - 1
vacuum_berging:
  alias: Vacuum Berging
  sequence:
  - service: vacuum.send_command
    data:
      entity_id: vacuum.xiaomi_vacuum_cleaner
      command: app_zoned_clean
      params:
      - - 23508
        - 21814
        - 25408
        - 23314
        - 1
vacuum_is_done:
  sequence:
  - data_template:
      message: Stofzuiger is klaar
    service: notify.hazilverberkenstraatbot
vacuum_is_done_room:
  sequence:
  - data_template:
      message: Stofzuiger is klaar met {{room}}
    service: notify.hazilverberkenstraatbot
low_battery_notification:
  sequence:
  - service: persistent_notification.create
    data_template:
      title: Low Battery Device
      message: '{{name}} has only {{battery}}% left!'
      notification_id: lowbatterydevice{{entity_id}}
dismiss_low_battery_notification:
  sequence:
  - service: persistent_notification.dismiss
    data_template:
      notification_id: lowbatterydevice{{entity_id}}
wakeup_light_sunrise:
  alias: Wakeup Light Sunrise
  sequence:
  - data_template:
      brightness: 1
      white_value: 0
      entity_id: '{{entity_id}}'
      xy_color:
      - 0.67
      - 0.39
    service: light.turn_on
  - delay:
      seconds: 1
  - data_template:
      brightness: 85
      transition: 12
      white_value: 0
      entity_id: '{{entity_id}}'
      xy_color:
      - 0.65
      - 0.41
    service: light.turn_on
  - delay:
      seconds: 15
  - data_template:
      brightness: 170
      transition: 12
      white_value: 0
      entity_id: '{{entity_id}}'
      xy_color:
      - 0.6
      - 0.4
    service: light.turn_on
  - delay:
      seconds: 15
  - data_template:
      brightness: 255
      transition: 12
      white_value: 0
      entity_id: '{{entity_id}}'
      xy_color:
      - 0.48
      - 0.4
    service: light.turn_on
  - delay:
      seconds: 15
  - data_template:
      brightness: 255
      color_name: white
      transition: 12
      white_value: 255
      entity_id: '{{entity_id}}'
    service: light.turn_on
  - delay:
      seconds: 15
ui_tts:
  sequence:
  - service: script.turn_on
    entity_id: script.play_tts
    data_template:
      variables:
        message: '{{states.input_text.tts.state}}'
snapshot_spotify:
  sequence:
  - service: variable.set_variable
    data:
      variable: spotify_phdelodder
      value_template: "{% if is_state('media_player.spotify_phdelodder', 'playing')\
        \ and (\n   is_state_attr('media_player.spotify_phdelodder', 'source', 'Huis')\
        \ or\n   is_state_attr('media_player.spotify_phdelodder', 'source', 'Tablet')\
        \ or\n   is_state_attr('media_player.spotify_phdelodder', 'source', 'Bureau')\
        \ or\n   is_state_attr('media_player.spotify_phdelodder', 'source', 'Woonkamer'))\
        \ %}\nTrue {% else %} False {% endif %}\n"
  - service: variable.set_variable
    data:
      variable: spotify_febe
      value_template: "{% if is_state('media_player.spotify_febe', 'playing') and\
        \ (\n   is_state_attr('media_player.spotify_febe', 'source', 'Huis') or\n\
        \   is_state_attr('media_player.spotify_febe', 'source', 'Tablet') or\n  \
        \ is_state_attr('media_player.spotify_febe', 'source', 'Bureau') or\n   is_state_attr('media_player.spotify_febe',\
        \ 'source', 'Woonkamer')) %}\nTrue {% else %} False {% endif %}\n"
  - service: variable.set_variable
    data:
      variable: spotify_margot
      value_template: "{% if is_state('media_player.spotify_margot', 'playing') and\
        \ (\n   is_state_attr('media_player.spotify_margot', 'source', 'Huis') or\n\
        \   is_state_attr('media_player.spotify_margot', 'source', 'Tablet') or\n\
        \   is_state_attr('media_player.spotify_margot', 'source', 'Bureau') or\n\
        \   is_state_attr('media_player.spotify_margot', 'source', 'Woonkamer')) %}\n\
        True {% else %} False {% endif %}\n"
  - service: variable.set_variable
    data:
      variable: spotify_isabel
      value_template: "{% if is_state('media_player.spotify_isabel', 'playing') and\
        \ (\n   is_state_attr('media_player.spotify_isabel', 'source', 'Huis') or\n\
        \   is_state_attr('media_player.spotify_isabel', 'source', 'Tablet') or\n\
        \   is_state_attr('media_player.spotify_isabel', 'source', 'Bureau') or\n\
        \   is_state_attr('media_player.spotify_isabel', 'source', 'Woonkamer')) %}\n\
        True {% else %} False {% endif %}\n"
  - condition: template
    value_template: "{{ is_state('variable.spotify_isabel', \"True\") \n   or is_state('variable.spotify_febe',\
      \ \"True\") \n   or is_state('variable.spotify_margot', \"True\") \n   or is_state('variable.spotify_phdelodder',\
      \ \"True\") }}"
  - service: media_player.media_pause
    data_template:
      entity_id: "{% if is_state('variable.spotify_isabel', \"True\") %}\n media_player.spotify_isabel\n\
        {% endif %} {% if is_state('variable.spotify_febe', \"True\") %}\n media_player.spotify_febe\n\
        {% endif %} {% if is_state('variable.spotify_margot', \"True\") %}\n media_player.spotify_margot\n\
        {% endif %} {% if is_state('variable.spotify_phdelodder', \"True\") %}\n media_player.spotify_phdelodder\n\
        {% endif %}"
restore_spotify_user:
  sequence:
  - condition: template
    value_template: '{{ is_state( var , "True") }}'
  - service: media_player.media_play
    data_template:
      entity_id: '{{ media_player }}'
  - service: variable.set_variable
    data_template:
      variable: '{{ var_short }}'
      value: false
restore_spotify:
  sequence:
  - condition: template
    value_template: "{{ is_state('variable.spotify_isabel', \"True\") or\n   is_state('variable.spotify_febe',\
      \ \"True\") or\n   is_state('variable.spotify_margot', \"True\") or\n   is_state('variable.spotify_phdelodder',\
      \ \"True\") }}"
  - service: script.turn_on
    entity_id: script.restore_spotify_user
    data:
      variables:
        media_player: media_player.spotify_isabel
        var: variable.spotify_isabel
        var_short: spotify_isabel
  - service: script.turn_on
    entity_id: script.restore_spotify_user
    data:
      variables:
        media_player: media_player.spotify_febe
        var: variable.spotify_febe
        var_short: spotify_febe
  - service: script.turn_on
    entity_id: script.restore_spotify_user
    data:
      variables:
        media_player: media_player.spotify_margot
        var: variable.spotify_margot
        var_short: spotify_margot
  - service: script.turn_on
    entity_id: script.restore_spotify_user
    data:
      variables:
        media_player: media_player.spotify_phdelodder
        var: variable.spotify_phdelodder
        var_short: spotify_phdelodder
snapshot_mopidy:
  sequence:
  - service: variable.set_variable
    data:
      variable: mpd_huis
      value_template: "{% if is_state('media_player.huis', 'playing') %}\n  True\n\
        {% else %}\n  False\n{% endif%}\n"
  - service: variable.set_variable
    data:
      variable: mpd_huis_stream
      value_template: "{% if is_state('media_player.huis', 'playing') %}\n  {{ states.media_player.huis.attributes.media_content_id\
        \ }}\n{% else %}\n   \n{% endif%}\n"
restore_mopidy:
  sequence:
  - condition: template
    value_template: '{{ is_state(''variable.mpd_huis'', "True") }}'
  - data_template:
      entity_id: media_player.huis
      media_content_id: '{{ states(''variable.mpd_huis_stream'') }}

        '
      media_content_type: music
    service: media_player.play_media
  - service: variable.set_variable
    data:
      variable: mpd_huis
      value: false
play_tts:
  sequence:
  - service: snapcast.snapshot
    data:
      entity_id:
      - media_player.snapcast_client_hentho
      - media_player.snapcast_client_xgin
      - media_player.snapcast_client_tablet
  - service: script.turn_on
    entity_id: script.snapshot_spotify
  - service: script.turn_on
    entity_id: script.snapshot_mopidy
  - service: media_player.media_pause
    entity_id: media_player.huis
  - service: media_player.select_source
    data:
      entity_id:
      - media_player.snapcast_client_hentho
      - media_player.snapcast_client_xgin
      - media_player.snapcast_client_tablet
      source: Mopidy
  - service: media_player.volume_set
    data:
      entity_id:
      - media_player.snapcast_client_hentho
      - media_player.snapcast_client_xgin
      - media_player.snapcast_client_tablet
      volume_level: 1.0
  - service: media_player.volume_mute
    data:
      entity_id:
      - media_player.snapcast_client_hentho
      - media_player.snapcast_client_xgin
      - media_player.snapcast_client_tablet
      is_volume_muted: false
  - service: media_player.play_media
    data:
      entity_id: media_player.huis
      media_content_id: https://ha.delodder.be/local/hail.mp3
      media_content_type: music
  - wait_template: '{{states.media_player.huis.state == ''off''}}'
    timeout: 120
  - delay: 00:00:01
  - service_template: tts.google_translate_say
    data_template:
      entity_id: media_player.huis
      message: '{{message}}'
  - wait_template: '{{states.media_player.huis.state == ''off''}}'
    timeout: 120
  - delay: 00:00:04
  - service: media_player.media_pause
    data_template:
      entity_id: media_player.huis
  - service: snapcast.restore
    data:
      entity_id:
      - media_player.snapcast_client_hentho
      - media_player.snapcast_client_xgin
      - media_player.snapcast_client_tablet
  - service: script.turn_on
    entity_id: script.restore_spotify
  - service: script.turn_on
    entity_id: script.restore_mopidy
play_tts_nodered:
  sequence:
play_studiobrussel_home:
  sequence:
  - service: variable.set_variable
    data:
      variable: radio_playing
      value: StuBru
  - data_template:
      entity_id: media_player.huis
      media_content_id: "{% if states('input_select.stu_bru_streams') == 'Bruut' %}\n\
        \  http://icecast.vrtcdn.be/stubru_bruut.aac\n{% elif states('input_select.stu_bru_streams')\
        \ == 'Hooray' %}\n  http://icecast.vrtcdn.be/stubru_hiphophooray.aac\n{% elif\
        \ states('input_select.stu_bru_streams') == 'De Tijdloze' %}\n  http://icecast.vrtcdn.be/stubru_tijdloze.aac\n\
        {% elif states('input_select.stu_bru_streams') == '#ikluisterbelgisch' %}\n\
        \  http://icecast.vrtcdn.be/stubru_tgs.aac\n{% elif states('input_select.stu_bru_streams')\
        \ == 'Live Radio' %}\n  http://icecast.vrtcdn.be/stubru.aac\n{% endif %}"
      media_content_type: music
    service: media_player.play_media
sunrise_wled:
  alias: Sunrise wled
  sequence:
  - service: wled.effect
    data:
      entity_id: '{{ wled_id }}'
      effect: solid
  - service: wled.effect
    data_template:
      entity_id: '{{ wled_id }}'
      effect: sunrise
      speed: "{{ time | int }}"
      intensity: 255
  - service: light.turn_on
    data_template:
      entity_id: '{{ wled_id }}'
  - delay: "{{ time | multiply(60) | int }}"
  mode: parallel
  icon: mdi:weather-sunset-up
  max: 4
