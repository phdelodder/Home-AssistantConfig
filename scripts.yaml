leaving:
  alias: Leaving the house
  sequence:
  - service: script.turn_off_indoor_lights
  - service: script.turn_off_switches_and_store_states
  - service: script.turn_on_motion_detection_camera
  mode: single
  icon: mdi:home-export-outline
turn_on_motion_detection_camera:
  alias: Turn On Motion Detection Camera
  sequence:
    - service: switch.turn_on
      entity_id: switch.oprit_state
  mode: single
  icon: mdi:camera-switch
turn_off_indoor_lights:
  alias: Turn Off Indoor Lights
  sequence:
  - service: light.turn_off
    data: {}
    entity_id:
    - light.zolder_group
    - light.gelijkvloers_group
    - light.eerste_verdiep_group
  icon: mdi:lightbulb
turn_off_switches_and_store_states:
  alias: Turn off switches and store devices state
  sequence:
  - service: scene.create
    data:
      scene_id: stored_states
      snapshot_entities:
      - switch.boiler_keuken
  - service: switch.turn_off
    data: {}
    entity_id: switch.boiler_keuken
  - service: media_player.turn_off
    entity_id:
    - media_player.samsung_samsung_dtv_rcr
    - media_player.huis
  icon: mdi:light-switch
arriving:
  alias: Arriving at our house
  sequence:
  - service: script.turn_on_switches_and_stored_states
  - service: script.deactivate_guest_mode
  - service: script.set_thermostat_home
  - service: script.turn_off_motion_detection_camera
  mode: single
  icon: mdi:home-import-outline
turn_off_motion_detection_camera:
  alias: Turn Off Motion Detection Camera
  sequence:
    - delay: 
        minutes: 1
    - condition: state
      entity_id: binary_sensor.night_mode
      for:
        minutes: 1
      state: 'off'
    - choose:
      - conditions:
          condition: state
          entity_id: binary_sensor.night_mode
          state: 'on'
        sequence:
          - wait_for_trigger: 
              platform: state
              entity_id: binary_sensor.oprit_camera
              for:
                minutes: 5
              to: 'off'
            timeout: '01:00:00'
    - service: switch.turn_off
      entity_id: switch.oprit_state
  mode: single
  icon: mdi:camera-switch
turn_on_switches_and_stored_states:
  alias: Turn On Switches and Restore Devices State
  sequence:
  - scene: scene.stored_states
  - service: switch.turn_on
    data: {}
    entity_id: switch.boiler_keuken
  icon: mdi:light-switch
set_temperature:
  alias: Set Temperature
  sequence:
  - service: climate.set_operation_mode
    data:
      entity_id: climate.downstairs
      operation_mode: heat
  - service: climate.set_temperature
    data_template:
      temperature: '{{ states.sensor.temperature_degrees.state | float }}'
  - service: notify.hazilverberkenstraatbot
    data_template:
      message: Temperature set to {{ states.sensor.temperature_degrees.state}}
  - service: input_boolean.turn_off
    data:
      entity_id: input_boolean.tempsetactive
  mode: single
  icon: mdi:thermostat
set_thermostat_away:
  alias: Set Thermostat to away
  sequence:
  - data:
      preset_mode: away
      entity_id: climate.downstairs
    service: climate.set_preset_mode
  mode: single
  icon: mdi:thermostat
set_thermostat_home:
  alias: Set Thermostat to home
  sequence:
  - data:
      present_mode: none
      entity_id: climate.downstairs
    service: climate.set_present_mode
  mode: single
  icon: mdi:thermostat
start_up_home_assistant:
  alias: Start Up Home Assistant
  sequence: []
ask_to_active_guest_mode:
  alias: Ask to active guest mode
  sequence:
  - service: telegram_bot.send_message
    data_template:
      target: '[ 689595780, 696299625 ]'
      title: Guest Mode Activation
      message: Wil je Guest Mode activeren?
      inline_keyboard:
      - Ja graag.:/yesguest
      - Nee dank u.:/noguest
activate_guest_mode:
  alias: Active Guest Mode
  sequence:
  - service: input_boolean.turn_on
    data:
      entity_id: input_boolean.guest_mode
  - service: script.set_thermostat_home
  - service: notify.hazilverberkenstraatbot
    data_template:
      message: Guest mode activated
deactivate_guest_mode:
  alias: Deactivate Guest Mode
  sequence:
  - condition: state
    entity_id:
    - binary_sensor.guest_mode
    state: 'on'
  - service: input_boolean.turn_off
    data:
      entity_id: input_boolean.guest_mode
  - service: notify.hazilverberkenstraatbot
    data_template:
      message: Guest mode deactivated
notify_afval:
  alias: Notify Afval
  sequence:
  - service: notify.hazilverberkenstraatbot
    data_template:
      message: '{{ states(''sensor.recycleapp_morgen'') }} morgen buiten zetten!'
motion_detected:
  alias: Motion Detected
  mode: parallel
  fields:
    sensor:
      description: How detected the motion
      example: camera garage
  sequence:
  - service: camera.snapshot
    data_template:
      entity_id: camera.oprit
      filename: /config/www/snapshots/camera.oprit.jpg
  - service: notify.hazilverberkenstraatbot
    data_template:
      message: Buiten beweging gedetecteerd, {{ sensor }}
      data:
        photo:
        - file: /config/www/snapshots/camera.oprit.jpg
          caption: Beweging gedecteerd door {{ sensor }}
  - service: script.ask_to_active_guest_mode
vacuum:
  alias: Vacuum
  mode: single
  sequence:
  - condition: and
    conditions:
    - condition: state
      entity_id:
      - input_boolean.daily_vacuum_first_run
      - input_boolean.disable_daily_vacuum
      state: 'off'
    - condition: time
      after: 07:00:00
      before: '19:00:00'
  - variables:
      start_time: '{{ as_timestamp(now()) }}'
  - service: vacuum.start
    entity_id: vacuum.xiaomi_vacuum_cleaner
  - service: input_number.increment
    entity_id: input_number.vacuum_number_of_runs
  - service: input_boolean.turn_on
    entity_id: input_boolean.daily_vacuum_first_run
  - condition: state
    entity_id:
    - input_boolean.disable_dustbin_notification
    state: 'off'
  - wait_for_trigger:
      platform: template
      value_template: '{{ is_state(''vacuum.xiaomi_vacuum_cleaner'', ''docked'') }}'
    timeout: 02:00:00
    continue_on_timeout: false
  - variables:
      end_time: '{{ as_timestamp(now()) }}'
  - variables:
      total_time: '{{ (end_time|float - start_time|float) }}'
  - choose:
    - conditions:
      - condition: template
        value_template: '{{ states(''input_number.vacuum_number_of_runs'') | int >=
          states(''input_number.vacuum_empty_bin_after_days'') | int }}'
      sequence:
      - service: telegram_bot.send_message
        data_template:
          target: '[ 689595780, 696299625 ]'
          title: Stofzuiger
          message: Stofzuiger is klaar na {{ total_time }} minuten. Het is tijd dat
            de vuilbak van stofzuiger wordt geleegd!
          inline_keyboard:
          - Gedaan.:/vacuumemptybindone
          - Uitstel.:/vacuumemptybinextend
    default:
    - service: notify.hazilverberkenstraatbot
      data_template:
        message: Stofzuiger is klaar na {{ total_time }} minuten
  icon: mdi:robot-vacuum
vacuum_zone:
  alias: Vacuum a Specific Zone
  mode: single
  fields:
    zone:
      description: zone
      example: keuken
  sequence:
  - variables:
      start_time: '{{ as_timestamp(now()) }}'
  - choose:
    - conditions:
      - condition: template
        value_template: '{{ zone == ''Keuken'' }}'
      sequence:
      - service: vacuum.send_command
        data:
          entity_id: vacuum.xiaomi_vacuum_cleaner
          command: app_zoned_clean
          params:
          - 23386
          - 23366
          - 25286
          - 28216
          - 1
    - conditions:
      - condition: template
        value_template: '{{ zone == ''Eet Kamer'' }}'
      sequence:
      - service: vacuum.send_command
        data:
          entity_id: vacuum.xiaomi_vacuum_cleaner
          command: app_zoned_clean
          params:
          - 25244
          - 21493
          - 30594
          - 26593
          - 1
    - conditions:
      - condition: template
        value_template: '{{ zone == ''Livng'' }}'
      sequence:
      - service: vacuum.send_command
        data:
          entity_id: vacuum.xiaomi_vacuum_cleaner
          command: app_zoned_clean
          params:
          - 24260
          - 16982
          - 30710
          - 21882
          - 1
    - conditions:
      - condition: template
        value_template: '{{ zone == ''Inkom'' }}'
      sequence:
      - service: vacuum.send_command
        data:
          entity_id: vacuum.xiaomi_vacuum_cleaner
          command: app_zoned_clean
          params:
          - 23110
          - 14614
          - 25410
          - 18664
          - 1
    - conditions:
      - condition: template
        value_template: '{{ zone == ''Berging'' }}'
      sequence:
      - service: vacuum.send_command
        data:
          entity_id: vacuum.xiaomi_vacuum_cleaner
          command: app_zoned_clean
          params:
          - 23508
          - 21814
          - 25408
          - 23314
          - 1
  - wait_for_trigger:
      platform: template
      value_template: '{{ is_state(''vacuum.xiaomi_vacuum_cleaner'', ''docked'') }}'
    timeout: 02:00:00
    continue_on_timeout: false
  - service: input_select.select_option
    entity_id: input_select.vacuum_room
    data:
      option: Selecteer Kamer
  - condition: state
    entity_id:
    - input_boolean.disable_dustbin_notification
    state: 'off'
  - variables:
      end_time: '{{ as_timestamp(now()) }}'
  - variables:
      total_time: '{{ (end_time|float - start_time|float) }}'
  - service: notify.hazilverberkenstraatbot
    data_template:
      message: Stofzuiger is klaar met {{zone}} in {{ total_time }} minuten.
  icon: mdi:robot-vacuum
vacuum_bin_feedback:
  icon: mdi:robot-vacuum
  alias: Vacuum bin feedback
  fields:
    command:
      description: the response command from telegram
      example: vacuumemptybindone
    callback_id:
      description: the callback_id to give a reponse
      example: ''
  sequence:
  - choose:
    - conditions:
      - condition: template
        value_template: '{{ command == ''vacuumemptybindone'' }}'
      sequence:
      - service: input_number.set_value
        data:
          entity_id: input_number.vacuum_number_of_runs
          value: 0
  - service: telegram_bot.answer_callback_query
    data_template:
      callback_query_id: '{{ callback_id }}'
      message: '{% if (command == ''vacuumemptybindone'') %} Genoteerd dat de vuilbak
        is geleegd! {% elif (command == ''vacuumemptybinextend'') %} Uitgesteld tot
        de volgende run! {% endif %}

        '
      show_alert: true
  mode: single
guest_mode_feedback:
  alias: Guest Mode feedback
  fields:
    command:
      description: the response command from telegram
      example: vacuumemptybindone
    callback_id:
      description: the callback_id to give a reponse
      example: ''
  sequence:
  - choose:
    - conditions:
      - condition: template
        value_template: '{{ command == ''yesguest'' }}'
      sequence:
      - service: script.activate_guest_mode
  - service: telegram_bot.answer_callback_query
    data_template:
      callback_query_id: '{{ callback_id }}'
      message: '{% if (command == ''yesguest'') %} Guest Mode is active {% elif (command
        == ''noguest'') %} Guest Mode is not active {% endif %}

        '
      show_alert: true
  mode: single
low_battery_notification:
  sequence:
  - service: persistent_notification.create
    data_template:
      title: Low Battery Device
      message: '{{name}} has only {{battery}}% left!'
      notification_id: lowbatterydevice{{entity_id}}
dismiss_low_battery_notification:
  sequence:
  - service: persistent_notification.dismiss
    data_template:
      notification_id: lowbatterydevice{{entity_id}}
wakeup_light_sunrise:
  alias: Wakeup Light Sunrise
  sequence:
  - data_template:
      brightness: 1
      white_value: 0
      entity_id: '{{entity_id}}'
      xy_color:
      - 0.67
      - 0.39
    service: light.turn_on
  - delay:
      seconds: 1
  - data_template:
      brightness: 85
      transition: 12
      white_value: 0
      entity_id: '{{entity_id}}'
      xy_color:
      - 0.65
      - 0.41
    service: light.turn_on
  - delay:
      seconds: 15
  - data_template:
      brightness: 170
      transition: 12
      white_value: 0
      entity_id: '{{entity_id}}'
      xy_color:
      - 0.6
      - 0.4
    service: light.turn_on
  - delay:
      seconds: 15
  - data_template:
      brightness: 255
      transition: 12
      white_value: 0
      entity_id: '{{entity_id}}'
      xy_color:
      - 0.48
      - 0.4
    service: light.turn_on
  - delay:
      seconds: 15
  - data_template:
      brightness: 255
      color_name: white
      transition: 12
      white_value: 255
      entity_id: '{{entity_id}}'
    service: light.turn_on
  - delay:
      seconds: 15
play_studiobrussel_home:
  sequence:
  - data_template:
      entity_id: media_player.huis
      media_content_id: "{% if states('input_select.stu_bru_streams') == 'Bruut' %}\n\
        \  http://icecast.vrtcdn.be/stubru_bruut.aac\n{% elif states('input_select.stu_bru_streams')\
        \ == 'Hooray' %}\n  http://icecast.vrtcdn.be/stubru_hiphophooray.aac\n{% elif\
        \ states('input_select.stu_bru_streams') == 'De Tijdloze' %}\n  http://icecast.vrtcdn.be/stubru_tijdloze.aac\n\
        {% elif states('input_select.stu_bru_streams') == '#ikluisterbelgisch' %}\n\
        \  http://icecast.vrtcdn.be/stubru_tgs.aac\n{% elif states('input_select.stu_bru_streams')\
        \ == 'Live Radio' %}\n  http://icecast.vrtcdn.be/stubru.aac\n{% endif %}"
      media_content_type: music
    service: media_player.play_media
sunrise_wled:
  alias: Sunrise wled
  sequence:
  - service: wled.effect
    data:
      entity_id: '{{ wled_id }}'
      effect: solid
  - service: wled.effect
    data_template:
      entity_id: '{{ wled_id }}'
      effect: sunrise
      speed: '{{ time | int }}'
      intensity: 255
  - service: light.turn_on
    data_template:
      entity_id: '{{ wled_id }}'
  - delay: '{{ time | multiply(60) | int }}'
  mode: parallel
  icon: mdi:weather-sunset-up
  max: 4
activate_night_mode:
  alias: Active Guest Mode
  sequence:
  - service: input_boolean.turn_on
    data:
      entity_id: input_boolean.night_mode
deactivate_night_mode:
  alias: Deactivate Guest Mode
  sequence:
  - service: input_boolean.turn_off
    data:
      entity_id: input_boolean.night_mode
night_mode_turn_on:
  alias: Night Mode Turn On
  sequence:
    - service: script.turn_on_motion_detection_camera
night_mode_turn_off:
  alias: Night Mode Turn Off
  sequence:
    - service: script.turn_off_motion_detection_camera