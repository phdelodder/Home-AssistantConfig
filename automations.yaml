- id: Start_Up_Home_Assistant
  alias: Start Up Home Assistant
  trigger:
  - platform: homeassistant
    event: start
  action:
  - service: script.turn_on
    entity_id: script.start_up_home_assistant
- id: Update Last Motion
  alias: Update Last Motion
  trigger:
  - platform: state
    entity_id:
    - binary_sensor.bureau_motion
    - binary_sensor.speelkamer_motion
    - binary_sensor.motion_achterdeur
    - binary_sensor.oprit_camera
    - binary_sensor.voor_deur
    - binary_sensor.achter_deur
    - binary_sensor.keuken_deur
    - binary_sensor.garage_deur
    - binary_sensor.motion_wc_boven
    - binary_sensor.motion_wc_beneden
    - binary_sensor.motion_gang_eerste_2
    - binary_sensor.motion_gang_eerste_1
    - binary_sensor.motion_inkom_1
    - binary_sensor.motion_inkom_2
    - binary_sensor.motion_gang_zolder
    - binary_sensor.motion_voordeur
    - binary_sensor.motion_bureau
    - binary_sensor.motion_dressing
    - binary_sensor.motion_speelkamer
    - binary_sensor.motion_living
    - binary_sensor.motion_keuken
    to: 'on'
  action:
  - service: variable.set_variable
    data:
      variable: last_motion
      attributes:
        history_1: '{{ trigger.to_state.attributes.friendly_name|replace(''motion
          sensor'','''') }}'
        history_2: '{{ states.variable.last_motion.attributes.history_1 }}'
        history_3: '{{ states.variable.last_motion.attributes.history_2 }}'
        history_4: '{{ states.variable.last_motion.attributes.history_3 }}'
        history_5: '{{ states.variable.last_motion.attributes.history_4 }}'
        history_6: '{{ states.variable.last_motion.attributes.history_5 }}'
        history_7: '{{ states.variable.last_motion.attributes.history_6 }}'
        history_8: '{{ states.variable.last_motion.attributes.history_7 }}'
        history_9: '{{ states.variable.last_motion.attributes.history_8 }}'
        history_10: '{{ states.variable.last_motion.attributes.history_9 }}'
      value: '{{ trigger.to_state.attributes.friendly_name|replace(''motion sensor'','''')
        }}: {{as_timestamp(states.variable.last_motion.last_changed)| timestamp_custom(''%X'')
        }}

        '
  initial_state: true
  mode: single
- id: '1575277594428'
  alias: Set night profile for oprit camera
  description: ''
  trigger:
  - event: sunset
    platform: sun
  condition: []
  action:
  - service: shell_command.set_oprit_profile_night
- id: '1575277627609'
  alias: Set day profile for oprit camera
  description: ''
  trigger:
  - event: sunrise
    platform: sun
  condition: []
  action:
  - service: shell_command.set_oprit_profile_day
- id: '1586931483975'
  alias: 'Notify: Afval Collection'
  description: ''
  trigger:
  - at: '18:00:00'
    platform: time
  condition:
  - condition: or
    conditions:
    - condition: state
      entity_id: sensor.recycleapp_morgen
      state: papier, pmd
    - condition: state
      entity_id: sensor.recycleapp_morgen
      state: restafval
    - condition: state
      entity_id: sensor.recycleapp_morgen
      state: groenafval
  action:
  - data: {}
    service: script.notify_afval
  mode: single
- id: '1587360682923'
  alias: Alarm Clock Philippe
  trigger:
  - platform: template
    value_template: '{% set alarm_time = as_timestamp(states(''sensor.pixel_5_volgende_alarm''),
      none) %}

      {% set time_now = as_timestamp(states(''sensor.date_time'').replace('','',''''),
      none) %}

      {{ alarm_time is not none and time_now >= ( alarm_time - 300) }}'
  condition:
  - condition: state
    entity_id: person.philippe
    state: home
  action:
  - service: script.sunrise_wled
    data:
      wled_id: light.led_slaapkamer
      time: 5
  mode: single
- id: Sync Tasmota states
  alias: Sync Tasmota states
  trigger:
  - event: start
    platform: homeassistant
  action:
  - data:
      payload: ''
      topic: cmnd/tasmotas/state
    service: mqtt.publish
  - data:
      payload: ''
      topic: cmnd/tasmotas/shutterposition
    service: mqtt.publish
  - data:
      payload: ''
      topic: tasmotas/cmnd/state
    service: mqtt.publish
  - data:
      payload: 0
      topic: cmnd/tasmotas/status
    service: mqtt.publish
  initial_state: true
- id: Alarm Clock Febe
  alias: Alarm Clock Febe
  trigger:
  - platform: template
    value_template: "{{ states('sensor.time') == \n    (state_attr('input_datetime.febe_next_alarm',\
      \ 'timestamp') - 300)\n         |timestamp_custom('%H:%M', false) }}"
  condition:
  - condition: state
    entity_id: input_boolean.febe_alarm_set
    state: 'on'
  action:
  - service: script.sunrise_wled
    data:
      wled_id: light.febe_led_bed
      time: 5
  - data: {}
    entity_id: input_boolean.febe_alarm_set
    service: input_boolean.turn_off
  mode: single
- id: '1578590308661'
  alias: Led Febe Aan
  description: ''
  trigger:
  - device_id: aecf8a3bd0144f6f9fbbedf7e7c503dc
    domain: deconz
    platform: device
    subtype: turn_on
    type: remote_button_short_press
  condition:
  - condition: device
    device_id: 9d61839836424735bb9de4c9ad91230a
    domain: light
    entity_id: light.febe_led_bed
    type: is_off
  action:
  - entity_id: scene.default_nachttafel_febe
    service: scene.turn_on
  mode: single
- id: '1587626119060'
  alias: Led Febe Uit
  description: ''
  trigger:
  - device_id: aecf8a3bd0144f6f9fbbedf7e7c503dc
    domain: deconz
    platform: device
    subtype: turn_on
    type: remote_button_short_press
  condition:
  - condition: device
    device_id: 9d61839836424735bb9de4c9ad91230a
    domain: light
    entity_id: light.febe_led_bed
    type: is_on
  action:
  - entity_id: light.febe_led_bed
    service: light.turn_off
  mode: single
- id: '1587624008968'
  alias: Switch Febe Shaken
  description: ''
  trigger:
  - device_id: aecf8a3bd0144f6f9fbbedf7e7c503dc
    domain: deconz
    platform: device
    subtype: ''
    type: remote_gyro_activated
  condition: []
  action:
  - data_template:
      effect: '{{ state_attr("light.febe_led_bed", "effect_list") | random }}'
      entity_id: light.febe_led_bed
      rgb_color:
      - '{{ (range(0, 255)|random) }}'
      - '{{ (range(0, 255)|random) }}'
      - '{{ (range(0, 255)|random) }}'
      transition: '{{ (range(1, 3)|random) }}'
    entity_id: light.febe_led_bed
    service: light.turn_on
  mode: single
- id: '1588246366774'
  alias: Aandacht Planten
  description: Planten die laag gehalte van water of meststof hebben
  trigger:
  - at: '18:30:00'
    platform: time
  condition:
  - condition: or
    conditions:
    - below: '25'
      condition: numeric_state
      entity_id: sensor.greenhouse_zone_1_moisture
    - below: '100'
      condition: numeric_state
      entity_id: sensor.greenhouse_zone_1_soil_conductivity
    - below: '25'
      condition: numeric_state
      entity_id: sensor.greenhouse_zone_2_moisture
    - below: '100'
      condition: numeric_state
      entity_id: sensor.greenhouse_zone_2_soil_conductivity
    - below: '25'
      condition: numeric_state
      entity_id: sensor.greenhouse_zone_3_moisture
    - below: '100'
      condition: numeric_state
      entity_id: sensor.greenhouse_zone_3_soil_conductivity
    - below: '25'
      condition: numeric_state
      entity_id: sensor.greenhouse_zone_4_moisture
    - below: '100'
      condition: numeric_state
      entity_id: sensor.greenhouse_zone_4_soil_conductivity
    - below: '25'
      condition: numeric_state
      entity_id: sensor.moestuin_moisture
    - below: '100'
      condition: numeric_state
      entity_id: sensor.moestuin_soil_conductivity
    - below: '25'
      condition: numeric_state
      entity_id: sensor.rozemarijn_moisture
    - below: '100'
      condition: numeric_state
      entity_id: sensor.rozemarijn_soil_conductivity
    - below: '25'
      condition: numeric_state
      entity_id: sensor.bloempot_voordeur_moisture
    - below: '100'
      condition: numeric_state
      entity_id: sensor.bloempot_voordeur_soil_conductivity
    - below: '25'
      condition: numeric_state
      entity_id: sensor.olijfboom_moisture
    - below: '100'
      condition: numeric_state
      entity_id: sensor.olijfboom_soil_conductivity
  action:
  - data_template:
      message: "Deze planten vragen vandaag je aandacht: {%if states('sensor.greenhouse_zone_1_moisture')\
        \ |int (0) < 20 %}\n  - Serre Zone 1 heeft water nodig, {{ states('sensor.greenhouse_zone_1_moisture')\
        \ }} %\n{%- endif %} {%- if states('sensor.greenhouse_zone_1_soil_conductivity')\
        \ |int (0) < 100 %}\n  - Serre Zone 1 heeft meststof nodig, {{ states('sensor.greenhouse_zone_1_soil_conductivity')\
        \ }} µS/cm\n{%- endif %} {%- if states('sensor.greenhouse_zone_2_moisture')\
        \ |int (0) < 20 %}\n  - Serre Zone 2 heeft water nodig, {{ states('sensor.greenhouse_zone_2_moisture')\
        \ }} %\n{%- endif %} {%- if states('sensor.greenhouse_zone_2_soil_conductivity')\
        \ |int (0) < 100 %}\n  - Serre Zone 2 heeft meststof nodig, {{ states('sensor.greenhouse_zone_2_soil_conductivity')\
        \ }} µS/cm\n{%- endif %} {%- if states('sensor.greenhouse_zone_3_moisture')\
        \ |int (0) < 20 %}\n  - Serre Zone 3 heeft water nodig, {{ states('sensor.greenhouse_zone_3_moisture')\
        \ }} %\n{%- endif %} {%- if states('sensor.greenhouse_zone_3_soil_conductivity')\
        \ |int (0) < 100 %}\n  - Serre Zone 3 heeft meststof nodig, {{ states('sensor.greenhouse_zone_3_soil_conductivity')\
        \ }} µS/cm\n{%- endif %} {%- if states('sensor.greenhouse_zone_4_moisture')\
        \ |int (0) < 20 %}\n  - Serre Zone 4 heeft water nodig, {{ states('sensor.greenhouse_zone_4_moisture')\
        \ }} %\n{%- endif %} {%- if states('sensor.greenhouse_zone_4_soil_conductivity')\
        \ |int (0) < 100 %}\n  - Serre Zone 4 heeft meststof nodig, {{ states('sensor.greenhouse_zone_4_soil_conductivity')\
        \ }} µS/cm\n{%- endif %} {%- if states('sensor.moestuin_moisture') |int (0)\
        \ < 25 %}\n  - Moestuin heeft water nodig, {{ states('sensor.moestuin_moisture')\
        \ }} %\n{%- endif %} {%- if states('sensor.moestuin_soil_conductivity') |\
        \ int < 100 %}\n  - Moestuin heeft meststof nodig, {{ states('sensor.moestuin_soil_conductivity')\
        \ }} µS/cm\n{%- endif %} {%- if states('sensor.rozemarijn_moisture') | int\
        \ < 20 %}\n  - Rozemarijn heeft water nodig, {{ states('sensor.rozemarijn_moisture')\
        \ }} %\n{%- endif %} {%- if states('sensor.rozemarijn_soil_conductivity')\
        \ |int (0) < 100 %}\n  - Rozemarijn heeft meststof nodig, {{ states('sensor.rozemarijn_soil_conductivity')\
        \ }} µS/cm\n{%- endif %} {%- if states('sensor.bloempot_voordeur_moisture')\
        \ |int (0) < 20 %}\n  - Bloempot voordeur heeft water nodig, {{ states('sensor.bloempot_voordeur_moisture')\
        \ }} %\n{%- endif %} {%- if states('sensor.bloempot_voordeur_soil_conductivity')\
        \ |int (0) < 100 %}\n  - Bloempot voordeur heeft meststof nodig, {{ states('sensor.bloempot_voordeur_soil_conductivity')\
        \ }} µS/cm\n{%- endif %} {%- if states('sensor.olijfboom_moisture') | int\
        \ < 20 %}\n  - Olijfboom voordeur heeft water nodig, {{ states('sensor.olijfboom_moisture')\
        \ }} %\n{%- endif %} {%- if states('sensor.olijfboom_soil_conductivity') |\
        \ int < 100 %}\n  - Olijfboom voordeur heeft meststof nodig, {{ states('sensor.olijfboom_soil_conductivity')\
        \ }} µS/cm\n{%- endif %}"
    service: notify.hazilverberkenstraatbot
- id: '1588439093079'
  alias: Enable Alarm Margot
  description: ''
  trigger:
  - at: '18:00:00'
    platform: time
  condition: []
  action:
  - data: {}
    entity_id: input_boolean.margot_alarm_set
    service: input_boolean.turn_on
  - choose:
    - conditions:
      - condition: time
        weekday:
        - sun
        - mon
        - tue
        - wed
        - thu
      sequence:
      - service: input_datetime.set_datetime
        data:
          time: 07:15:00
        entity_id: input_datetime.margot_next_alarm
    - conditions:
      - condition: time
        weekday:
        - fri
        - sat
      sequence:
      - service: input_datetime.set_datetime
        data:
          time: 08:00:00
        entity_id: input_datetime.margot_next_alarm
    default: []
- id: '1588439142845'
  alias: Enable Alarm Febe
  description: ''
  trigger:
  - at: '18:00:00'
    platform: time
  condition: []
  action:
  - data: {}
    entity_id: input_boolean.febe_alarm_set
    service: input_boolean.turn_on
  - choose:
    - conditions:
      - condition: time
        weekday:
        - sun
        - mon
        - tue
        - wed
        - thu
      sequence:
      - service: input_datetime.set_datetime
        data:
          time: 07:15:00
        entity_id: input_datetime.febe_next_alarm
    - conditions:
      - condition: time
        weekday:
        - fri
        - sat
      sequence:
      - service: input_datetime.set_datetime
        data:
          time: 08:00:00
        entity_id: input_datetime.febe_next_alarm
    default: []
  mode: single
- id: '1598594585829'
  alias: Disable Motion Sensor Bureau
  description: ''
  trigger:
  - device_id: a23a7754f95b4a88ad347941e45bfd6b
    domain: deconz
    platform: device
    subtype: turn_on
    type: remote_button_short_press
  condition: []
  action:
  - data: {}
    entity_id: input_boolean.disable_motion_trigger_light_bureau
    service: input_boolean.turn_on
  mode: single
- id: '1598594636282'
  alias: Enable Motion Sensor Bureau
  description: ''
  trigger:
  - device_id: a23a7754f95b4a88ad347941e45bfd6b
    domain: deconz
    platform: device
    subtype: turn_off
    type: remote_button_short_press
  condition: []
  action:
  - data: {}
    entity_id: input_boolean.disable_motion_trigger_light_bureau
    service: input_boolean.turn_off
  mode: single
- id: '1600753998896'
  alias: 'Leaving: automatically turn off'
  description: ''
  trigger:
  - platform: state
    entity_id: binary_sensor.no_one_home
    to: 'on'
    for:
      minutes: 1
  condition:
  - condition: state
    entity_id:
    - input_boolean.guest_mode
    state: 'off'
  action:
  - service: script.leaving
- id: '1600753998897'
  alias: 'Leaving: start vacuum after 5 mins'
  description: ''
  trigger:
  - platform: state
    entity_id: binary_sensor.no_one_home
    to: 'on'
    for: 0:05:00
  condition:
  - condition: state
    entity_id:
    - input_boolean.guest_mode
    state: 'off'
  action:
  - service: script.vacuum_automated
  mode: single
- id: '1600754548159'
  alias: 'Leaving: set thermostat to Away'
  description: Set thermostat to Away
  trigger:
  - platform: state
    entity_id: binary_sensor.no_one_home
    to: 'on'
    for: 0:01:00
  - platform: template
    value_template: '{{ is_state(''person.isabel'', ''Az-Sint Jan'') and is_state(''person.philippe'',
      ''Connective'') }}'
  condition:
  - condition: state
    entity_id:
    - input_boolean.guest_mode
    state: 'off'
  action:
  - service: script.set_thermostat_away
  mode: single
- id: '1600754448159'
  alias: Arriving
  description: ''
  trigger:
  - platform: state
    entity_id: binary_sensor.no_one_home
    to: 'off'
  condition: []
  action:
  - service: script.arriving
  mode: single
- id: '1600756948650'
  alias: Woonkamer Lights Morning On
  description: ''
  trigger:
  - platform: state
    entity_id: binary_sensor.motion_living
    to: 'on'
  condition:
  - condition: and
    conditions:
    - condition: time
      after: '6:00:00'
      before: '9:30:00'
    - condition: state
      entity_id: binary_sensor.no_one_home
      state: 'off'
    - condition: template
      value_template: '{{ states(''sensor.illuminance_living'') | float(0)<= 2 }}'
  action:
  - service: scene.turn_on
    data:
      entity_id: scene.woonkamer_morning
      transition: 60
  mode: single
- id: '1600757546616'
  alias: Woonkamer Lights Morning Off
  description: ''
  trigger:
  - platform: template
    value_template: '{{ states(''sensor.illuminance_living'') | float(0)> 2 and (states(''sensor.time'')
      >= ''06:00:00'' and states(''sensor.time'') <= ''09:29:55'') }}'
  - platform: time
    at: 09:29:55
  - platform: state
    entity_id: binary_sensor.motion_living
    to: 'off'
    for: 00:30:00
    from: 'on'
  condition:
  - condition: time
    after: 06:00:00
    before: 09:30:00
  action:
  - scene: scene.woonkamer_off
  mode: single
- id: '1600758658063'
  alias: Woonkamer Lights Eve On
  description: ''
  trigger:
  - platform: time
    at: '16:00:00'
  - platform: state
    entity_id: binary_sensor.no_one_home
    to: 'off'
  - platform: template
    value_template: '{{ states(''sensor.illuminance_living'') | float(0)< 4 and (states(''sensor.time'')
      >= ''16:00:00'' and states(''sensor.time'') <= ''19:00:00'') }}'
  condition:
  - condition: time
    after: '16:00:00'
    before: '19:00:00'
  - condition: state
    entity_id: binary_sensor.no_one_home
    state: 'off'
  - condition: numeric_state
    entity_id: sensor.illuminance_living
    below: '4'
  action:
  - service: scene.turn_on
    data:
      entity_id: scene.woonkamer_eve
      transition: 60
  mode: single
- id: '1600759062566'
  alias: Woonkamer Lights Evening On
  description: ''
  trigger:
  - platform: time
    at: '19:00:00'
  - platform: state
    entity_id: binary_sensor.no_one_home
    to: 'off'
  - platform: template
    value_template: '{{ states(''sensor.illuminance_living'') | float(0)< 3 and (states(''sensor.time'')
      >= ''19:00:00'') }}'
  condition:
  - condition: time
    after: '19:00:00'
    before: '22:00:00'
  - condition: state
    entity_id: binary_sensor.no_one_home
    state: 'off'
  - condition: numeric_state
    entity_id: sensor.illuminance_living
    below: '3'
  action:
  - service: scene.turn_on
    data:
      entity_id: scene.woonkamer_evening
      transition: 60
  mode: single
- id: '1600759267237'
  alias: Woonkamer Lights Night
  description: ''
  trigger:
  - platform: state
    entity_id: binary_sensor.motion_living
    to: 'on'
  condition:
  - condition: time
    after: '22:00:00'
    before: 06:00:00
  - condition: state
    entity_id: binary_sensor.no_one_home
    state: 'off'
  - condition: not
    conditions:
    - condition: state
      entity_id: media_player.samsung_samsung_dtv_rcr
      state: 'on'
  action:
  - service: scene.turn_on
    data:
      entity_id: scene.woonkamer_night
      transition: 60
  - delay: 00:04:00
  - service: scene.turn_on
    data:
      entity_id: scene.woonkamer_off
      transition: 60
  mode: restart
- id: '1600759643151'
  alias: Woonkamer Lights Evening Off
  description: ''
  trigger:
  - platform: time
    at: '22:00:00'
  condition: []
  action:
  - choose:
    - conditions:
        condition: state
        entity_id: media_player.samsung_samsung_dtv_rcr
        state: 'on'
      sequence:
      - wait_for_trigger:
          platform: state
          entity_id: media_player.samsung_samsung_dtv_rcr
          for:
            minutes: 5
          to: 'off'
  - service: scene.turn_on
    data:
      entity_id: scene.woonkamer_off
      transition: 60
  mode: single
- id: '1600846307260'
  alias: Reset Daily Inputs
  description: ''
  trigger:
  - platform: time
    at: 00:00:00
  condition: []
  action:
  - service: input_boolean.turn_off
    entity_id: input_boolean.daily_vacuum_first_run
  mode: single
- id: '1600848151975'
  alias: 'Telegram: Vacuum Response'
  description: ''
  trigger:
  - platform: event
    event_type: telegram_callback
    event_data:
      command: /vacuumemptybindone
  - platform: event
    event_type: telegram_callback
    event_data:
      command: /vacuumemptybinextend
  condition: []
  action:
  - service: script.vacuum_bin_feedback
    data:
      callback_id: '{{ trigger.event.data.id }}'
      command: '{{ trigger.event.data[''command''].strip(''/'') }}'
  mode: single
- id: '1600848151075'
  alias: 'Telegram: Guest Mode Response'
  description: ''
  trigger:
  - platform: event
    event_type: telegram_callback
    event_data:
      command: /yesguest
  - platform: event
    event_type: telegram_callback
    event_data:
      command: /noguest
  condition: []
  action:
  - service: script.guest_mode_feedback
    data:
      callback_id: '{{ trigger.event.data.id }}'
      command: '{{ trigger.event.data[''command''].strip(''/'') }}'
  mode: single
- id: '1600850581196'
  alias: 'Vacuum: Select Room'
  description: ''
  trigger:
  - platform: state
    entity_id: input_select.vacuum_room
    from: Selecteer Kamer
  condition: []
  action:
  - service: script.vacuum_zone
    data:
      zone: '{{ states(''input_select.vacuum_room'') }}'
  mode: single
- id: '1600861348101'
  alias: 'Security: motion detected indoor but we are not home'
  description: ''
  trigger:
  - platform: state
    entity_id:
    - binary_sensor.motion_wc_beneden
    - binary_sensor.motion_gang_eerste_2
    - binary_sensor.motion_gang_eerste_1
    - binary_sensor.motion_inkom_1
    - binary_sensor.motion_inkom_2
    - binary_sensor.motion_living
    to: 'on'
  condition:
  - condition: state
    entity_id: binary_sensor.no_one_home
    state: 'on'
  - condition: state
    entity_id: vacuum.dalek
    state: docked
  - condition: state
    entity_id: binary_sensor.guest_mode
    state: 'off'
  action:
  - service: script.motion_detected
    data:
      sensor: '{{ trigger.entity_id }}'
  mode: single
- id: '1600870113700'
  alias: 'Guest Mode: Activate/Deactivate'
  description: ''
  trigger:
  - platform: state
    entity_id: input_boolean.guest_mode
  condition: []
  action:
  - choose:
    - conditions:
      - condition: state
        entity_id: input_boolean.guest_mode
        state: 'on'
      sequence:
      - service: script.activate_guest_mode
        data: {}
    - conditions:
      - condition: state
        entity_id: input_boolean.guest_mode
        state: 'off'
      sequence:
      - service: script.deactivate_guest_mode
    default: []
  mode: single
- id: '1600870370709'
  alias: Set Timed Temperature Based on Input
  description: ''
  trigger:
  - platform: time
    at: input_datetime.temperaturetime
  condition:
  - condition: state
    entity_id: input_boolean.tempsetactive
    state: 'on'
  action:
  - service: script.set_temperature
    data: {}
  mode: single
- id: '1600927539284'
  alias: 'Night Mode: Activate'
  description: ''
  trigger:
  - platform: time
    at: '21:30:00'
  - platform: state
    entity_id: binary_sensor.no_one_home
    to: 'off'
    for: 00:01:00
  - platform: homeassistant
    event: start
  condition:
  - condition: state
    entity_id: binary_sensor.no_one_home
    state: 'off'
  - condition: time
    after: '21:30:00'
    before: 07:15:00
  action:
  - service: input_boolean.turn_on
    data: {}
    entity_id: input_boolean.night_mode
  mode: single
- id: '1600927587299'
  alias: 'Night Mode: Deactivate Weekday'
  description: ''
  trigger:
  - platform: time
    at: 07:15:00
  - platform: homeassistant
    event: start
  condition:
  - condition: time
    after: 07:15:00
    before: '21:30:00'
  - condition: state
    entity_id: binary_sensor.workday_sensor
    state: 'on'
  - condition: state
    entity_id: binary_sensor.school_vacation
    state: 'off'
  action:
  - service: script.deactivate_night_mode
    data: {}
  mode: single
- id: '1600928587299'
  alias: 'Notify: Bureau Led Door Opened'
  description: ''
  trigger:
  - platform: state
    entity_id:
    - binary_sensor.voor_deur
    - binary_sensor.keuken_deur
    - binary_sensor.achter_deur
    - binary_sensor.garage_deur
    from: 'off'
    to: 'on'
  condition:
  - condition: state
    entity_id:
    - binary_sensor.motion_detected_bureau_in_last_hour
    state: 'on'
  action:
  - service: scene.create
    data:
      scene_id: notify_led_bureau
      snapshot_entities: light.desk_lamp
  - variables:
      effect: '{{ state_attr(''light.desk_lamp'', ''effect'')}}'
  - service: wled.effect
    target:
      entity_id: light.desk_lamp
    data:
      effect: Police
  - service: light.turn_on
    data:
      brightness_pct: 100
    target:
      entity_id: light.desk_lamp
  - delay: 00:01:00
  - service: light.turn_off
    target:
      entity_id: light.desk_lamp
  - scene: scene.notify_led_bureau
  - service: wled.effect
    data_template:
      effect: '{{ effect }}'
      entity_id: light.desk_lamp
  mode: single
- id: '1600928588299'
  alias: 'Night Mode: Toggle'
  description: ''
  trigger:
  - platform: state
    entity_id: binary_sensor.night_mode
    for:
      minutes: 1
  condition: []
  action:
  - service: script.night_mode_turn_{{ trigger.to_state.state }}
- id: '1601324314469'
  alias: 'Night Mode: Deactivate Weekend'
  description: ''
  trigger:
  - platform: time
    at: 08:00:00
  - platform: state
    entity_id: binary_sensor.no_one_home
    to: 'off'
    for: 00:01:00
  - platform: homeassistant
    event: start
  condition:
  - condition: state
    entity_id: binary_sensor.no_one_home
    state: 'off'
  - condition: time
    after: 08:00:00
    before: '21:30:00'
  - condition: state
    entity_id: binary_sensor.workday_sensor
    state: 'off'
  action:
  - service: script.deactivate_night_mode
    data: {}
  mode: single
- id: '1602156764240'
  alias: Radio Beneden
  description: Radio aansteken, 's morgens (beweging), door de dag op presence
  trigger:
  - platform: state
    entity_id: binary_sensor.motion_living
    to: 'on'
  - platform: state
    entity_id: binary_sensor.no_one_home
    to: 'off'
  condition:
  - condition: and
    conditions:
    - condition: time
      after: '6:00'
      before: '18:00'
    - condition: state
      entity_id: media_player.beneden
      state: 'off'
    - condition: not
      conditions:
      - condition: state
        entity_id: media_player.samsung_samsung_dtv_rcr
        state: 'on'
  action:
  - service: script.radio_beneden
    data: {}
  mode: single
- id: '1602686644196'
  alias: Vacuum Started Cleaning
  description: ''
  trigger:
  - platform: state
    entity_id: vacuum.dalek
    to: cleaning
  condition:
  - condition: state
    entity_id: input_select.vacuum_room
    state: Selecteer Kamer
  action:
  - service: script.vacuum_record_run
  - service: script.vacuum_notify
    data: {}
  mode: single
- id: '1603348403144'
  alias: Cabinet Fan Control
  description: Controls the fan speed depending on the temperature
  trigger:
  - platform: state
    entity_id: sensor.temperature_bureau
  condition: []
  action:
  - choose:
    - conditions:
      - condition: numeric_state
        entity_id: sensor.temperature_bureau
        below: '21'
      sequence:
      - service: fan.turn_off
        data:
          entity_id:
          - fan.cabinet_fan_1
          - fan.cabinet_fan_2
    default:
    - service: fan.turn_on
      data_template:
        entity_id:
        - fan.cabinet_fan_1
        - fan.cabinet_fan_2
        percentage: "{% if states('sensor.temperature_bureau') | float(0)> 28 %}\n\
          \  100\n{% elif states('sensor.temperature_bureau') | float(0)> 25 %}\n\
          \  50\n{% elif states('sensor.temperature_bureau') | float(0)>= 21 %}\n\
          \  25\n{% endif %}\n"
  mode: single
- id: '1604346606992'
  alias: 'Security: MotionEye - Oprit'
  description: ''
  trigger:
  - platform: state
    entity_id:
    - binary_sensor.oprit_cctv_motion
    to: 'on'
  action:
  - service: input_number.set_value
    entity_id: input_number.oprit_last_cctv_motion_event
    data_template:
      value: '{{ state_attr(''binary_sensor.oprit_cctv_motion'',''eventnumber'') }}'
  - service: input_datetime.set_datetime
    entity_id: input_datetime.oprit_last_cctv_motion
    data_template:
      date: '{{ state_attr(''binary_sensor.oprit_cctv_motion'',''timestamp'').split(''
        '')[0] }}'
      time: '{{ state_attr(''binary_sensor.oprit_cctv_motion'',''timestamp'').split(''
        '')[1].replace(''-'','':'') }}'
  - repeat:
      sequence:
      - service: image_processing.scan
        entity_id: image_processing.doods_oprit
      - wait_for_trigger:
        - platform: state
          entity_id: image_processing.doods_oprit
          attribute: matches
        timeout: 00:00:05
      - service: script.turn_on
        entity_id:
        - script.motioneye_test_person_object
        - script.motioneye_test_car_object
      - wait_template: '{{ is_state(''script.motioneye_test_person_object'',''off'')
          and is_state(''script.motioneye_test_car_object'',''off'') }}'
      until:
      - condition: template
        value_template: '{{ is_state(''binary_sensor.oprit_cctv_motion'', ''off'')
          or is_state(''binary_sensor.oprit_motion'',''on'') }}'
  - wait_template: '{{ is_state(''binary_sensor.oprit_cctv_motion'', ''off'') }}'
    timeout: 02:00:00
  - choose:
    - conditions:
      - condition: state
        entity_id: input_boolean.oprit_motion
        state: 'off'
      sequence:
      - service: shell_command.remove_motioneye_movie
        data_template:
          camera_id: 1
          file: '{{ (as_timestamp(states.input_datetime.oprit_last_cctv_motion.state))
            | timestamp_custom(''%Y-%m-%d'')}}/{{ ''%02d'' % states(''input_number.oprit_last_cctv_motion_event'')
            |int (0) }}'
          event: '{{ ''%02d'' % states(''input_number.oprit_last_cctv_motion_event'')
            |int (0) }}'
    default:
    - service: shell_command.move_event_snapshots
      data_template:
        camera_name: oprit
        event: '{{ ''%02d'' % states(''input_number.oprit_last_cctv_motion_event'')
          |int (0) }}'
  - service: input_boolean.turn_off
    data: {}
    entity_id: input_boolean.oprit_motion
  mode: single
- id: '1604821741495'
  alias: 'Security: Enable Oprit Motion Detection'
  description: Enable Oprit Motion Detection at sunset
  trigger:
  - platform: sun
    event: sunset
  condition: []
  action:
  - service: script.turn_on_motion_detection_camera
    data: {}
  mode: single
- id: '1604821819133'
  alias: 'Security: Disable Oprit Motion Detection'
  description: Disable Oprit Motion Detection at sunrise
  trigger:
  - platform: sun
    event: sunrise
  condition:
  - condition: and
    conditions:
    - condition: state
      entity_id: binary_sensor.night_mode
      state: 'off'
    - condition: state
      entity_id: binary_sensor.no_one_home
      state: 'off'
  action:
  - service: script.turn_off_motion_detection_camera
    data: {}
  mode: single
- id: '1607349802281'
  alias: 'Verlichting Buiten Voorkant: On'
  description: ''
  trigger:
  - platform: sun
    event: sunset
    offset: -00:45:00
  - platform: time
    at: 05:30
  condition: []
  action:
  - service: switch.turn_on
    data: {}
    entity_id: switch.verlichting_buiten_voorkant
  mode: single
- id: '1607349875705'
  alias: 'Verlichting Buiten Voorkant: Off'
  description: ''
  trigger:
  - platform: time
    at: '23:00'
  - platform: sun
    event: sunrise
    offset: +00:45:00
  condition: []
  action:
  - service: switch.turn_off
    data: {}
    entity_id: switch.verlichting_buiten_voorkant
  mode: single
- id: '1607930433185'
  alias: 'Motion: WC Beneden'
  description: ''
  use_blueprint:
    path: homeassistant/motion_light.yaml
    input:
      no_motion_wait: '65'
      motion_entity: binary_sensor.motion_wc_beneden
      light_target:
        area_id: 91ee1f9b134f4ecca57e2fb1ba925a6f
- id: '1612165532755'
  alias: 'Climate: Set bureau temperature'
  description: Manage a more fine tuned climate control for the Bureau
  trigger:
  - platform: homeassistant
    event: start
  - platform: time
    at: 07:15:00
  - platform: state
    entity_id: binary_sensor.motion_detected_bureau_in_last_hour,switch.laptop_power,light.bureau,light.bureau_spot,sensor.house_mode
  - platform: state
    entity_id: climate.huis
    attribute: preset_mode
    to: None
    for: 00:01:00
  condition:
  - condition: template
    value_template: '{{ is_state(''sensor.house_mode'', ''home'') or is_state(''sensor.house_mode'',
      ''guest'')  }}'
  action:
  - choose:
    - conditions:
      - condition: or
        conditions:
        - condition: state
          entity_id: switch.laptop_power
          state: 'on'
        - condition: state
          entity_id: light.bureau
          state: 'on'
        - condition: state
          entity_id: light.bureau_spot
          state: 'on'
      sequence:
      - service: climate.set_temperature
        data:
          temperature: 19
          entity_id: climate.bureau
    - conditions:
      - condition: or
        conditions:
        - condition: template
          value_template: '{{state_attr(''calendar.delodderp_gmail_com'', ''start_time'')[0:10]
            == states(''sensor.date'') and state_attr(''calendar.delodderp_gmail_com'',
            ''start_time'')[11:16] == ''08:00'' and (state_attr(''calendar.delodderp_gmail_com'',
            ''message'') == ''Afwezigheid : work from home'' or state_attr(''calendar.delodderp_gmail_com'',
            ''message'') == ''Afwezigheid : Travaille à domicile'') and states(''sensor.time'')
            >= ''07:00''  }}'
      sequence:
      - service: climate.set_temperature
        data:
          temperature: 17
          entity_id: climate.bureau
    default:
    - service: climate.set_preset_mode
      data:
        preset_mode: None
        entity_id: climate.bureau
  mode: single
- id: '1612258410918'
  alias: 'Climate: Set keuken temperature'
  description: Manage a more fine tuned climate control for the Bureau
  trigger:
  - platform: state
    entity_id: person.isabel, sensor.house_mode
  - platform: homeassistant
    event: start
  - platform: state
    entity_id: binary_sensor.motion_keuken
    for: 00:10:00
  - platform: state
    entity_id: climate.huis
    attribute: preset_mode
    to: None
    for: 00:01:00
  condition:
  - condition: template
    value_template: '{{ is_state(''sensor.house_mode'', ''home'') or is_state(''sensor.house_mode'',
      ''guest'')  }}'
  action:
  - choose:
    - conditions:
      - condition: or
        conditions:
        - condition: template
          value_template: '{{state_attr(''calendar.delodderp_gmail_com'', ''start_time'')[0:10]
            == states(''sensor.date'') and state_attr(''calendar.delodderp_gmail_com'',
            ''start_time'')[11:16] == ''08:00'' and (state_attr(''calendar.delodderp_gmail_com'',
            ''message'') == ''Afwezigheid : work from home'' or state_attr(''calendar.delodderp_gmail_com'',
            ''message'') == ''Afwezigheid : Travaille à domicile'') and states(''person.isabel'')
            != ''home'' and states(''sensor.time'') >= ''08:00'' }}'
        - condition: and
          conditions:
          - condition: state
            entity_id: binary_sensor.motion_keuken
            state: 'off'
          - condition: template
            value_template: '{% set time = states(''sensor.time'') %}{{ ''08:00''
              < time < ''17:00'' }}'
      sequence:
      - service: climate.set_temperature
        data:
          temperature: 16
          entity_id: climate.keuken
    default:
    - service: climate.set_preset_mode
      data:
        preset_mode: None
        entity_id: climate.keuken
  mode: single
- id: '1612538972636'
  alias: 'Climate: Set speelkamer temperature'
  description: Manage a more fine tuned climate control for the Speelkamer
  trigger:
  - platform: state
    entity_id: binary_sensor.motion_speelkamer
    for: 00:10:00
  - platform: state
    entity_id: light.speelkamer
  - platform: homeassistant
    event: start
  - platform: state
    entity_id: climate.huis
    attribute: preset_mode
    to: None
    for: 00:01:00
  - platform: state
    entity_id: sensor.house_mode
  condition:
  - condition: template
    value_template: '{{ is_state(''sensor.house_mode'', ''home'') or is_state(''sensor.house_mode'',
      ''guest'')  }}'
  action:
  - choose:
    - conditions:
      - condition: or
        conditions:
        - condition: state
          entity_id: light.speelkamer
          state: 'on'
        - condition: state
          entity_id: binary_sensor.motion_speelkamer
          state: 'on'
      sequence:
      - service: climate.set_temperature
        data:
          temperature: 18
          entity_id: climate.speelkamer
    default:
    - service: climate.set_preset_mode
      data:
        preset_mode: None
        entity_id: climate.speelkamer
  mode: single
- id: '1613471447340'
  alias: 'Leaving: Activate Vacation Mode'
  description: ''
  trigger:
  - platform: state
    entity_id: binary_sensor.no_one_home
    to: 'on'
    for: '24:00:00'
  condition: []
  action:
  - service: script.activate_vacation_mode
    data: {}
  mode: single
- id: '1613482887399'
  alias: 'Climate: Set Febe slaapkamer temperature'
  description: ''
  trigger:
  - platform: template
    value_template: '{% set time = states(''sensor.time'') %} {{ (''15:30'' == time
      and (now().weekday() == 0 )) or (''16:10'' == time and (now().weekday() == 1
      or now().weekday() == 3 )) }}'
  - platform: homeassistant
    event: start
  - platform: state
    entity_id: sensor.house_mode
  - platform: state
    entity_id: climate.huis
    attribute: preset_mode
    to: None
    for: 00:01:00
  condition:
  - condition: state
    entity_id: binary_sensor.school_vacation
    state: 'off'
  - condition: template
    value_template: '{{ is_state(''sensor.house_mode'', ''home'') or is_state(''sensor.house_mode'',
      ''guest'')  }}'
  action:
  - choose:
    - conditions:
      - condition: or
        conditions:
        - condition: template
          value_template: '{% set time = states(''sensor.time'') %} {{ ''15:30'' <=
            time < ''17:30'' and (now().weekday() == 0 ) }}'
        - condition: template
          value_template: '{% set time = states(''sensor.time'') %} {{ ''16:10'' <=
            time < ''17:30'' and (now().weekday() == 1 or now().weekday() == 3 ) }}'
      sequence:
      - service: evohome_cc.set_zone_mode
        data:
          entity_id: climate.febe
          mode: temporary_override
          setpoint: 18
          duration:
            minutes: 60
    default:
    - service: climate.set_preset_mode
      data:
        preset_mode: None
        entity_id: climate.febe
  mode: single
- id: '1614091814826'
  alias: 'Climate: Eco Mode Toggle'
  description: ''
  trigger:
  - platform: state
    entity_id: group.doordetection
    from: 'on'
    to: 'off'
    for: 00:05:00
  - platform: state
    entity_id: group.doordetection
    from: 'off'
    to: 'on'
    for: 00:10:00
  - platform: homeassistant
    event: start
  condition:
  - condition: template
    value_template: '{{ is_state(''sensor.house_mode'', ''home'') or is_state(''sensor.house_mode'',
      ''guest'')  }}'
  - condition: not
    conditions:
    - condition: state
      entity_id: climate.huis
      state: 'off'
  action:
  - choose:
    - conditions:
      - condition: state
        entity_id: group.doordetection
        state: 'on'
      sequence:
      - service: climate.set_preset_mode
        data:
          preset_mode: eco
        entity_id: climate.huis
      - wait_template: '{{ is_state_attr(''climate.huis'', ''preset_mode'', ''eco'')
          }}'
      - service: climate.set_temperature
        data:
          entity_id:
          - climate.margot
          - climate.slaapkamer
          - climate.febe
          - climate.dressing
          - climate.badkamer
          - climate.bureau
          - climate.speelkamer
          - climate.inkom
          temperature: 10
    default:
    - service: climate.set_preset_mode
      data:
        preset_mode: None
      entity_id: climate.huis
  mode: single
- id: '1618987551917'
  alias: 'Security: door opened but we are not home'
  description: ''
  trigger:
  - platform: state
    entity_id: binary_sensor.voor_deur,binary_sensor.achter_deur,binary_sensor.keuken_deur,binary_sensor.garage_deur
    to: 'on'
  condition:
  - condition: state
    entity_id: binary_sensor.no_one_home
    state: 'on'
  - condition: state
    entity_id: vacuum.dalek
    state: docked
  - condition: state
    entity_id: binary_sensor.guest_mode
    state: 'off'
  action:
  - service: script.motion_detected
    data:
      sensor: '{{ trigger.entity_id }}'
  mode: single
- id: '1620915049409'
  alias: Led Margot Aan
  description: ''
  trigger:
  - device_id: ed641ace598140ab84eff39005e4e6d0
    domain: deconz
    platform: device
    type: remote_button_short_press
    subtype: turn_on
  condition:
  - condition: device
    device_id: ed641ace598140ab84eff39005e4e6d0
    domain: light
    entity_id: light.margot_led_bed
    type: is_off
  action:
  - service: scene.turn_on
    data: {}
    target:
      entity_id: scene.default_led_margot
  mode: single
- id: '1620915170554'
  alias: Led Margot Uit
  description: ''
  trigger:
  - device_id: ed641ace598140ab84eff39005e4e6d0
    domain: deconz
    platform: device
    type: remote_button_short_press
    subtype: turn_on
  condition:
  - condition: device
    device_id: ed641ace598140ab84eff39005e4e6d0
    domain: light
    entity_id: light.margot_led_bed
    type: is_on
  action:
  - service: light.turn_off
    data: {}
    target:
      entity_id: light.margot_led_bed
  mode: single
- id: '1620915215402'
  alias: Switch Margot Shaken
  description: ''
  trigger:
  - device_id: ed641ace598140ab84eff39005e4e6d0
    domain: deconz
    platform: device
    type: remote_gyro_activated
    subtype: ''
  condition: []
  action:
  - data_template:
      effect: '{{ state_attr("light.margot_led_bed", "effect_list") | random }}'
      entity_id: light.margot_led_bed
      rgb_color:
      - '{{ (range(0, 255)|random) }}'
      - '{{ (range(0, 255)|random) }}'
      - '{{ (range(0, 255)|random) }}'
      transition: '{{ (range(1, 3)|random) }}'
    entity_id: light.margot_led_bed
    service: light.turn_on
  mode: single
- id: '1624886218945'
  alias: Droogkast Aan/Uit
  description: ''
  trigger:
  - device_id: 04757106488845c38a60b36c28487bc3
    domain: deconz
    platform: device
    type: remote_button_short_press
    subtype: turn_on
  condition: []
  action:
  - service: switch.toggle
    target:
      device_id: 8a3c2cdc29991ba22e958431889b1dca
  mode: single
- id: '1626411842297'
  alias: 'Notify: Wekelijks Rapport Waterpomp '
  description: ''
  trigger:
  - platform: time
    at: '23:55:00'
  condition:
  - condition: time
    weekday:
    - sun
  action:
  - service: notify.hazilverberkenstraatbot
    data:
      title: 'Wekelijks Rapport Waterpomp '
      message: "{% if ((states('sensor.waterpump_water_usage_weekly') |\n        float)>(state_attr('sensor.waterpump_water_usage_weekly',\
        \ 'last_period') | float)) -%}\n  Water verbruik is gestegen met {{(((states('sensor.waterpump_water_usage_weekly')\
        \ | float)-(state_attr('sensor.waterpump_water_usage_weekly', 'last_period')\
        \ | float))*100/(state_attr('sensor.waterpump_water_usage_weekly', 'last_period')\
        \ | float)) | round(1)}}% vergeleken met vorige week, met {{ (states('sensor.waterpump_water_usage_weekly')\
        \  | float(0)- state_attr('sensor.waterpump_water_usage_weekly', 'last_period')\
        \ | float) | round (0) }} liter\n{%- else -%}\n  Water verbruik is gedaald\
        \ met {{(((state_attr('sensor.waterpump_water_usage_weekly', 'last_period')\
        \ | float)-(states('sensor.waterpump_water_usage_weekly') | float))*100/(state_attr('sensor.waterpump_water_usage_weekly',\
        \ 'last_period') | float)) | round(1)}}% vergeleken met vorige week, met {{\
        \ (state_attr('sensor.waterpump_water_usage_weekly', 'last_period')  | float\
        \ - states('sensor.waterpump_water_usage_weekly') | float) | round (0) }}\
        \ liter\n{%- endif %}  Deze week: {{ states('sensor.waterpump_water_usage_weekly')\
        \ | round (0) }} liter Vorige week: {{ state_attr('sensor.waterpump_water_usage_weekly',\
        \ 'last_period') | round (0) }} liter"
  mode: single
- id: '1627036994004'
  alias: 'Notify: Monitor Grill Temp'
  description: ''
  trigger:
  - platform: state
    entity_id: sensor.ibbq_probe_1_grill_alert_temp
  condition: []
  action:
  - choose:
    - conditions:
      - condition: state
        entity_id: sensor.ibbq_probe_1_grill_alert_temp
        state: Alert
      sequence:
      - service: notify.mobile_app_pixel_5
        data_template:
          message: Grill temp outside limits. Currently {{ states('sensor.ibbq_temperature_probe_1')
            }} °C
          title: Grill Alert
    - conditions:
      - condition: state
        entity_id: sensor.ibbq_probe_1_grill_alert_temp
        state: Normal
      sequence:
      - service: notify.mobile_app_pixel_5
        data_template:
          message: Grill temp inside limits. Currently {{ states('sensor.ibbq_temperature_probe_1')
            }} °C
          title: Grill Alert
    default: []
  mode: single
- id: '1627037302668'
  alias: 'Notify: Probe 2 Target Temp'
  description: ''
  trigger:
  - platform: state
    entity_id: sensor.ibbq_probe_2_target_alert_temp
    to: Alert
  condition: []
  action:
  - service: notify.mobile_app_pixel_5
    data_template:
      message: Probe 2 has reached the target temp. Currently {{ states('sensor.ibbq_temperature_probe_2')
        }} °C
      title: Grill Alert
  mode: single
- id: '1627037302669'
  alias: 'Notify: Probe 3 Target Temp'
  description: ''
  trigger:
  - platform: state
    entity_id: sensor.ibbq_probe_3_target_alert_temp
    to: Alert
  condition: []
  action:
  - service: notify.mobile_app_pixel_5
    data_template:
      message: Probe 3 has reached the target temp. Currently {{ states('sensor.ibbq_temperature_probe_3')
        }} °C
      title: Grill Alert
  mode: single
- id: '1627037302670'
  alias: 'Notify: Probe 4 Target Temp'
  description: ''
  trigger:
  - platform: state
    entity_id: sensor.ibbq_probe_4_target_alert_temp
    to: Alert
  condition: []
  action:
  - service: notify.mobile_app_pixel_5
    data_template:
      message: Probe 4 has reached the target temp. Currently {{ states('sensor.ibbq_temperature_probe_4')
        }} °C
      title: Grill Alert
  mode: single
- id: '1629181945984'
  alias: 'Night Mode: Deactivate Weekday Vacation'
  description: ''
  trigger:
  - platform: time
    at: 08:30:00
  - platform: homeassistant
    event: start
  condition:
  - condition: time
    after: 08:30:00
    before: '21:30:00'
  - condition: state
    entity_id: binary_sensor.workday_sensor
    state: 'on'
  - condition: state
    state: 'on'
    entity_id: binary_sensor.school_vacation
  action:
  - service: script.deactivate_night_mode
    data: {}
  mode: single
- id: '1637296761179'
  alias: 'Motion: Voordeur'
  description: ''
  trigger:
  - type: motion
    platform: device
    device_id: 65962faa56765255f81eb0cdd734dbbb
    entity_id: binary_sensor.motion_voordeur
    domain: binary_sensor
  - type: opened
    platform: device
    device_id: 1ac8659c00be40d5bd1b34917eff12ff
    entity_id: binary_sensor.voor_deur
    domain: binary_sensor
  condition:
  - condition: or
    conditions:
    - condition: state
      entity_id: sensor.motion_voordeur_lux
      state: true
      attribute: dark
    - condition: state
      entity_id: sun.sun
      state: below_horizon
  action:
  - service: light.turn_on
    target:
      entity_id: light.voordeur
  - wait_template: '{{ is_state(''binary_sensor.motion_voordeur'', ''off'') and is_state(''binary_sensor.voor_deur'',
      ''off'') }}'
  - delay:
      hours: 0
      minutes: 5
      seconds: 0
      milliseconds: 0
  - service: light.turn_off
    target:
      entity_id: light.voordeur
  mode: restart
- id: '1637297629968'
  alias: 'Motion: Gang Eerste Verdiep'
  description: ''
  trigger:
  - type: motion
    platform: device
    device_id: 526a9620a08542bf9f03ac3edcd69189
    entity_id: binary_sensor.motion_gang_eerste_1
    domain: binary_sensor
  - type: motion
    platform: device
    device_id: 97e44d12724a444aa083bb7b7d8aafbc
    entity_id: binary_sensor.motion_gang_eerste_2
    domain: binary_sensor
  condition:
  - condition: state
    entity_id: input_boolean.disable_motion_trigger_light_gang_eerste_verdiep
    state: 'off'
  - condition: or
    conditions:
    - condition: numeric_state
      entity_id: sensor.gang_eerste_motion_sensor_1
      below: '20'
    - condition: numeric_state
      entity_id: sensor.gang_eerste_motion_sensor_2
      below: '20'
  action:
  - choose:
    - conditions:
      - condition: state
        entity_id: binary_sensor.night_mode
        state: 'on'
      sequence:
      - service: light.turn_on
        target:
          entity_id: light.gang_eerste_verdiep
        data:
          brightness_pct: 5
    - conditions:
      - condition: time
        after: '19:00'
        before: '21:00'
      sequence:
      - service: light.turn_on
        target:
          entity_id: light.gang_eerste_verdiep
        data:
          brightness_pct: 10
    default:
    - service: light.turn_on
      target:
        entity_id: light.gang_eerste_verdiep
      data:
        brightness_pct: 100
  - wait_template: '{{ is_state("binary_sensor.motion_gang_eerste_1", "off") and is_state("binary_sensor.motion_gang_eerste_2",
      "off")}}'
  - delay:
      hours: 0
      minutes: 1
      seconds: 5
      milliseconds: 0
  - service: light.turn_off
    target:
      entity_id: light.gang_eerste_verdiep
  mode: restart
- id: '1637308836739'
  alias: 'Motion: Keukendeur / Achterdeur'
  description: ''
  trigger:
  - type: opened
    platform: device
    device_id: 001630fa334040cbb0b0c8a42f35ab8c
    entity_id: binary_sensor.achter_deur
    domain: binary_sensor
  - type: opened
    platform: device
    device_id: 051e5a9302f34036b5f10fe9276bdb14
    entity_id: binary_sensor.keuken_deur
    domain: binary_sensor
  - platform: state
    entity_id: binary_sensor.motion_achterdeur
    to: 'on'
  condition:
  - condition: state
    entity_id: sun.sun
    state: below_horizon
  action:
  - service: light.turn_on
    target:
      entity_id: light.achterdeur
  - wait_template: '{{ is_state(''binary_sensor.motion_achterdeur'', ''off'') and
      is_state(''binary_sensor.achter_deur'', ''off'')  and is_state(''binary_sensor.keuken_deur'',
      ''off'')}}'
  - delay:
      hours: 0
      minutes: 5
      seconds: 0
      milliseconds: 0
  - service: light.turn_off
    target:
      entity_id: light.achterdeur
  mode: restart
- id: '1637566486158'
  alias: 'Motion: Gang Zolder'
  description: ''
  trigger:
  - type: motion
    platform: device
    device_id: 0b4f3944c2d543eb98cc40e54a0cc4ae
    entity_id: binary_sensor.motion_gang_zolder
    domain: binary_sensor
  condition:
  - condition: state
    entity_id: input_boolean.disable_motion_trigger_light_gang_zolder
    state: 'off'
  - condition: numeric_state
    entity_id: sensor.gang_zolder_motion_sensor
    below: '20'
  action:
  - service: light.turn_on
    target:
      entity_id: light.gang_zolder
  - wait_template: '{{ is_state("binary_sensor.motion_gang_zolder", "off") }}'
  - delay:
      hours: 0
      minutes: 1
      seconds: 5
      milliseconds: 0
  - service: light.turn_off
    target:
      entity_id: light.gang_zolder
  mode: restart
- id: '1637566756782'
  alias: 'Motion: WC Boven'
  description: ''
  trigger:
  - type: motion
    platform: device
    device_id: 576437e4123911ebb37d2de758ffb6eb
    entity_id: binary_sensor.motion_wc_boven
    domain: binary_sensor
  condition:
  - condition: state
    entity_id: binary_sensor.night_mode
    state: 'off'
  action:
  - service: light.turn_on
    target:
      entity_id: light.wc_boven
  - wait_template: '{{ is_state("binary_sensor.motion_wc_boven", "off") }}'
  - delay:
      hours: 0
      minutes: 1
      seconds: 5
      milliseconds: 0
  - service: light.turn_off
    target:
      entity_id: light.wc_boven
  mode: restart
- id: '1637583933082'
  alias: 'Motion: Inkom'
  description: ''
  trigger:
  - type: motion
    platform: device
    device_id: 8339897ed8e24dfb8e508641ecd4a3e1
    entity_id: binary_sensor.motion_inkom_1
    domain: binary_sensor
  - type: motion
    platform: device
    device_id: 3ac965ed349144edbf92411ac4d34050
    entity_id: binary_sensor.motion_inkom_2
    domain: binary_sensor
  condition:
  - condition: state
    entity_id: input_boolean.disable_motion_trigger_light_inkom
    state: 'off'
  - condition: or
    conditions:
    - condition: numeric_state
      entity_id: sensor.inkom_motion_sensor_1
      below: '20'
    - condition: numeric_state
      entity_id: sensor.inkom_motion_sensor_2
      below: '20'
    - condition: state
      entity_id: sun.sun
      state: below_horizon
  action:
  - service: light.turn_on
    target:
      entity_id: light.inkom
  - wait_template: '{{ is_state("binary_sensor.motion_inkom_1", "off") and is_state("binary_sensor.motion_inkom_2",
      "off")}}'
  - delay:
      hours: 0
      minutes: 1
      seconds: 5
      milliseconds: 0
  - service: light.turn_off
    target:
      entity_id: light.inkom
  mode: restart
- id: '1637833773538'
  alias: 'Climate: Warning low water pressure'
  description: ''
  trigger:
  - platform: template
    value_template: '{{ states(''sensor.10_040239_ch_water_pressure'') < ''1,5'' }}'
  condition: []
  action:
  - service: notify.hazilverberkenstraatbot_philippe
    data:
      message: Low Water Pressure Heating
  mode: single
