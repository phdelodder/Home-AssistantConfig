- id: Start_Up_Home_Assistant
  alias: Start Up Home Assistant
  trigger:
  - platform: homeassistant
    event: start
  action:
  - service: script.turn_on
    entity_id: script.start_up_home_assistant
- id: '1575277594428'
  alias: Set night profile for oprit camera
  description: ''
  trigger:
  - event: sunset
    platform: sun
  condition: []
  action:
  - service: shell_command.set_oprit_profile_night
- id: '1575277627609'
  alias: Set day profile for oprit camera
  description: ''
  trigger:
  - event: sunrise
    platform: sun
  condition: []
  action:
  - service: shell_command.set_oprit_profile_day
- id: '1586931483975'
  alias: 'Notify: Afval Collection'
  description: ''
  trigger:
  - at: '18:00:00'
    platform: time
  condition:
  - condition: or
    conditions:
    - condition: state
      entity_id: sensor.recycleapp_tomorrow
      state: papier, pmd
    - condition: state
      entity_id: sensor.recycleapp_tomorrow
      state: restafval, gft
    - condition: state
      entity_id: sensor.recycleapp_tomorrow
      state: groenafval
  action:
  - data: {}
    service: script.notify_afval
  mode: single
- id: '1587360682923'
  alias: 'Alarm Clock: Trigger - Philippe'
  description: ''
  trigger:
  - platform: template
    value_template: '{% set alarm_time = as_timestamp(states(''sensor.pixel_5_volgende_alarm''),
      none) %}

      {% set time_now = as_timestamp(states(''sensor.date_time'').replace('','',''''),
      none) %}

      {{ alarm_time is not none and time_now >= ( alarm_time - 300) }}'
  condition:
  - condition: state
    entity_id: person.philippe
    state: home
  action:
  - service: light.turn_on
    target:
      entity_id: light.led_slaapkamer
    data:
      effect: solid
      color_name: darkred
      brightness_pct: 1
    enabled: true
  - delay:
      hours: 0
      minutes: 0
      seconds: 5
      milliseconds: 0
  - service: select.select_option
    target:
      entity_id: select.led_slaapkamer_preset
    data:
      option: Sunrise
    enabled: true
  mode: single
- id: Sync Tasmota states
  alias: Sync Tasmota states
  trigger:
  - event: start
    platform: homeassistant
  action:
  - data:
      payload: ''
      topic: cmnd/tasmotas/state
    service: mqtt.publish
  - data:
      payload: ''
      topic: cmnd/tasmotas/shutterposition
    service: mqtt.publish
  - data:
      payload: ''
      topic: tasmotas/cmnd/state
    service: mqtt.publish
  - data:
      payload: 0
      topic: cmnd/tasmotas/status
    service: mqtt.publish
  initial_state: true
- id: Alarm Clock Febe
  alias: 'Alarm Clock: Trigger - Febe'
  description: ''
  trigger:
  - platform: template
    value_template: "{{ states('sensor.time') == \n    (state_attr('input_datetime.febe_next_alarm',
      'timestamp') - 300)\n         |timestamp_custom('%H:%M', false) }}"
  condition:
  - condition: state
    entity_id: input_boolean.febe_alarm_set
    state: 'on'
  action:
  - service: script.sunrise_wled
    data:
      wled_id: febe_led_bed
      time: 5
  - data: {}
    entity_id: input_boolean.febe_alarm_set
    service: input_boolean.turn_off
  mode: single
- id: '1578590308661'
  alias: Led Febe Aan
  description: ''
  trigger:
  - platform: device
    domain: mqtt
    device_id: c2d1c2b9c4ff7a9df90e15406fa69326
    type: action
    subtype: single
    discovery_id: 0x00158d000290783e action_single
  condition:
  - condition: device
    device_id: 9d61839836424735bb9de4c9ad91230a
    domain: light
    entity_id: light.febe_led_bed
    type: is_off
  action:
  - entity_id: scene.default_nachttafel_febe
    service: scene.turn_on
  mode: single
- id: '1587626119060'
  alias: Led Febe Uit
  description: ''
  trigger:
  - platform: device
    domain: mqtt
    device_id: c2d1c2b9c4ff7a9df90e15406fa69326
    type: action
    subtype: single
    discovery_id: 0x00158d000290783e action_single
  condition:
  - condition: device
    device_id: 9d61839836424735bb9de4c9ad91230a
    domain: light
    entity_id: light.febe_led_bed
    type: is_on
  action:
  - entity_id: light.febe_led_bed
    service: light.turn_off
  mode: single
- id: '1587624008968'
  alias: Switch Febe Shaken
  description: ''
  trigger:
  - platform: device
    domain: mqtt
    device_id: c2d1c2b9c4ff7a9df90e15406fa69326
    type: action
    subtype: shake
    discovery_id: 0x00158d000290783e action_shake
  condition: []
  action:
  - data_template:
      effect: '{{ state_attr("light.febe_led_bed", "effect_list") | random }}'
      entity_id: light.febe_led_bed
      rgb_color:
      - '{{ (range(0, 255)|random) }}'
      - '{{ (range(0, 255)|random) }}'
      - '{{ (range(0, 255)|random) }}'
      transition: '{{ (range(1, 3)|random) }}'
    entity_id: light.febe_led_bed
    service: light.turn_on
  mode: single
- id: '1588246366774'
  alias: Aandacht Planten
  description: Planten die laag gehalte van water of meststof hebben
  trigger:
  - at: '18:30:00'
    platform: time
  condition:
  - condition: or
    conditions:
    - below: '25'
      condition: numeric_state
      entity_id: sensor.greenhouse_zone_1_moisture
    - below: '100'
      condition: numeric_state
      entity_id: sensor.greenhouse_zone_1_soil_conductivity
    - below: '25'
      condition: numeric_state
      entity_id: sensor.greenhouse_zone_2_moisture
    - below: '100'
      condition: numeric_state
      entity_id: sensor.greenhouse_zone_2_soil_conductivity
    - below: '25'
      condition: numeric_state
      entity_id: sensor.greenhouse_zone_3_moisture
    - below: '100'
      condition: numeric_state
      entity_id: sensor.greenhouse_zone_3_soil_conductivity
    - below: '25'
      condition: numeric_state
      entity_id: sensor.greenhouse_zone_4_moisture
    - below: '100'
      condition: numeric_state
      entity_id: sensor.greenhouse_zone_4_soil_conductivity
    - below: '25'
      condition: numeric_state
      entity_id: sensor.moestuin_moisture
    - below: '100'
      condition: numeric_state
      entity_id: sensor.moestuin_soil_conductivity
    - below: '25'
      condition: numeric_state
      entity_id: sensor.rozemarijn_moisture
    - below: '100'
      condition: numeric_state
      entity_id: sensor.rozemarijn_soil_conductivity
    - below: '25'
      condition: numeric_state
      entity_id: sensor.bloempot_voordeur_moisture
    - below: '100'
      condition: numeric_state
      entity_id: sensor.bloempot_voordeur_soil_conductivity
    - below: '25'
      condition: numeric_state
      entity_id: sensor.olijfboom_moisture
    - below: '100'
      condition: numeric_state
      entity_id: sensor.olijfboom_soil_conductivity
  action:
  - data_template:
      message: "Deze planten vragen vandaag je aandacht: {%if states('sensor.greenhouse_zone_1_moisture')
        |int (0) < 20 %}\n  - Serre Zone 1 heeft water nodig, {{ states('sensor.greenhouse_zone_1_moisture')
        }} %\n{%- endif %} {%- if states('sensor.greenhouse_zone_1_soil_conductivity')
        |int (0) < 100 %}\n  - Serre Zone 1 heeft meststof nodig, {{ states('sensor.greenhouse_zone_1_soil_conductivity')
        }} µS/cm\n{%- endif %} {%- if states('sensor.greenhouse_zone_2_moisture')
        |int (0) < 20 %}\n  - Serre Zone 2 heeft water nodig, {{ states('sensor.greenhouse_zone_2_moisture')
        }} %\n{%- endif %} {%- if states('sensor.greenhouse_zone_2_soil_conductivity')
        |int (0) < 100 %}\n  - Serre Zone 2 heeft meststof nodig, {{ states('sensor.greenhouse_zone_2_soil_conductivity')
        }} µS/cm\n{%- endif %} {%- if states('sensor.greenhouse_zone_3_moisture')
        |int (0) < 20 %}\n  - Serre Zone 3 heeft water nodig, {{ states('sensor.greenhouse_zone_3_moisture')
        }} %\n{%- endif %} {%- if states('sensor.greenhouse_zone_3_soil_conductivity')
        |int (0) < 100 %}\n  - Serre Zone 3 heeft meststof nodig, {{ states('sensor.greenhouse_zone_3_soil_conductivity')
        }} µS/cm\n{%- endif %} {%- if states('sensor.greenhouse_zone_4_moisture')
        |int (0) < 20 %}\n  - Serre Zone 4 heeft water nodig, {{ states('sensor.greenhouse_zone_4_moisture')
        }} %\n{%- endif %} {%- if states('sensor.greenhouse_zone_4_soil_conductivity')
        |int (0) < 100 %}\n  - Serre Zone 4 heeft meststof nodig, {{ states('sensor.greenhouse_zone_4_soil_conductivity')
        }} µS/cm\n{%- endif %} {%- if states('sensor.moestuin_moisture') |int (0)
        < 25 %}\n  - Moestuin heeft water nodig, {{ states('sensor.moestuin_moisture')
        }} %\n{%- endif %} {%- if states('sensor.moestuin_soil_conductivity') | int
        < 100 %}\n  - Moestuin heeft meststof nodig, {{ states('sensor.moestuin_soil_conductivity')
        }} µS/cm\n{%- endif %} {%- if states('sensor.rozemarijn_moisture') | int <
        20 %}\n  - Rozemarijn heeft water nodig, {{ states('sensor.rozemarijn_moisture')
        }} %\n{%- endif %} {%- if states('sensor.rozemarijn_soil_conductivity') |int
        (0) < 100 %}\n  - Rozemarijn heeft meststof nodig, {{ states('sensor.rozemarijn_soil_conductivity')
        }} µS/cm\n{%- endif %} {%- if states('sensor.bloempot_voordeur_moisture')
        |int (0) < 20 %}\n  - Bloempot voordeur heeft water nodig, {{ states('sensor.bloempot_voordeur_moisture')
        }} %\n{%- endif %} {%- if states('sensor.bloempot_voordeur_soil_conductivity')
        |int (0) < 100 %}\n  - Bloempot voordeur heeft meststof nodig, {{ states('sensor.bloempot_voordeur_soil_conductivity')
        }} µS/cm\n{%- endif %} {%- if states('sensor.olijfboom_moisture') | int <
        20 %}\n  - Olijfboom voordeur heeft water nodig, {{ states('sensor.olijfboom_moisture')
        }} %\n{%- endif %} {%- if states('sensor.olijfboom_soil_conductivity') | int
        < 100 %}\n  - Olijfboom voordeur heeft meststof nodig, {{ states('sensor.olijfboom_soil_conductivity')
        }} µS/cm\n{%- endif %}"
    service: notify.hazilverberkenstraatbot
- id: '1588439093079'
  alias: 'Alarm Clock: Enable - Margot'
  description: ''
  trigger:
  - at: '18:00:00'
    platform: time
  condition:
  - condition: state
    entity_id: binary_sensor.school_vacation
    state: 'off'
  - condition: state
    entity_id: binary_sensor.schooldag
    state: 'on'
  action:
  - data: {}
    entity_id: input_boolean.margot_alarm_set
    service: input_boolean.turn_on
  - choose:
    - conditions:
      - condition: time
        weekday:
        - sun
        - mon
        - tue
        - wed
        - thu
      sequence:
      - service: input_datetime.set_datetime
        data:
          time: 07:15:00
        entity_id: input_datetime.margot_next_alarm
    - conditions:
      - condition: time
        weekday:
        - fri
        - sat
      sequence:
      - service: input_datetime.set_datetime
        data:
          time: 08:00:00
        entity_id: input_datetime.margot_next_alarm
    default: []
- id: '1588439142845'
  alias: 'Alarm Clock: Enable - Febe'
  description: ''
  trigger:
  - at: '18:00:00'
    platform: time
  condition:
  - condition: state
    entity_id: binary_sensor.school_vacation
    state: 'off'
  - condition: state
    entity_id: binary_sensor.schooldag
    state: 'on'
  action:
  - data: {}
    entity_id: input_boolean.febe_alarm_set
    service: input_boolean.turn_on
  - choose:
    - conditions:
      - condition: time
        weekday:
        - sun
        - mon
        - tue
        - wed
        - thu
      sequence:
      - service: input_datetime.set_datetime
        data:
          time: 07:15:00
        entity_id: input_datetime.febe_next_alarm
    - conditions:
      - condition: time
        weekday:
        - fri
        - sat
      sequence:
      - service: input_datetime.set_datetime
        data:
          time: 08:00:00
        entity_id: input_datetime.febe_next_alarm
    default: []
  mode: single
- id: '1600753998896'
  alias: 'Away: automatically turn off'
  description: ''
  trigger:
  - platform: state
    entity_id: binary_sensor.no_one_home
    to: 'on'
    for:
      minutes: 1
  - platform: state
    entity_id:
    - binary_sensor.guest_mode
    - binary_sensor.kids_home_alone
    to: 'off'
    for:
      hours: 0
      minutes: 0
      seconds: 30
  condition:
  - condition: state
    entity_id: binary_sensor.guest_mode
    state: 'off'
  - condition: state
    entity_id: binary_sensor.kids_home_alone
    state: 'off'
  - condition: state
    entity_id: binary_sensor.no_one_home
    state: 'on'
  action:
  - service: script.leaving
    data: {}
- id: '1600753998897'
  alias: 'Away: start vacuum after 5 mins'
  description: If away and guest and kids are off, enable the vacuum
  trigger:
  - platform: state
    entity_id: binary_sensor.no_one_home
    to: 'on'
    for: 0:05:00
  condition:
  - condition: state
    entity_id:
    - input_boolean.guest_mode
    state: 'off'
  - condition: state
    entity_id: binary_sensor.kids_home_alone
    state: 'off'
  action:
  - service: script.vacuum_automated
    data: {}
  mode: single
- id: '1600754448159'
  alias: Home
  description: ''
  trigger:
  - platform: state
    entity_id: binary_sensor.no_one_home
    to: 'off'
  condition: []
  action:
  - service: script.arriving
    data: {}
  mode: single
- id: '1600756948650'
  alias: Woonkamer Lights Morning On
  description: ''
  trigger:
  - platform: state
    entity_id: binary_sensor.motion_woonkamer
    to: 'on'
  condition:
  - condition: and
    conditions:
    - condition: time
      after: '6:00'
      before: '9:30'
    - condition: state
      entity_id: binary_sensor.no_one_home
      state: 'off'
    - condition: numeric_state
      entity_id: sensor.motion_woonkamer_illuminance_lux
      below: '5'
  action:
  - service: scene.turn_on
    data:
      transition: 120
    target:
      entity_id: scene.woonkamer_morning
  mode: single
- id: '1600757546616'
  alias: Woonkamer Lights Morning Off
  description: ''
  trigger:
  - platform: template
    value_template: '{{ states(''sensor.motion_woonkamer_illuminance_lux'') | float(0)>
      25 and (states(''sensor.time'') >= ''06:00:00'' and states(''sensor.time'')
      <= ''09:29:55'') }}'
  - platform: time
    at: 09:29:00
  - platform: state
    entity_id:
    - media_player.woonkamer
    to: 'off'
    for:
      hours: 0
      minutes: 20
      seconds: 0
    from: 'on'
  condition:
  - condition: time
    after: 06:00
    before: 09:30
  action:
  - service: scene.turn_on
    data:
      transition: 120
    target:
      entity_id: scene.woonkamer_off
  mode: single
- id: '1600758658063'
  alias: Woonkamer Lights Eve On
  description: ''
  trigger:
  - platform: time
    at: '16:00'
  - platform: state
    entity_id: binary_sensor.no_one_home
    to: 'off'
  - platform: state
    entity_id:
    - sensor.motion_woonkamer_illuminance_lux
  condition:
  - condition: time
    after: '16:00:00'
    before: '19:00'
  - condition: state
    entity_id: binary_sensor.no_one_home
    state: 'off'
  - condition: numeric_state
    entity_id: sensor.motion_woonkamer_illuminance_lux
    below: '25'
  action:
  - service: scene.turn_on
    data:
      transition: 120
    target:
      entity_id: scene.woonkamer_eve
  mode: single
- id: '1600759062566'
  alias: Woonkamer Lights Evening On
  description: ''
  trigger:
  - platform: time
    at: '19:00'
  - platform: state
    entity_id: binary_sensor.no_one_home
    to: 'off'
  - platform: template
    value_template: '{{ states(''sensor.motion_woonkamer_illuminance_lux'') | float(0)<
      25 and (states(''sensor.time'') >= ''19:00:00'') }}'
  condition:
  - condition: time
    after: '19:00:00'
    before: '22:00'
  - condition: state
    entity_id: binary_sensor.no_one_home
    state: 'off'
  - condition: numeric_state
    entity_id: sensor.motion_woonkamer_illuminance_lux
    below: '25'
  action:
  - service: scene.turn_on
    data:
      transition: 120
    target:
      entity_id: scene.woonkamer_evening
  mode: single
- id: '1600759267237'
  alias: Woonkamer Lights Night
  description: ''
  trigger:
  - platform: state
    to: 'on'
    entity_id: binary_sensor.motion_woonkamer
  condition:
  - condition: time
    after: '22:00'
    before: 06:00
  - condition: state
    entity_id: binary_sensor.no_one_home
    state: 'off'
  - condition: not
    conditions:
    - condition: state
      entity_id: media_player.tv
      state: 'on'
  action:
  - service: scene.turn_on
    data:
      entity_id: scene.woonkamer_night
      transition: 60
  - delay: 00:04:00
  - service: scene.turn_on
    data:
      entity_id: scene.woonkamer_off
      transition: 60
  mode: restart
- id: '1600759643151'
  alias: Woonkamer Lights Evening Off
  description: ''
  trigger:
  - platform: time
    at: '22:00:00'
  condition: []
  action:
  - choose:
    - conditions:
      - condition: state
        entity_id: media_player.tv
        state: 'on'
      sequence:
      - wait_for_trigger:
          platform: state
          entity_id: media_player.tv
          for:
            minutes: 5
          to: 'off'
    default: []
  - service: scene.turn_on
    data:
      transition: 120
    target:
      entity_id: scene.woonkamer_off
  mode: restart
- id: '1600846307260'
  alias: Reset Daily Inputs
  description: ''
  trigger:
  - platform: time
    at: 00:00:00
  condition: []
  action:
  - service: input_boolean.turn_off
    entity_id: input_boolean.daily_vacuum_first_run
  mode: single
- id: '1600848151975'
  alias: 'Telegram: Vacuum Response'
  description: ''
  trigger:
  - platform: event
    event_type: telegram_callback
    event_data:
      command: /vacuumemptybindone
  - platform: event
    event_type: telegram_callback
    event_data:
      command: /vacuumemptybinextend
  condition: []
  action:
  - service: script.vacuum_bin_feedback
    data:
      callback_id: '{{ trigger.event.data.id }}'
      command: '{{ trigger.event.data[''command''].strip(''/'') }}'
  mode: single
- id: '1600848151075'
  alias: 'Set Mode: Telegram Response'
  description: ''
  trigger:
  - platform: event
    event_type: telegram_callback
    event_data:
      command: /yesguest
  - platform: event
    event_type: telegram_callback
    event_data:
      command: /noguest
  - platform: event
    event_type: telegram_callback
    event_data:
      command: /yeskidshomealone
  condition: []
  action:
  - service: script.guest_mode_feedback
    data:
      callback_id: '{{ trigger.event.data.id }}'
      command: '{{ trigger.event.data[''command''].strip(''/'') }}'
  mode: single
- id: '1600850581196'
  alias: 'Vacuum: Select Room'
  description: ''
  trigger:
  - platform: state
    entity_id: input_select.vacuum_room
    from: Selecteer Kamer
  condition: []
  action:
  - service: script.vacuum_zone
    data:
      zone: '{{ states(''input_select.vacuum_room'') }}'
  mode: single
- id: '1600861348101'
  alias: 'Security: motion detected indoor but we are not home'
  description: ''
  trigger:
  - platform: state
    entity_id:
    - binary_sensor.motion_gang_eerste_2
    - binary_sensor.motion_gang_eerste_1
    - binary_sensor.motion_inkom_1
    - binary_sensor.motion_inkom_2
    - binary_sensor.motion_keuken
    to: 'on'
  condition:
  - condition: state
    entity_id: binary_sensor.no_one_home
    state: 'on'
  - condition: state
    entity_id: vacuum.dalek
    state: docked
  - condition: state
    entity_id: binary_sensor.guest_mode
    state: 'off'
  - condition: state
    entity_id: binary_sensor.kids_home_alone
    state: 'off'
  action:
  - service: script.motion_detected
    data:
      sensor: '{{ trigger.entity_id }}'
  mode: single
- id: '1600870113700'
  alias: 'Set Mode: Guest - Activate/Deactivate'
  description: ''
  trigger:
  - platform: state
    entity_id: input_boolean.guest_mode
  condition: []
  action:
  - choose:
    - conditions:
      - condition: state
        entity_id: input_boolean.guest_mode
        state: 'on'
      sequence:
      - service: script.activate_guest_mode
        data: {}
    - conditions:
      - condition: state
        entity_id: input_boolean.guest_mode
        state: 'off'
      sequence:
      - service: script.deactivate_guest_mode
        data: {}
    default: []
  mode: single
- id: '1600870370709'
  alias: Set Timed Temperature Based on Input
  description: ''
  trigger:
  - platform: time
    at: input_datetime.temperaturetime
  condition:
  - condition: state
    entity_id: input_boolean.tempsetactive
    state: 'on'
  action:
  - service: script.set_temperature
    data: {}
  mode: single
- id: '1600927539284'
  alias: 'Set Mode: Night - Activate'
  description: ''
  trigger:
  - platform: time
    at: input_datetime.night_mode_start
  - platform: state
    entity_id: binary_sensor.no_one_home
    to: 'off'
    for: 00:01:00
  - platform: homeassistant
    event: start
  condition:
  - condition: state
    entity_id: binary_sensor.no_one_home
    state: 'off'
  - condition: time
    after: input_datetime.night_mode_start
    before: input_datetime.night_mode_weekday_end
  action:
  - service: script.activate_night_mode
    data: {}
  mode: single
- id: '1600927587299'
  alias: 'Set Mode: Night - Deactivate Weekday'
  description: ''
  trigger:
  - platform: time
    at: input_datetime.night_mode_weekday_end
  - platform: homeassistant
    event: start
  condition:
  - condition: time
    after: input_datetime.night_mode_weekday_end
    before: input_datetime.night_mode_start
    weekday:
    - mon
    - tue
    - wed
    - thu
    - fri
  - condition: state
    entity_id: binary_sensor.workday_sensor
    state: 'on'
  - condition: state
    entity_id: binary_sensor.school_vacation
    state: 'off'
  action:
  - service: script.deactivate_night_mode
    data: {}
  mode: single
- id: '1600928587299'
  alias: 'Notify: Bureau Led Door Opened'
  description: ''
  trigger:
  - platform: state
    entity_id:
    - binary_sensor.voordeur
    - binary_sensor.keukendeur
    - binary_sensor.achterdeur
    - binary_sensor.garagedeur
    - binary_sensor.garagepoort_input
    from: 'off'
    to: 'on'
  condition:
  - condition: state
    entity_id: binary_sensor.motion_detected_bureau_in_last_hour
    state: 'on'
  action:
  - service: scene.create
    data:
      scene_id: notify_led_bureau
      snapshot_entities: light.desk_lamp
  - variables:
      effect: '{{ state_attr(''light.desk_lamp'', ''effect'')}}'
      notify_effect: Police
  - if:
    - condition: template
      value_template: '{{ trigger.entity_id == "binary_sensor.garagepoort_input" }}'
    then:
    - variables:
        notify_effect: Glitter
  - service: light.turn_on
    data:
      brightness_pct: 100
      effect: '{{ notify_effect }}'
    target:
      entity_id: light.desk_lamp
  - delay: 00:01:00
  - service: light.turn_off
    target:
      entity_id: light.desk_lamp
    data: {}
  - scene: scene.notify_led_bureau
  mode: single
- id: '1600928588299'
  alias: 'Set Mode: Night - Toggle'
  description: ''
  trigger:
  - platform: state
    entity_id: binary_sensor.night_mode
    for:
      minutes: 1
  condition: []
  action:
  - service: script.night_mode_turn_{{ trigger.to_state.state }}
- id: '1601324314469'
  alias: 'Set Mode: Night - Deactivate Weekend'
  description: ''
  trigger:
  - platform: time
    at: input_datetime.night_mode_weekend_end
  - platform: state
    entity_id: binary_sensor.no_one_home
    to: 'off'
    for: 00:01:00
  - platform: homeassistant
    event: start
  condition:
  - condition: state
    entity_id: binary_sensor.no_one_home
    state: 'off'
  - condition: time
    after: input_datetime.night_mode_weekend_end
    before: input_datetime.night_mode_start
  - condition: state
    entity_id: binary_sensor.workday_sensor
    state: 'off'
  action:
  - service: script.deactivate_night_mode
    data: {}
  mode: single
- id: '1602156764240'
  alias: Radio Beneden
  description: Radio aansteken, 's morgens (beweging), door de dag op presence
  trigger:
  - platform: state
    entity_id: binary_sensor.motion_woonkamer
    to: 'on'
  - platform: state
    entity_id: binary_sensor.no_one_home
    to: 'off'
  condition:
  - condition: and
    conditions:
    - condition: time
      after: '6:00'
      before: '18:00'
    - condition: state
      entity_id: media_player.beneden
      state: 'off'
    - condition: not
      conditions:
      - condition: state
        entity_id: media_player.tv
        state: 'on'
  action:
  - service: script.radio_beneden
    data: {}
  mode: single
- id: '1602686644196'
  alias: 'Vacuum: Started Cleaning'
  description: ''
  trigger:
  - platform: state
    entity_id: vacuum.dalek
    to: cleaning
  condition:
  - condition: state
    entity_id: input_select.vacuum_room
    state: Selecteer Kamer
  action:
  - service: script.vacuum_record_run
    data: {}
  - service: script.vacuum_notify
    data: {}
  mode: single
- id: '1603348403144'
  alias: Cabinet Fan Control
  description: Controls the fan speed depending on the temperature
  trigger:
  - platform: state
    entity_id: sensor.temperature_bureau
  - platform: state
    entity_id:
    - button.copperhead_shutdown
  condition: []
  action:
  - choose:
    - conditions:
      - condition: numeric_state
        entity_id: sensor.temperature_bureau
        below: '21'
      sequence:
      - service: fan.turn_off
        data:
          entity_id:
          - fan.cabinet_fan_1
          - fan.cabinet_fan_2
    - conditions:
      - condition: state
        entity_id: button.copperhead_shutdown
        state: unavailable
      sequence:
      - service: fan.turn_off
        data:
          entity_id:
          - fan.cabinet_fan_1
          - fan.cabinet_fan_2
    default:
    - condition: state
      entity_id: device_tracker.copperhead
      state: not_home
    - service: fan.turn_on
      data_template:
        entity_id:
        - fan.cabinet_fan_1
        - fan.cabinet_fan_2
        percentage: 100
    - alias: Wait 5s
      delay: 5
    - service: fan.turn_on
      data_template:
        entity_id:
        - fan.cabinet_fan_1
        - fan.cabinet_fan_2
        percentage: "{% if states('sensor.temperature_bureau') | int(0) > 28 %}\n
          \ 100\n{% elif states('sensor.temperature_bureau') | int(0) > 25 %}\n  50\n{%
          elif states('sensor.temperature_bureau') | int(0) >= 21 %}\n  25\n{% else
          %}\n  10\n{% endif %}\n"
  mode: single
- id: '1604346606992'
  alias: 'Security: MotionEye - Oprit'
  description: ''
  trigger:
  - platform: state
    entity_id:
    - binary_sensor.oprit_cctv_motion
    to: 'on'
  action:
  - service: input_number.set_value
    entity_id: input_number.oprit_last_cctv_motion_event
    data_template:
      value: '{{ state_attr(''binary_sensor.oprit_cctv_motion'',''eventnumber'') }}'
  - service: input_datetime.set_datetime
    entity_id: input_datetime.oprit_last_cctv_motion
    data_template:
      date: '{{ state_attr(''binary_sensor.oprit_cctv_motion'',''timestamp'').split(''
        '')[0] }}'
      time: '{{ state_attr(''binary_sensor.oprit_cctv_motion'',''timestamp'').split(''
        '')[1].replace(''-'','':'') }}'
  - repeat:
      sequence:
      - service: image_processing.scan
        entity_id: image_processing.doods_oprit
      - wait_for_trigger:
        - platform: state
          entity_id: image_processing.doods_oprit
          attribute: matches
        timeout: 00:00:05
      - service: script.turn_on
        entity_id:
        - script.motioneye_test_person_object
        - script.motioneye_test_car_object
      - wait_template: '{{ is_state(''script.motioneye_test_person_object'',''off'')
          and is_state(''script.motioneye_test_car_object'',''off'') }}'
      until:
      - condition: template
        value_template: '{{ is_state(''binary_sensor.oprit_cctv_motion'', ''off'')
          or is_state(''binary_sensor.oprit_motion'',''on'') }}'
  - wait_template: '{{ is_state(''binary_sensor.oprit_cctv_motion'', ''off'') }}'
    timeout: 02:00:00
  - choose:
    - conditions:
      - condition: state
        entity_id: input_boolean.oprit_motion
        state: 'off'
      sequence:
      - service: shell_command.remove_motioneye_movie
        data_template:
          camera_id: 1
          file: '{{ (as_timestamp(states.input_datetime.oprit_last_cctv_motion.state))
            | timestamp_custom(''%Y-%m-%d'')}}/{{ ''%02d'' % states(''input_number.oprit_last_cctv_motion_event'')
            |int (0) }}'
          event: '{{ ''%02d'' % states(''input_number.oprit_last_cctv_motion_event'')
            |int (0) }}'
    default:
    - service: shell_command.move_event_snapshots
      data_template:
        camera_name: oprit
        event: '{{ ''%02d'' % states(''input_number.oprit_last_cctv_motion_event'')
          |int (0) }}'
  - service: input_boolean.turn_off
    data: {}
    entity_id: input_boolean.oprit_motion
  mode: single
- id: '1604821741495'
  alias: 'Security: Enable Oprit Motion Detection'
  description: Enable Oprit Motion Detection at sunset
  trigger:
  - platform: sun
    event: sunset
  condition: []
  action:
  - service: script.turn_on_motion_detection_camera
    data: {}
  mode: single
- id: '1604821819133'
  alias: 'Security: Disable Oprit Motion Detection'
  description: Disable Oprit Motion Detection at sunrise
  trigger:
  - platform: sun
    event: sunrise
  condition:
  - condition: and
    conditions:
    - condition: state
      entity_id: binary_sensor.night_mode
      state: 'off'
    - condition: state
      entity_id: binary_sensor.no_one_home
      state: 'off'
  action:
  - service: script.turn_off_motion_detection_camera
    data: {}
  mode: single
- id: '1607349802281'
  alias: 'Verlichting Buiten Voorkant: On'
  description: ''
  trigger:
  - platform: sun
    event: sunset
    offset: -00:45:00
  - platform: time
    at: 05:30
  condition: []
  action:
  - service: switch.turn_on
    data: {}
    target:
      entity_id:
      - switch.verlichting_buiten_voorkant
      - switch.haag_straat
  - choose:
    - conditions:
      - condition: template
        value_template: '{{ trigger.platform == "sun" }}'
      sequence:
      - service: light.turn_on
        target:
          entity_id: light.rozenboom
        data: {}
    default: []
  mode: single
- id: '1607349875705'
  alias: 'Verlichting Buiten Voorkant: Off'
  description: ''
  trigger:
  - platform: time
    at: '23:00'
  - platform: sun
    event: sunrise
    offset: +00:45:00
  condition: []
  action:
  - service: switch.turn_off
    data: {}
    target:
      entity_id:
      - switch.verlichting_buiten_voorkant
      - switch.haag_straat
  - service: light.turn_off
    target:
      entity_id: light.rozenboom
    data: {}
  mode: single
- id: '1607930433185'
  alias: 'Motion: WC Beneden'
  description: ''
  use_blueprint:
    path: homeassistant/motion_light.yaml
    input:
      no_motion_wait: '65'
      motion_entity: binary_sensor.motion_wc_beneden
      light_target:
        area_id: 91ee1f9b134f4ecca57e2fb1ba925a6f
- id: '1612165532755'
  alias: 'Climate: Set bureau temperature'
  description: Manage a more fine tuned climate control for the Bureau
  trigger:
  - platform: homeassistant
    event: start
  - platform: state
    entity_id:
    - binary_sensor.motion_detected_bureau_in_last_hour
    - switch.laptop_outlet
    - light.bureau
    - light.bureau_spot
    - sensor.house_mode
    for:
      hours: 0
      minutes: 5
      seconds: 0
  - platform: state
    entity_id:
    - climate.controller
    attribute: preset_mode
    for:
      hours: 0
      minutes: 1
      seconds: 0
  - platform: numeric_state
    entity_id: climate.bureau
    attribute: current_temperature
    below: 19
  condition:
  - condition: template
    value_template: '{{ states(''sensor.house_mode'') != ''away'' }}'
  - condition: numeric_state
    entity_id: climate.bureau
    attribute: current_temperature
    below: 19
  action:
  - choose:
    - conditions:
      - condition: or
        conditions:
        - condition: state
          entity_id: switch.laptop_outlet
          state: 'on'
        - condition: state
          entity_id: light.bureau
          state: 'on'
        - condition: state
          entity_id: light.bureau_spot
          state: 'on'
      sequence:
      - service: climate.set_temperature
        data:
          temperature: 19
          entity_id: climate.bureau
    default:
    - service: ramses_cc.reset_zone_mode
      data:
        entity_id: climate.bureau
  mode: single
- id: '1612258410918'
  alias: 'Climate: Set keuken temperature'
  description: Manage a more fine tuned climate control for the Bureau
  trigger:
  - platform: state
    entity_id: person.isabel, sensor.house_mode
  - platform: homeassistant
    event: start
  - platform: state
    entity_id:
    - binary_sensor.motion_keuken
    for:
      hours: 0
      minutes: 10
      seconds: 0
  - platform: state
    entity_id:
    - climate.controller
    attribute: preset_mode
    to: None
    for:
      hours: 0
      minutes: 1
      seconds: 0
  condition:
  - condition: template
    value_template: '{{ is_state(''sensor.house_mode'', ''home'') or is_state(''sensor.house_mode'',
      ''guest'')  }}'
  - condition: state
    entity_id: climate.controller
    state: heat
    for:
      hours: 0
      minutes: 1
      seconds: 0
  action:
  - choose:
    - conditions:
      - condition: or
        conditions:
        - condition: and
          conditions:
          - condition: state
            entity_id: binary_sensor.motion_keuken
            state: 'off'
          - condition: time
            after: 08:00:00
            before: '16:00:00'
        - condition: and
          conditions:
          - condition: state
            entity_id: person.philippe
            state: home
          - condition: not
            conditions:
            - condition: state
              entity_id: person.isabel
              state: home
          - condition: time
            after: 08:00:00
            before: '16:00:00'
      sequence:
      - service: climate.set_temperature
        data:
          temperature: 16
          entity_id: climate.keuken
    default:
    - service: ramses_cc.reset_zone_mode
      data:
        entity_id: climate.keuken
  mode: single
- id: '1612538972636'
  alias: 'Climate: Set speelkamer temperature'
  description: Manage a more fine tuned climate control for the Speelkamer
  trigger:
  - platform: state
    entity_id: binary_sensor.motion_speelkamer
    for: 00:10:00
  - platform: homeassistant
    event: start
  - platform: state
    entity_id: climate.controller
    attribute: preset_mode
    to: None
    for: 00:01:00
  - platform: state
    entity_id: sensor.house_mode
  - platform: state
    entity_id:
    - light.speelkamer
  condition:
  - condition: template
    value_template: '{{ is_state(''sensor.house_mode'', ''home'') or is_state(''sensor.house_mode'',
      ''guest'')  }}'
  action:
  - choose:
    - conditions:
      - condition: or
        conditions:
        - condition: state
          entity_id: light.speelkamer
          state: 'on'
        - condition: state
          entity_id: binary_sensor.motion_speelkamer
          state: 'on'
      sequence:
      - service: climate.set_temperature
        data:
          temperature: 18
          entity_id: climate.speelkamer
      - service: ramses_cc.set_zone_mode
        data:
          entity_id: climate.speelkamer
          setpoint: 19
          mode: temporary_override
          duration:
            hours: 1
            minutes: 0
            seconds: 0
    default:
    - service: ramses_cc.reset_zone_mode
      data:
        entity_id: climate.speelkamer
  mode: single
- id: '1613471447340'
  alias: 'Set Mode: Vacation'
  description: ''
  trigger:
  - platform: state
    entity_id: binary_sensor.no_one_home
    to: 'on'
    for: '24:00:00'
  condition: []
  action:
  - service: script.activate_vacation_mode
    data: {}
  mode: single
- id: '1613482887399'
  alias: 'Climate: Set Febe slaapkamer temperature'
  description: ''
  trigger:
  - platform: template
    value_template: '{% set time = states(''sensor.time'') %} {{ (''15:20'' == time
      and (now().weekday() == 0 )) or (''16:00'' == time and (now().weekday() == 1
      or now().weekday() == 3 )) }}'
  - platform: homeassistant
    event: start
  - platform: state
    entity_id: sensor.house_mode
  - platform: state
    entity_id:
    - climate.febe
    attribute: preset_mode
    to: none
    for:
      hours: 0
      minutes: 1
      seconds: 0
  condition:
  - condition: state
    entity_id: binary_sensor.school_vacation
    state: 'off'
  - condition: template
    value_template: '{{ states(''sensor.house_mode'') in [''kids home alone'', ''guest'',
      ''home''] }}'
  - condition: state
    entity_id: climate.febe
    state: heat
  - condition: numeric_state
    entity_id: climate.febe
    attribute: current_temperature
    below: 16
  - condition: state
    entity_id: binary_sensor.workday_sensor
    state: 'on'
  action:
  - choose:
    - conditions:
      - condition: or
        conditions:
        - condition: template
          value_template: '{% set time = states(''sensor.time'') %} {{ ''15:10'' <=
            time < ''17:30'' and (now().weekday() == 0 ) }}'
        - condition: template
          value_template: '{% set time = states(''sensor.time'') %} {{ ''15:50'' <=
            time < ''17:30'' and (now().weekday() == 1 or now().weekday() == 3 ) }}'
      sequence:
      - service: ramses_cc.set_zone_mode
        data:
          entity_id: climate.febe
          mode: temporary_override
          setpoint: 18
          duration:
            minutes: 45
    default:
    - service: ramses_cc.reset_zone_mode
      data:
        entity_id: climate.febe
  mode: single
- id: '1614091814826'
  alias: 'Climate: Eco Mode Toggle'
  description: ''
  trigger:
  - platform: state
    entity_id:
    - group.house_doors
    from: 'on'
    to: 'off'
    for:
      hours: 0
      minutes: 5
      seconds: 0
  - platform: state
    entity_id:
    - group.house_doors
    from: 'off'
    to: 'on'
    for:
      hours: 0
      minutes: 10
      seconds: 0
  - platform: homeassistant
    event: start
  condition:
  - condition: template
    value_template: '{{ is_state(''sensor.house_mode'', ''home'') or is_state(''sensor.house_mode'',
      ''guest'')  }}'
  - condition: template
    value_template: '{{ is_state(''climate.controller'', ''heat'') or  is_state(''climate.controller'',
      ''auto'') }}'
  action:
  - choose:
    - conditions:
      - condition: state
        entity_id: group.house_doors
        state: 'on'
      sequence:
      - service: climate.set_preset_mode
        data:
          preset_mode: eco
        entity_id: climate.controller
      - wait_template: '{{ is_state_attr(''climate.controller'', ''preset_mode'',
          ''eco'') }}'
      - service: climate.set_temperature
        data:
          entity_id:
          - climate.margot
          - climate.slaapkamer
          - climate.febe
          - climate.dressing
          - climate.badkamer
          - climate.bureau
          - climate.speelkamer
          - climate.inkom
          temperature: 10
    default:
    - service: climate.set_preset_mode
      data:
        preset_mode: None
      entity_id: climate.controller
  mode: single
- id: '1618987551917'
  alias: 'Security: door opened but we are not home'
  description: ''
  trigger:
  - platform: state
    entity_id:
    - group.all_doors
    to: 'on'
  condition:
  - condition: state
    entity_id: binary_sensor.no_one_home
    state: 'on'
  - condition: state
    entity_id: binary_sensor.guest_mode
    state: 'off'
  - condition: state
    entity_id: binary_sensor.kids_home_alone
    state: 'off'
  action:
  - service: script.motion_detected
    data:
      sensor: "{{ ( expand('group.all_doors')\n  | sort(reverse=true, attribute='last_changed')\n
        \ | map(attribute='entity_id')\n  | list )[0] }}"
  mode: single
- id: '1620915049409'
  alias: Led Margot Aan
  description: ''
  trigger:
  - platform: device
    domain: mqtt
    device_id: a636e64789ffd182a085e6755fdfb9f6
    type: action
    subtype: single
    discovery_id: 0x00158d000446780b action_single
  condition:
  - condition: device
    device_id: ed641ace598140ab84eff39005e4e6d0
    domain: light
    entity_id: light.margot_led_bed
    type: is_off
  action:
  - service: scene.turn_on
    data: {}
    target:
      entity_id: scene.default_led_margot
  mode: single
- id: '1620915170554'
  alias: Led Margot Uit
  description: ''
  trigger:
  - platform: device
    domain: mqtt
    device_id: a636e64789ffd182a085e6755fdfb9f6
    type: action
    subtype: single
    discovery_id: 0x00158d000446780b action_single
  condition:
  - condition: device
    device_id: ed641ace598140ab84eff39005e4e6d0
    domain: light
    entity_id: light.margot_led_bed
    type: is_on
  action:
  - service: light.turn_off
    data: {}
    target:
      entity_id: light.margot_led_bed
  mode: single
- id: '1620915215402'
  alias: Switch Margot Shaken
  description: ''
  trigger:
  - platform: device
    domain: mqtt
    device_id: a636e64789ffd182a085e6755fdfb9f6
    type: action
    subtype: shake
    discovery_id: 0x00158d000446780b action_shake
  condition: []
  action:
  - data_template:
      effect: '{{ state_attr("light.margot_led_bed", "effect_list") | random }}'
      entity_id: light.margot_led_bed
      rgb_color:
      - '{{ (range(0, 255)|random) }}'
      - '{{ (range(0, 255)|random) }}'
      - '{{ (range(0, 255)|random) }}'
      transition: '{{ (range(1, 3)|random) }}'
    entity_id: light.margot_led_bed
    service: light.turn_on
  mode: single
- id: '1624886218945'
  alias: Garagepoort open/dicht
  description: ''
  trigger:
  - platform: tag
    tag_id: 330a6459-b36f-4037-b948-01a2905886e5
  - platform: device
    domain: mqtt
    device_id: 04c67cc06f3de77db780841d2cb26e25
    type: action
    subtype: single
    discovery_id: 0x00158d0001e83345 action_single
  condition: []
  action:
  - service: cover.toggle
    data: {}
    target:
      entity_id: cover.garagepoort
  mode: single
- id: '1626411842297'
  alias: 'Notify: Wekelijks Rapport Waterpomp '
  description: ''
  trigger:
  - platform: time
    at: '23:55:00'
  condition:
  - condition: time
    weekday:
    - sun
  action:
  - service: notify.hazilverberkenstraatbot
    data:
      title: 'Wekelijks Rapport Waterpomp '
      message: "{% if ((states('sensor.waterpump_water_usage_weekly_normaal') |\n
        \       float)>(state_attr('sensor.waterpump_water_usage_weekly_normaal',
        'last_period') | float)) -%}\n  Water verbruik is gestegen met {{(((states('sensor.waterpump_water_usage_weekly_normaal')
        | float)-(state_attr('sensor.waterpump_water_usage_weekly_normaal', 'last_period')
        | float))*100/(state_attr('sensor.waterpump_water_usage_weekly_normaal', 'last_period')
        | float)) | round(1)}}% vergeleken met vorige week, met {{ (states('sensor.waterpump_water_usage_weekly_normaal')
        \ | float(0)- state_attr('sensor.waterpump_water_usage_weekly_normaal', 'last_period')
        | float) | round (0) }} liter\n{%- else -%}\n  Water verbruik is gedaald met
        {{(((state_attr('sensor.waterpump_water_usage_weekly_normaal', 'last_period')
        | float)-(states('sensor.waterpump_water_usage_weekly_normaal') | float))*100/(state_attr('sensor.waterpump_water_usage_weekly_normaal',
        'last_period') | float)) | round(1)}}% vergeleken met vorige week, met {{
        (state_attr('sensor.waterpump_water_usage_weekly_normaal', 'last_period')
        \ | float - states('sensor.waterpump_water_usage_weekly_normaal') | float)
        | round (0) }} liter\n{%- endif %}  Deze week: {{ states('sensor.waterpump_water_usage_weekly_normaal')
        | round (0) }} liter Vorige week: {{ state_attr('sensor.waterpump_water_usage_weekly_normaal',
        'last_period') | round (0) }} liter"
  mode: single
- id: '1629181945984'
  alias: 'Set Mode: Night - Deactivate Weekday Vacation'
  description: ''
  trigger:
  - platform: time
    at: input_datetime.night_mode_weekday_vacation_end
  - platform: homeassistant
    event: start
  condition:
  - condition: time
    after: input_datetime.night_mode_weekday_vacation_end
    before: input_datetime.night_mode_start
    weekday:
    - mon
    - tue
    - wed
    - thu
    - fri
  - condition: state
    entity_id: binary_sensor.workday_sensor
    state: 'on'
  - condition: state
    state: 'on'
    entity_id: binary_sensor.school_vacation
  action:
  - service: script.deactivate_night_mode
    data: {}
  mode: single
- id: '1637296761179'
  alias: 'Motion Detected: Voordeur'
  description: ''
  trigger:
  - type: motion
    platform: device
    device_id: 65962faa56765255f81eb0cdd734dbbb
    entity_id: binary_sensor.motion_voordeur
    domain: binary_sensor
  - type: opened
    platform: device
    device_id: 1ac8659c00be40d5bd1b34917eff12ff
    entity_id: binary_sensor.voordeur
    domain: binary_sensor
  condition:
  - condition: or
    conditions:
    - condition: state
      entity_id: sensor.motion_voordeur_illuminance_lux
      state: true
      attribute: dark
    - condition: state
      entity_id: sun.sun
      state: below_horizon
  action:
  - service: light.turn_on
    target:
      entity_id: light.voordeur
  mode: restart
- id: '1637297629968'
  alias: 'Motion Detected: Gang Eerste Verdiep'
  description: ''
  trigger:
  - platform: state
    entity_id:
    - binary_sensor.motion_gang_eerste_1
    - binary_sensor.motion_gang_eerste_2
    to: 'on'
  - platform: state
    entity_id:
    - sensor.motion_gang_eerste_2_illuminance_lux
    - sensor.motion_gang_eerste_1_illuminance_lux
  condition:
  - condition: state
    entity_id: input_boolean.disable_motion_trigger_light_gang_eerste_verdiep
    state: 'off'
  - condition: or
    conditions:
    - condition: numeric_state
      entity_id: sensor.motion_gang_eerste_2_illuminance_lux
      below: 4
    - condition: numeric_state
      entity_id: sensor.motion_gang_eerste_1_illuminance_lux
      below: 4
  - condition: or
    conditions:
    - condition: state
      entity_id: binary_sensor.motion_gang_eerste_1
      state: 'on'
    - condition: state
      entity_id: binary_sensor.motion_gang_eerste_2
      state: 'on'
  action:
  - choose:
    - conditions:
      - condition: state
        entity_id: binary_sensor.night_mode
        state: 'on'
      sequence:
      - service: light.turn_on
        target:
          entity_id: light.gang_eerste_verdiep
        data:
          brightness_pct: 5
    - conditions:
      - condition: time
        after: '19:00'
        before: '21:00'
      sequence:
      - service: light.turn_on
        target:
          entity_id: light.gang_eerste_verdiep
        data:
          brightness_pct: 10
    default:
    - service: light.turn_on
      target:
        entity_id: light.gang_eerste_verdiep
      data:
        brightness_pct: 100
  mode: restart
- id: '1637308836739'
  alias: 'Motion Detected: Keukendeur / Achterdeur'
  description: ''
  trigger:
  - type: opened
    platform: device
    device_id: 001630fa334040cbb0b0c8a42f35ab8c
    entity_id: binary_sensor.achterdeur
    domain: binary_sensor
  - type: opened
    platform: device
    device_id: 051e5a9302f34036b5f10fe9276bdb14
    entity_id: binary_sensor.keukendeur
    domain: binary_sensor
  - platform: state
    entity_id: binary_sensor.motion_achterdeur
    to: 'on'
  condition:
  - condition: state
    entity_id: sun.sun
    state: below_horizon
  action:
  - service: light.turn_on
    target:
      entity_id: light.achterdeur
  mode: restart
- id: '1637566486158'
  alias: 'Motion Detected: Gang Zolder'
  description: ''
  trigger:
  - platform: state
    entity_id:
    - binary_sensor.motion_gang_zolder
    to: 'on'
  condition:
  - condition: state
    entity_id: input_boolean.disable_motion_trigger_light_gang_zolder
    state: 'off'
  - condition: numeric_state
    entity_id: sensor.motion_gang_zolder_illuminance_lux
    below: '20'
  action:
  - service: light.turn_on
    target:
      entity_id: light.gang_zolder
    data: {}
  mode: restart
- id: '1637566756782'
  alias: 'Motion Detected: WC Boven'
  description: ''
  trigger:
  - platform: state
    entity_id:
    - binary_sensor.motion_wc_boven
    to: 'on'
  condition:
  - condition: state
    entity_id: binary_sensor.night_mode
    state: 'off'
  - condition: numeric_state
    entity_id: sensor.motion_gang_eerste_2_illuminance_lux
    below: 4
  action:
  - service: light.turn_on
    target:
      entity_id: light.wc_boven
    data: {}
  mode: restart
- id: '1637583933082'
  alias: 'Motion Detected: Inkom'
  description: ''
  trigger:
  - type: motion
    platform: device
    device_id: f68bfbe3f703ba973aab6201b3dd5e08
    entity_id: binary_sensor.motion_inkom_1
    domain: binary_sensor
  - type: motion
    platform: device
    device_id: 5fe92c8363e1bb6ace09aadc556d3674
    entity_id: binary_sensor.motion_inkom_2
    domain: binary_sensor
  condition:
  - condition: state
    entity_id: input_boolean.disable_motion_trigger_light_inkom
    state: 'off'
  - condition: or
    conditions:
    - condition: numeric_state
      entity_id: sensor.motion_inkom_1_illuminance_lux
      below: '20'
    - condition: numeric_state
      entity_id: sensor.motion_inkom_2_illuminance_lux
      below: '20'
    - condition: state
      entity_id: sun.sun
      state: below_horizon
  action:
  - service: light.turn_on
    target:
      entity_id: light.inkom
    data: {}
  mode: restart
- id: '1637833773538'
  alias: 'Climate: Warning low water pressure'
  description: ''
  trigger:
  - platform: template
    value_template: '{{ states(''sensor.10_040239_ch_water_pressure'') < ''1.5'' }}'
    for: 00:30:00
  condition: []
  action:
  - service: notify.hazilverberkenstraatbot_philippe
    data:
      message: Low Water Pressure Heating
  mode: single
- id: '1639208368937'
  alias: 'Set Mode: Kids Alone Home - Activate'
  description: ''
  trigger:
  - platform: device
    domain: mqtt
    device_id: a3caf214b66a464d92f094d79804725b
    type: action
    subtype: 'on'
    discovery_id: 0x000d6ffffeaac6a7 action_on
  condition: []
  action:
  - service: input_boolean.turn_on
    target:
      entity_id: input_boolean.kids_home_alone
    data: {}
  - service: script.activate_kids_home_alone_mode
    data: {}
  mode: single
- id: '1639820224754'
  alias: Woonkamer Remote
  description: ''
  use_blueprint:
    path: EPMatt/ikea_e1524_e1810.yaml
    input:
      controller_device: 4604f157bce60476bd8923950d2725de
      action_button_center_short:
      - service: scene.turn_on
        target:
          entity_id: scene.woonkamer_off
        data:
          transition: 120
      - service: light.turn_off
        target:
          entity_id: light.led_stars_light_led
        data: {}
      integration: Zigbee2MQTT
      action_button_up_short:
      - service: scene.turn_on
        target:
          entity_id: scene.woonkamer_eve
        data:
          transition: 120
      action_button_down_short:
      - service: scene.turn_on
        target:
          entity_id: scene.woonkamer_evening
        data:
          transition: 120
      helper_last_controller_event: input_text.woonkamer_remote_helper_last_controller_event
      controller_entity: sensor.woonkamer_scene_5_button_action
- id: '1639822020752'
  alias: 'Motion Clear: Gang Eerste Verdiep'
  description: ''
  trigger:
  - platform: state
    entity_id: binary_sensor.motion_gang_eerste
    to: 'off'
    for:
      hours: 0
      minutes: 2
      seconds: 0
  condition: []
  action:
  - service: light.turn_off
    target:
      entity_id: light.gang_eerste_verdiep
    data:
      transition: 15
  mode: single
- id: '1639822143530'
  alias: 'Motion Clear: Gang Zolder'
  description: ''
  trigger:
  - platform: state
    entity_id: binary_sensor.motion_gang_zolder
    to: 'off'
    for:
      hours: 0
      minutes: 1
      seconds: 5
  condition: []
  action:
  - service: light.turn_off
    target:
      entity_id: light.gang_zolder
  mode: single
- id: '1639822538473'
  alias: 'Motion Clear: Inkom'
  description: ''
  trigger:
  - platform: state
    entity_id: binary_sensor.motion_inkom
    to: 'off'
    for:
      hours: 0
      minutes: 1
      seconds: 5
  condition: []
  action:
  - service: light.turn_off
    target:
      entity_id: light.inkom
  mode: single
- id: '1639822814602'
  alias: 'Motion Clear: Keukendeur / Achterdeur'
  description: ''
  trigger:
  - platform: state
    entity_id: binary_sensor.motion_achter
    to: 'off'
    for:
      hours: 0
      minutes: 5
      seconds: 0
  condition: []
  action:
  - service: light.turn_off
    target:
      entity_id: light.achterdeur
  mode: single
- id: '1639822971119'
  alias: 'Motion Clear: Voordeur'
  description: ''
  trigger:
  - type: no_motion
    platform: device
    device_id: 65962faa56765255f81eb0cdd734dbbb
    entity_id: binary_sensor.motion_voordeur
    domain: binary_sensor
    for:
      hours: 0
      minutes: 5
      seconds: 0
  condition: []
  action:
  - service: light.turn_off
    target:
      entity_id: light.voordeur
    data: {}
  mode: single
- id: '1639857515506'
  alias: 'Motion Clear: WC Boven'
  description: ''
  trigger:
  - platform: state
    entity_id: binary_sensor.motion_wc_boven
    for:
      hours: 0
      minutes: 1
      seconds: 5
  condition: []
  action:
  - service: light.turn_off
    target:
      entity_id: light.wc_boven
    data: {}
  mode: single
- id: '1639857800187'
  alias: 'Motion Clear: Speelkamer'
  description: ''
  trigger:
  - platform: state
    entity_id: binary_sensor.motion_speelkamer
    for:
      hours: 0
      minutes: 10
      seconds: 0
  condition: []
  action:
  - service: light.turn_off
    target:
      entity_id:
      - light.speelkamer
      - light.wled_speelkamer
  mode: single
- id: '1639858209825'
  alias: 'Lights: Speelkamer'
  description: ''
  trigger:
  - platform: state
    entity_id: light.speelkamer
  condition: []
  action:
  - choose:
    - conditions:
      - condition: state
        entity_id: light.speelkamer
        state: 'on'
      sequence:
      - service: scene.turn_on
        target:
          entity_id: scene.default_speelkamer
    - conditions:
      - condition: state
        entity_id: light.speelkamer
        state: 'off'
      sequence:
      - service: light.turn_off
        target:
          entity_id: light.wled_speelkamer
    default: []
  mode: single
- id: '1640150782849'
  alias: 'Climate: Set Inkom temperature based demand of Woonkamer'
  description: ''
  trigger:
  - platform: state
    entity_id: sensor.04_231772_heat_demand
  - platform: state
    entity_id:
    - climate.inkom
    attribute: preset_mode
    to: none
    for:
      hours: 0
      minutes: 0
      seconds: 30
  condition:
  - condition: state
    entity_id: climate.controller
    state: heat
    for:
      hours: 0
      minutes: 1
      seconds: 0
  action:
  - choose:
    - conditions:
      - condition: numeric_state
        entity_id: sensor.04_231772_heat_demand
        above: '45'
      sequence:
      - service: ramses_cc.set_zone_mode
        data:
          entity_id: climate.inkom
          setpoint: 18
          mode: temporary_override
          duration:
            hours: 0
            minutes: 45
            seconds: 0
    default:
    - service: ramses_cc.reset_zone_mode
      data:
        entity_id: climate.inkom
  mode: single
- id: '1643664917297'
  alias: 'Webhook: Mealie'
  description: ''
  trigger:
  - platform: webhook
    webhook_id: mealie
  condition: []
  action:
  - service: input_text.set_value
    data:
      value: '{{ trigger.json["name"] }}'
    target:
      entity_id: input_text.mealie_meal_of_the_day
  mode: single
- id: '1655755800020'
  alias: 'Motion Detected: Garage'
  description: ''
  trigger:
  - type: motion
    platform: device
    device_id: 3fc7bc82e3c92c43eab4d08be8e949f0
    entity_id: binary_sensor.motion_garagepoort
    domain: binary_sensor
  condition:
  - condition: and
    conditions:
    - condition: numeric_state
      entity_id: sensor.motion_garagepoort_temperature
      below: 25
    - condition: or
      conditions:
      - condition: state
        entity_id: sun.sun
        state: below_horizon
      - condition: state
        entity_id: sensor.motion_garagepoort_lux
        state: true
        attribute: dark
    - condition: not
      conditions:
      - condition: state
        entity_id: switch.garage_terras_verlichting_relay1
        state: 'on'
  action:
  - service: light.turn_on
    target:
      entity_id:
      - light.verlichting_garage_voorkant
    data: {}
  mode: restart
- id: '1655755894345'
  alias: 'Motion Clear: Garage'
  description: ''
  trigger:
  - type: no_motion
    platform: device
    device_id: 3fc7bc82e3c92c43eab4d08be8e949f0
    entity_id: binary_sensor.motion_garagepoort
    domain: binary_sensor
    for:
      hours: 0
      minutes: 5
      seconds: 0
  condition: []
  action:
  - service: light.turn_off
    target:
      entity_id:
      - light.verlichting_garage_voorkant
    data: {}
  mode: single
- id: '1657607886471'
  alias: 'Night: Toggle Kitchen Boiler'
  description: ''
  trigger:
  - platform: time
    at: input_datetime.eco_mode_start
  - platform: time
    at: input_datetime.eco_mode_end
  - platform: homeassistant
    event: start
  condition: []
  action:
  - service: script.eco_manage_boiler_keuken
    data: {}
  mode: single
- id: '1658228894697'
  alias: 'Notify: Temperatuur verschil'
  description: ''
  trigger:
  - platform: state
    entity_id:
    - binary_sensor.buiten_kouder
    - binary_sensor.buiten_warmer
    - sensor.house_mode
    for:
      hours: 0
      minutes: 5
      seconds: 0
  condition:
  - condition: numeric_state
    entity_id: sensor.gang_eerste_temperature
    above: '21'
  - condition: state
    entity_id: sensor.house_mode
    state: home
  action:
  - if:
    - condition: state
      entity_id: binary_sensor.buiten_warmer
      state: 'on'
    - condition: state
      entity_id: input_boolean.temperatuur_buiten_warmer
      state: 'off'
    then:
    - service: input_boolean.turn_on
      data: {}
      target:
        entity_id:
        - input_boolean.temperatuur_buiten_warmer
    - service: script.notify_temperatuur_verschil_hoger
      data: {}
    - service: input_boolean.turn_off
      data: {}
      target:
        entity_id:
        - input_boolean.temperatuur_buiten_kouder
  - if:
    - condition: state
      entity_id: binary_sensor.buiten_kouder
      state: 'on'
    - condition: state
      entity_id: input_boolean.temperatuur_buiten_kouder
      state: 'off'
    then:
    - service: input_boolean.turn_on
      data: {}
      target:
        entity_id:
        - input_boolean.temperatuur_buiten_kouder
    - service: script.notify_temperatuur_verschil_lager
      data: {}
    - service: input_boolean.turn_off
      data: {}
      target:
        entity_id:
        - input_boolean.temperatuur_buiten_warmer
  mode: single
- id: '1661058012382'
  alias: 'Vacuum: Notify Error detected'
  description: ''
  trigger:
  - platform: state
    entity_id:
    - vacuum.dalek
    to: Error
  condition: []
  action:
  - service: notify.hazilverberkenstraatbot
    data_template:
      message: 'Dalek heeft een fout:  {{ state_attr(''vacuum.dalek'', ''error'')
        }} '
  mode: single
- id: '1661058134854'
  alias: 'Vacuum: Notify Inactive'
  description: ''
  trigger:
  - platform: state
    entity_id:
    - vacuum.dalek
    to: Inactive
    for:
      hours: 0
      minutes: 15
      seconds: 0
  condition: []
  action:
  - service: vacuum.return_to_base
    data: {}
    target:
      entity_id: vacuum.dalek
  - service: notify.hazilverberkenstraatbot
    data:
      message: Dalek is inactive - proberen terug te plaatsen naar het station
  mode: single
- id: '1662971324263'
  alias: 'Climate: Set Margot slaapkamer temperature'
  description: ''
  trigger:
  - platform: template
    value_template: '{% set time = states(''sensor.time'') %} {{ (''15:20'' == time
      and (now().weekday() == 0 )) or (''16:00'' == time and (now().weekday() == 1
      or now().weekday() == 3 )) }}'
  - platform: homeassistant
    event: start
  - platform: state
    entity_id: sensor.house_mode
  - platform: state
    entity_id:
    - climate.margot
    attribute: preset_mode
    to: none
    for:
      hours: 0
      minutes: 1
      seconds: 0
  condition:
  - condition: state
    entity_id: binary_sensor.school_vacation
    state: 'off'
  - condition: template
    value_template: '{{ states(''sensor.house_mode'') in [''kids home alone'', ''guest'',
      ''home''] }}'
  - condition: state
    entity_id: climate.margot
    state: heat
  - condition: numeric_state
    entity_id: climate.margot
    attribute: current_temperature
    below: 16
  - condition: state
    entity_id: binary_sensor.workday_sensor
    state: 'on'
  action:
  - choose:
    - conditions:
      - condition: or
        conditions:
        - condition: template
          value_template: '{% set time = states(''sensor.time'') %} {{ ''15:10'' <=
            time < ''17:30'' and (now().weekday() == 0 ) }}'
        - condition: template
          value_template: '{% set time = states(''sensor.time'') %} {{ ''15:50'' <=
            time < ''17:30'' and (now().weekday() == 1 or now().weekday() == 3 ) }}'
      sequence:
      - service: ramses_cc.set_zone_mode
        data:
          entity_id: climate.margot
          mode: temporary_override
          setpoint: 18
          duration:
            minutes: 45
    default:
    - service: ramses_cc.reset_zone_mode
      data:
        entity_id: climate.margot
  mode: single
- id: '1663239985985'
  alias: 'Light: Toggle Garage Terras Verlichting'
  description: ''
  trigger:
  - platform: tag
    tag_id: aa6ea6da-b5e4-4125-a96c-af4166d850ee
  condition: []
  action:
  - service: light.toggle
    data: {}
    target:
      entity_id: light.garage_terras_verlichting_relay1
  - service: light.turn_off
    data: {}
    target:
      entity_id: light.verlichting_garage_voorkant
  mode: single
- id: '1663572727704'
  alias: 'WFH: toggle'
  description: ''
  trigger:
  - platform: tag
    tag_id: 24afda90-94bf-44c5-8d44-3cf67ee94569
  - platform: state
    entity_id:
    - input_boolean.working_from_home
  condition: []
  action:
  - service: switch.toggle
    data: {}
    target:
      entity_id: switch.laptop_outlet
  - if:
    - condition: template
      value_template: '{{ trigger.entity_id != ''input_boolean.working_from_home''
        }}'
    then:
    - service: input_boolean.toggle
      data: {}
      target:
        entity_id: input_boolean.working_from_home
  mode: single
- id: '1663664817431'
  alias: 'Notify: BBQ Alert'
  description: ''
  trigger:
  - platform: state
    entity_id:
    - sensor.ibbq_probe_1_grill_alert_temp
    - sensor.ibbq_probe_2_target_alert_temp
    - sensor.ibbq_temperature_probe_3
    - sensor.ibbq_temperature_probe_4
    to: Alert
    for:
      hours: 0
      minutes: 1
      seconds: 0
  condition: []
  action:
  - service: notify.mobile_app_pixel_5
    data:
      message: Grill needs your attention.
      data:
        actions:
        - action: URI
          title: Open BBQ View
          uri: /overzicht-v2/bbq
  mode: single
- id: '1663698242510'
  alias: 'Set Mode: Calendar - School Vacation ON'
  description: ''
  trigger:
  - platform: calendar
    event: start
    offset: -0:0:0
    entity_id: calendar.belgie_feestdagen_schoolvakanties_www_feestdagen_belgie_be
  condition:
  - condition: template
    value_template: '{{ ''vakantie'' in trigger.calendar_event.summary }}'
  action:
  - service: input_boolean.turn_on
    data: {}
    target:
      entity_id: input_boolean.school_vacation
  mode: single
- id: '1663698518517'
  alias: 'Set Mode: Calendar - School Vacation OFF'
  description: ''
  trigger:
  - platform: calendar
    event: end
    offset: -0:0:0
    entity_id: calendar.belgie_feestdagen_schoolvakanties_www_feestdagen_belgie_be
  condition:
  - condition: template
    value_template: '{{ ''vakantie'' in trigger.calendar_event.summary }}'
  action:
  - service: input_boolean.turn_off
    data: {}
    target:
      entity_id: input_boolean.school_vacation
  mode: single
- id: '1663758876615'
  alias: 'Alarm Clock: Trigger - Margot'
  description: ''
  trigger:
  - platform: template
    value_template: "{{ states('sensor.time') == \n    (state_attr('input_datetime.margot_next_alarm',
      'timestamp') - 300)\n         |timestamp_custom('%H:%M', false) }}"
  condition:
  - condition: state
    entity_id: input_boolean.margot_alarm_set
    state: 'on'
  action:
  - service: script.sunrise_wled
    data:
      wled_id: febe_led_bed
      time: 5
  - data: {}
    entity_id: input_boolean.febe_alarm_set
    service: input_boolean.turn_off
  mode: single
- id: '1663931907621'
  alias: 'Notify: WFH still active'
  description: ''
  trigger:
  - platform: time
    at: '19:00:00'
  condition:
  - condition: state
    entity_id: input_boolean.working_from_home
    state: 'on'
  action:
  - variables:
      action_off: '{{ ''OFF_'' ~ context.id }}'
  - service: notify.mobile_app_pixel_5
    data:
      message: WFH is still on. Do you want to turn it off?
      data:
        actions:
        - action: '{{ action_off }}'
          title: Open
  - wait_for_trigger:
    - platform: event
      event_type: mobile_app_notification_action
      event_data:
        action: '{{ action_off }}'
    timeout:
      hours: 0
      minutes: 15
      seconds: 0
      milliseconds: 0
  - alias: Perform the action
    choose:
    - conditions:
      - condition: template
        value_template: '{{ wait.trigger.event.data.action == action_off }}'
      sequence:
      - service: input_boolean.turn_off
        target:
          entity_id: input_boolean.working_from_home
        data: {}
  mode: single
- id: entities_with_low_battery_notification
  alias: 'Notify: Entities with Low Battery Notification'
  description: Create persistent notification if entities with low battery, dismiss
    if none.
  trigger:
  - platform: state
    entity_id: sensor.entities_with_low_battery
    attribute: entity_id
  condition:
  - condition: template
    value_template: '{{ ( trigger.to_state.state | float (0) ) is number and ( trigger.from_state.state
      | float(0) ) is number }}'
  action:
  - if:
    - condition: numeric_state
      entity_id: sensor.entities_with_low_battery
      below: 1
    then:
    - service: persistent_notification.dismiss
      data:
        notification_id: entities_with_low_battery
    else:
    - service: persistent_notification.create
      data:
        notification_id: entities_with_low_battery
        title: Entities with Low Battery
        message: "{% set ns = namespace(result=[]) %} {% for s in expand(state_attr('sensor.entities_with_low_battery',
          'entity_id')) %} {% set ns.result = ns.result + [\n      \"**\" ~ s.name
          ~ \"**\\n\"\n      ~ \"- *entity_id*: \" ~ s.entity_id ~ \"\\n\"\n      ~
          \"- *state*: \" ~ s.state ~ \"\\n\"\n    ]\n  %}\n{% endfor %} {% set ns.result
          = ns.result | sort %}\n  {{ ns.result | join('\\n') }}"
  mode: restart
- id: '1667555674167'
  alias: 'Post: Brievenbus in opened'
  description: ''
  trigger:
  - type: opened
    platform: device
    device_id: 929e2970268be0a5d9826785f924b739
    entity_id: binary_sensor.brievenbus_in_contact
    domain: binary_sensor
  condition: []
  action:
  - service: input_boolean.turn_on
    data: {}
    target:
      entity_id: input_boolean.post
  mode: single
- id: 546462125er
  alias: 'Capaciteitstarief: Max Peak'
  description: ''
  trigger:
  - platform: state
    entity_id:
    - sensor.max_peak
  condition:
  - condition: template
    value_template: '{{  states("sensor.max_peak") | float(0)> states("input_number.max_peak")
      | float(0)}}

      '
  action:
  - service: input_number.set_value
    target:
      entity_id: input_number.max_peak
    data:
      value: '{{ states("sensor.max_peak") | float(0)}}

        '
  mode: parallel
- id: fevefvdvfzsvf
  alias: 'Capaciteitstarief: Max Month Peak'
  description: ''
  trigger:
  - platform: template
    value_template: '{{ (as_timestamp(now()))|timestamp_custom(''%d'', true) | int
      == 1 }}'
  condition: []
  action:
  - choose:
    - conditions:
      - condition: template
        value_template: '{{ (as_timestamp(now()))|timestamp_custom(''%m'', true)|int
          == 2 }}'
      sequence:
      - service: input_number.set_value
        target:
          entity_id: input_number.january_peak
        data:
          value: "{% if states(\"sensor.max_peak\") | float(0)> states(\"input_number.january_peak\")
            | float(0) %}\n  {{ states(\"sensor.max_peak\") }}\n{% else %}\n  2.5\n{%
            endif %}\n"
      - delay:
          seconds: 5
      - service: input_number.set_value
        target:
          entity_id: input_number.max_peak
        data:
          value: 0.1
      - delay:
          minutes: 1
      - service: input_number.set_value
        target:
          entity_id: input_number.february_peak
        data:
          value: 2.5
    - conditions:
      - condition: template
        value_template: '{{ (as_timestamp(now()))|timestamp_custom(''%m'', true)|int
          == 3 }}'
      sequence:
      - service: input_number.set_value
        target:
          entity_id: input_number.february_peak
        data:
          value: "{% if states(\"sensor.max_peak\") | float(0)> states(\"input_number.february_peak\")
            | float(0) %}\n  {{ states(\"sensor.max_peak\") }}\n{% else %}\n  2.5\n{%
            endif %}\n"
      - delay:
          seconds: 5
      - service: input_number.set_value
        target:
          entity_id: input_number.max_peak
        data:
          value: 0.1
      - delay:
          minutes: 1
      - service: input_number.set_value
        target:
          entity_id: input_number.march_peak
        data:
          value: 2.5
    - conditions:
      - condition: template
        value_template: '{{ (as_timestamp(now()))|timestamp_custom(''%m'', true)|int
          == 4 }}'
      sequence:
      - service: input_number.set_value
        target:
          entity_id: input_number.march_peak
        data:
          value: "{% if states(\"sensor.max_peak\") | float(0)> states(\"input_number.march_peak\")
            | float(0) %}\n  {{ states(\"sensor.max_peak\") }}\n{% else %}\n  2.5\n{%
            endif %}\n"
      - delay:
          seconds: 5
      - service: input_number.set_value
        target:
          entity_id: input_number.max_peak
        data:
          value: 0.1
      - delay:
          minutes: 1
      - service: input_number.set_value
        target:
          entity_id: input_number.april_peak
        data:
          value: 2.5
    - conditions:
      - condition: template
        value_template: '{{ (as_timestamp(now()))|timestamp_custom(''%m'', true)|int
          == 5 }}'
      sequence:
      - service: input_number.set_value
        target:
          entity_id: input_number.april_peak
        data:
          value: "{% if states(\"sensor.max_peak\") | float(0)> states(\"input_number.april_peak\")
            | float(0) %}\n  {{ states(\"sensor.max_peak\") }}\n{% else %}\n  2.5\n{%
            endif %}\n"
      - delay:
          seconds: 5
      - service: input_number.set_value
        target:
          entity_id: input_number.max_peak
        data:
          value: 0.1
      - delay:
          minutes: 1
      - service: input_number.set_value
        target:
          entity_id: input_number.may_peak
        data:
          value: 2.5
    - conditions:
      - condition: template
        value_template: '{{ (as_timestamp(now()))|timestamp_custom(''%m'', true)|int
          == 6 }}'
      sequence:
      - service: input_number.set_value
        target:
          entity_id: input_number.may_peak
        data:
          value: "{% if states(\"sensor.max_peak\") | float(0)> states(\"input_number.may_peak\")
            | float(0) %}\n  {{ states(\"sensor.max_peak\") }}\n{% else %}\n  2.5\n{%
            endif %}\n"
      - delay:
          seconds: 5
      - service: input_number.set_value
        target:
          entity_id: input_number.max_peak
        data:
          value: 0.1
      - delay:
          minutes: 1
      - service: input_number.set_value
        target:
          entity_id: input_number.june_peak
        data:
          value: 2.5
    - conditions:
      - condition: template
        value_template: '{{ (as_timestamp(now()))|timestamp_custom(''%m'', true)|int
          == 7 }}'
      sequence:
      - service: input_number.set_value
        target:
          entity_id: input_number.june_peak
        data:
          value: "{% if states(\"sensor.max_peak\") | float(0)> states(\"input_number.june_peak\")
            | float(0) %}\n  {{ states(\"sensor.max_peak\") }}\n{% else %}\n  2.5\n{%
            endif %}\n"
      - delay:
          seconds: 5
      - service: input_number.set_value
        target:
          entity_id: input_number.max_peak
        data:
          value: 0.1
      - delay:
          minutes: 1
      - service: input_number.set_value
        target:
          entity_id: input_number.july_peak
        data:
          value: 2.5
    - conditions:
      - condition: template
        value_template: '{{ (as_timestamp(now()))|timestamp_custom(''%m'', true)|int
          == 8 }}'
      sequence:
      - service: input_number.set_value
        target:
          entity_id: input_number.july_peak
        data:
          value: "{% if states(\"sensor.max_peak\") | float(0)> states(\"input_number.july_peak\")
            | float(0) %}\n  {{ states(\"sensor.max_peak\") }}\n{% else %}\n  2.5\n{%
            endif %}\n"
      - delay:
          seconds: 5
      - service: input_number.set_value
        target:
          entity_id: input_number.max_peak
        data:
          value: 0.1
      - delay:
          minutes: 1
      - service: input_number.set_value
        target:
          entity_id: input_number.august_peak
        data:
          value: 2.5
    - conditions:
      - condition: template
        value_template: '{{ (as_timestamp(now()))|timestamp_custom(''%m'', true)|int
          == 9 }}'
      sequence:
      - service: input_number.set_value
        target:
          entity_id: input_number.august_peak
        data:
          value: "{% if states(\"sensor.max_peak\") | float(0)> states(\"input_number.august_peak\")
            | float(0) %}\n  {{ states(\"sensor.max_peak\") }}\n{% else %}\n  2.5\n{%
            endif %}\n"
      - delay:
          seconds: 5
      - service: input_number.set_value
        target:
          entity_id: input_number.max_peak
        data:
          value: 0.1
      - delay:
          minutes: 1
      - service: input_number.set_value
        target:
          entity_id: input_number.september_peak
        data:
          value: 2.5
    - conditions:
      - condition: template
        value_template: '{{ (as_timestamp(now()))|timestamp_custom(''%m'', true)|int
          == 10 }}'
      sequence:
      - service: input_number.set_value
        target:
          entity_id: input_number.september_peak
        data:
          value: "{% if states(\"sensor.max_peak\") | float(0)> states(\"input_number.september_peak\")
            | float(0) %}\n  {{ states(\"sensor.max_peak\") }}\n{% else %}\n  2.5\n{%
            endif %}\n"
      - delay:
          seconds: 5
      - service: input_number.set_value
        target:
          entity_id: input_number.max_peak
        data:
          value: 0.1
      - delay:
          minutes: 1
      - service: input_number.set_value
        target:
          entity_id: input_number.october_peak
        data:
          value: 2.5
    - conditions:
      - condition: template
        value_template: '{{ (as_timestamp(now()))|timestamp_custom(''%m'', true)|int
          == 11 }}'
      sequence:
      - service: input_number.set_value
        target:
          entity_id: input_number.october_peak
        data:
          value: "{% if states(\"sensor.max_peak\") | float(0)> states(\"input_number.october_peak\")
            | float(0) %}\n  {{ states(\"sensor.max_peak\") }}\n{% else %}\n  2.5\n{%
            endif %}\n"
      - delay:
          seconds: 5
      - service: input_number.set_value
        target:
          entity_id: input_number.max_peak
        data:
          value: 0.1
      - delay:
          minutes: 1
      - service: input_number.set_value
        target:
          entity_id: input_number.november_peak
        data:
          value: 2.5
    - conditions:
      - condition: template
        value_template: '{{ (as_timestamp(now()))|timestamp_custom(''%m'', true)|int
          == 12 }}'
      sequence:
      - service: input_number.set_value
        target:
          entity_id: input_number.november_peak
        data:
          value: "{% if states(\"sensor.max_peak\") | float(0)> states(\"input_number.november_peak\")
            | float(0) %}\n  {{ states(\"sensor.max_peak\") }}\n{% else %}\n  2.5\n{%
            endif %}\n"
      - delay:
          seconds: 5
      - service: input_number.set_value
        target:
          entity_id: input_number.max_peak
        data:
          value: 0.1
      - delay:
          minutes: 1
      - service: input_number.set_value
        target:
          entity_id: input_number.december_peak
        data:
          value: 2.5
    default:
    - service: input_number.set_value
      target:
        entity_id: input_number.december_peak
      data:
        value: "{% if states(\"sensor.max_peak\") | float(0)> states(\"input_number.december_peak\")
          | float(0) %}\n  {{ states(\"sensor.max_peak\") }}\n{% else %}\n  2.5\n{%
          endif %}\n"
    - delay:
        seconds: 5
    - service: input_number.set_value
      target:
        entity_id: input_number.max_peak
      data:
        value: 0.1
    - delay:
        minutes: 1
    - service: input_number.set_value
      target:
        entity_id: input_number.january_peak
      data:
        value: 2.5
  mode: single
- id: '1667977999747'
  alias: 'Set Mode: Calendar - Philippe Vacation ON'
  description: ''
  trigger:
  - platform: calendar
    event: start
    offset: 0:0:0
    entity_id: calendar.delodderp_gmail_com
  condition:
  - condition: template
    value_template: '{{ ''verlof'' in trigger.calendar_event.summary | lower }}'
  action:
  - service: input_boolean.turn_on
    data: {}
    target:
      entity_id: input_boolean.philippe_vacation
  mode: single
- id: '1667978119665'
  alias: 'Set Mode: Calendar - Philippe Vacation OFF'
  description: ''
  trigger:
  - platform: calendar
    event: end
    offset: 0:0:0
    entity_id: calendar.delodderp_gmail_com
  condition:
  - condition: template
    value_template: '{{ ''verlof'' in trigger.calendar_event.summary | lower }}'
  action:
  - service: input_boolean.turn_off
    data: {}
    target:
      entity_id: input_boolean.philippe_vacation
  mode: single
- id: '1672382881184'
  alias: 'Notify: Gas Consumed Belgium changes to 0'
  description: ''
  trigger:
  - platform: state
    entity_id:
    - sensor.gas_consumed_belgium
    to: '0'
  condition: []
  action:
  - service: notify.mobile_app_pixel_5
    data:
      message: Gas Consumed Belgium changes to 0
  mode: single
- id: '1673989271901'
  alias: 'Set Mode: Kids Alone Home - Deactivate'
  description: ''
  trigger:
  - platform: device
    domain: mqtt
    device_id: a3caf214b66a464d92f094d79804725b
    type: action
    subtype: 'off'
    discovery_id: 0x000d6ffffeaac6a7 action_off
  condition: []
  action:
  - service: input_boolean.turn_off
    data: {}
    target:
      entity_id: input_boolean.kids_home_alone
  - service: script.deactivate_kids_home_alone
    data: {}
  mode: single
- id: '1674567851889'
  alias: 'Home: Isabel or Philippe'
  description: With guest, kids or vacation mode enabled, we only want to deactivate
    it when a know person (device) arrives.
  trigger:
  - platform: state
    entity_id:
    - person.philippe
    - person.isabel
    to: home
    from: not_home
    for:
      hours: 0
      minutes: 0
      seconds: 15
  condition: []
  action:
  - service: script.deactivate_kids_home_alone
    data: {}
  - service: script.deactivate_guest_mode
    data: {}
  - service: script.deactivate_vacation_mode
    data: {}
  mode: single
- id: '1674568429211'
  alias: Away
  description: ''
  trigger:
  - platform: state
    entity_id:
    - binary_sensor.no_one_home
    for:
      hours: 0
      minutes: 0
      seconds: 30
    to: 'on'
    from: 'off'
  condition: []
  action:
  - service: script.set_thermostat_away
    data: {}
  - service: script.leaving
    data: {}
  mode: single
